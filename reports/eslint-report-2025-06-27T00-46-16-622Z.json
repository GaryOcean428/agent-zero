[{"filePath":"/home/braden/Desktop/Dev/zero/webui/components/settings/mcp/client/mcp-servers-store.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'ace' is not defined.","line":17,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":25},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":52,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":52,"endColumn":20,"suggestions":[{"fix":{"range":[1421,1468],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-undef","severity":2,"message":"'settingsModalProxy' is not defined.","line":62,"column":12,"nodeType":"Identifier","messageId":"undef","endLine":62,"endColumn":30},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":115,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":115,"endColumn":20,"suggestions":[{"fix":{"range":[3011,3064],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-undef","severity":2,"message":"'openModal' is not defined.","line":128,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":128,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'openModal' is not defined.","line":138,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":138,"endColumn":16}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { createStore } from \"/js/AlpineStore.js\";\nimport { scrollModal } from \"/js/modals.js\";\nimport sleep from \"/js/sleep.js\";\nimport * as API from \"/js/api.js\";\n\nconst model = {\n  editor: null,\n  servers: [],\n  loading: true,\n  statusCheck: false,\n  serverLog: \"\",\n\n  async initialize() {\n    // Initialize the JSON Viewer after the modal is rendered\n    const container = document.getElementById(\"mcp-servers-config-json\");\n    if (container) {\n      const editor = ace.edit(\"mcp-servers-config-json\");\n\n      const dark = localStorage.getItem(\"darkMode\");\n      if (dark != \"false\") {\n        editor.setTheme(\"ace/theme/github_dark\");\n      } else {\n        editor.setTheme(\"ace/theme/tomorrow\");\n      }\n\n      editor.session.setMode(\"ace/mode/json\");\n      const json = this.getSettingsFieldConfigJson().value;\n      editor.setValue(json);\n      editor.clearSelection();\n      this.editor = editor;\n    }\n\n    this.startStatusCheck();\n  },\n\n  formatJson() {\n    try {\n      // get current content\n      const currentContent = this.editor.getValue();\n\n      // parse and format with 2 spaces indentation\n      const parsed = JSON.parse(currentContent);\n      const formatted = JSON.stringify(parsed, null, 2);\n\n      // update editor content\n      this.editor.setValue(formatted);\n      this.editor.clearSelection();\n\n      // move cursor to start\n      this.editor.navigateFileStart();\n    } catch (error) {\n      console.error(\"Failed to format JSON:\", error);\n      alert(\"Invalid JSON: \" + error.message);\n    }\n  },\n\n  getEditorValue() {\n    return this.editor.getValue();\n  },\n\n  getSettingsFieldConfigJson() {\n    return settingsModalProxy.settings.sections\n      .filter((x) => x.id == \"mcp_client\")[0]\n      .fields.filter((x) => x.id == \"mcp_servers\")[0];\n  },\n\n  onClose() {\n    const val = this.getEditorValue();\n    this.getSettingsFieldConfigJson().value = val;\n    this.stopStatusCheck();\n  },\n\n  async startStatusCheck() {\n    this.statusCheck = true;\n    let firstLoad = true;\n\n    while (this.statusCheck) {\n      await this._statusCheck();\n      if (firstLoad) {\n        this.loading = false;\n        firstLoad = false;\n      }\n      await sleep(3000);\n    }\n  },\n\n  async _statusCheck() {\n    const resp = await API.callJsonApi(\"mcp_servers_status\", null);\n    if (resp.success) {\n      this.servers = resp.status;\n      this.servers.sort((a, b) => a.name.localeCompare(b.name));\n    }\n  },\n\n  async stopStatusCheck() {\n    this.statusCheck = false;\n  },\n\n  async applyNow() {\n    if (this.loading) return;\n    this.loading = true;\n    try {\n      scrollModal(\"mcp-servers-status\");\n      const resp = await API.callJsonApi(\"mcp_servers_apply\", {\n        mcp_servers: this.getEditorValue(),\n      });\n      if (resp.success) {\n        this.servers = resp.status;\n        this.servers.sort((a, b) => a.name.localeCompare(b.name));\n      }\n      this.loading = false;\n      await sleep(100); // wait for ui and scroll\n      scrollModal(\"mcp-servers-status\");\n    } catch (error) {\n      console.error(\"Failed to apply MCP servers:\", error);\n      alert(\"Failed to apply MCP servers: \" + error.message);\n    }\n    this.loading = false;\n  },\n\n  async getServerLog(serverName) {\n    this.serverLog = \"\";\n    const resp = await API.callJsonApi(\"mcp_server_get_log\", {\n      server_name: serverName,\n    });\n    if (resp.success) {\n      this.serverLog = resp.log;\n      openModal(\"settings/mcp/client/mcp-servers-log.html\");\n    }\n  },\n\n  async onToolCountClick(serverName) {\n    const resp = await API.callJsonApi(\"mcp_server_get_detail\", {\n      server_name: serverName,\n    });\n    if (resp.success) {\n      this.serverDetail = resp.detail;\n      openModal(\"settings/mcp/client/mcp-server-tools.html\");\n    }\n  },\n};\n\nconst store = createStore(\"mcpServersStore\", model);\n\nexport { store };\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/index.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":7,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":7,"endColumn":22,"suggestions":[{"fix":{"range":[221,273],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":32,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":32,"endColumn":21,"suggestions":[{"fix":{"range":[1048,1107],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'container' is assigned a value but never used.","line":62,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":62,"endColumn":37},{"ruleId":"no-unused-vars","severity":1,"message":"'statusSection' is assigned a value but never used.","line":63,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":63,"endColumn":32},{"ruleId":"no-unused-vars","severity":1,"message":"'timeDate' is assigned a value but never used.","line":63,"column":93,"nodeType":"Identifier","messageId":"unusedVar","endLine":63,"endColumn":101},{"ruleId":"no-unused-vars","severity":1,"message":"'leftPanel' is assigned a value but never used.","line":120,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":120,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"leftPanel"},"fix":{"range":[3624,3680],"text":""},"desc":"Remove unused variable 'leftPanel'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'rightPanel' is assigned a value but never used.","line":121,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":121,"endColumn":21,"suggestions":[{"messageId":"removeVar","data":{"varName":"rightPanel"},"fix":{"range":[3685,3743],"text":""},"desc":"Remove unused variable 'rightPanel'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":126,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":126,"endColumn":22,"suggestions":[{"fix":{"range":[3941,3990],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":225,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":225,"endColumn":18,"suggestions":[{"fix":{"range":[7360,7387],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":233,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":233,"endColumn":16,"suggestions":[{"fix":{"range":[7507,7557],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":244,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":244,"endColumn":16,"suggestions":[{"fix":{"range":[7922,7980],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":294,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":294,"endColumn":22,"suggestions":[{"fix":{"range":[9350,9408],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":319,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":319,"endColumn":26,"suggestions":[{"fix":{"range":[9962,10015],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":365,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":365,"endColumn":27},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":366,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":366,"endColumn":28,"suggestions":[{"fix":{"range":[11763,11833],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":392,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":392,"endColumn":27},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":393,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":393,"endColumn":28,"suggestions":[{"fix":{"range":[12977,13047],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":401,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":401,"endColumn":22,"suggestions":[{"fix":{"range":[13192,13372],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'resp' is assigned a value but never used.","line":452,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":452,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"resp"},"fix":{"range":[14387,14458],"text":""},"desc":"Remove unused variable 'resp'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'resp' is assigned a value but never used.","line":460,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":460,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"resp"},"fix":{"range":[14610,14706],"text":""},"desc":"Remove unused variable 'resp'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":478,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":478,"endColumn":22,"suggestions":[{"fix":{"range":[15104,15154],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":482,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":482,"endColumn":16,"suggestions":[{"fix":{"range":[15182,15224],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":486,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":486,"endColumn":20,"suggestions":[{"fix":{"range":[15296,15418],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":497,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":497,"endColumn":20,"suggestions":[{"fix":{"range":[15840,15960],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":506,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":506,"endColumn":22,"suggestions":[{"fix":{"range":[16174,16215],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":657,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":657,"endColumn":16,"suggestions":[{"fix":{"range":[21276,21310],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":662,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":662,"endColumn":16,"suggestions":[{"fix":{"range":[21405,21434],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'resp' is assigned a value but never used.","line":669,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":669,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"resp"},"fix":{"range":[21563,21630],"text":""},"desc":"Remove unused variable 'resp'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'resp' is assigned a value but never used.","line":682,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":682,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":684,"column":14,"nodeType":"Identifier","messageId":"unusedVar","endLine":684,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'resp' is assigned a value but never used.","line":693,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":693,"endColumn":27,"suggestions":[{"messageId":"removeVar","data":{"varName":"resp"},"fix":{"range":[22280,22327],"text":""},"desc":"Remove unused variable 'resp'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":700,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":700,"endColumn":23},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":722,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":722,"endColumn":16,"suggestions":[{"fix":{"range":[23366,23434],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":742,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":742,"endColumn":16,"suggestions":[{"fix":{"range":[24035,24096],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":783,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":783,"endColumn":25,"suggestions":[{"fix":{"range":[25483,25540],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":785,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":785,"endColumn":24,"suggestions":[{"fix":{"range":[25570,25600],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":806,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":806,"endColumn":21,"suggestions":[{"fix":{"range":[26261,26343],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":810,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":810,"endColumn":24,"suggestions":[{"fix":{"range":[26467,26540],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":815,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":815,"endColumn":24,"suggestions":[{"fix":{"range":[26711,26783],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":820,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":820,"endColumn":24,"suggestions":[{"fix":{"range":[26952,27025],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":825,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":825,"endColumn":24,"suggestions":[{"fix":{"range":[27198,27272],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":830,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":830,"endColumn":24,"suggestions":[{"fix":{"range":[27449,27524],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":835,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":835,"endColumn":20,"suggestions":[{"fix":{"range":[27684,27728],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":846,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":846,"endColumn":16,"suggestions":[{"fix":{"range":[27932,28210],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":862,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":862,"endColumn":20,"suggestions":[{"fix":{"range":[28356,28409],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":871,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":871,"endColumn":22,"suggestions":[{"fix":{"range":[28698,28776],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":876,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":876,"endColumn":20,"suggestions":[{"fix":{"range":[28848,28901],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":879,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":879,"endColumn":22,"suggestions":[{"fix":{"range":[28982,29060],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":884,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":884,"endColumn":20,"suggestions":[{"fix":{"range":[29135,29190],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":887,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":887,"endColumn":22,"suggestions":[{"fix":{"range":[29279,29359],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1079,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1079,"endColumn":26,"suggestions":[{"fix":{"range":[35263,35463],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1108,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1108,"endColumn":22,"suggestions":[{"fix":{"range":[36045,36085],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1226,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1226,"endColumn":30,"suggestions":[{"fix":{"range":[40510,40582],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1243,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1243,"endColumn":38,"suggestions":[{"fix":{"range":[41278,41325],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1253,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1253,"endColumn":32,"suggestions":[{"fix":{"range":[41682,41739],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1257,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1257,"endColumn":26,"suggestions":[{"fix":{"range":[41899,41942],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1260,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1260,"endColumn":22,"suggestions":[{"fix":{"range":[41974,42012],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1313,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1313,"endColumn":21,"suggestions":[{"fix":{"range":[43604,43686],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":1326,"column":45,"nodeType":"Identifier","messageId":"unusedVar","endLine":1326,"endColumn":46,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[44038,44039],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":1334,"column":45,"nodeType":"Identifier","messageId":"unusedVar","endLine":1334,"endColumn":46,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[44276,44277],"text":""},"desc":"Remove unused variable 'e'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":60,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as msgs from \"./js/messages.js\";\nimport { speech } from \"./js/speech.js\";\n\n// Message handling function\nexport function setMessage(id, type, heading, content, temp, kvps = null) {\n    if (!chatHistory) {\n        console.error('Chat history element not available');\n        return;\n    }\n\n    // Remove existing message with same ID if it exists\n    const existingMessage = chatHistory.querySelector(`[data-message-id=\"${id}\"]`);\n    if (existingMessage) {\n        existingMessage.remove();\n    }\n\n    // Create message container\n    const messageContainer = document.createElement('div');\n    messageContainer.setAttribute('data-message-id', id);\n    messageContainer.classList.add('message-container');\n\n    // Add temporary message styling\n    if (temp) {\n        messageContainer.classList.add('message-temp');\n    }\n\n    // Get the appropriate message handler from messages.js\n    const handler = msgs.getHandler(type);\n    if (handler) {\n        handler(messageContainer, id, type, heading, content, temp, kvps);\n    } else {\n        console.warn(`No handler found for message type: ${type}`);\n        // Fallback to default handler\n        msgs.drawMessageDefault(messageContainer, id, type, heading, content, temp, kvps);\n    }\n\n    // Append to chat history\n    chatHistory.appendChild(messageContainer);\n\n    // Auto-scroll if enabled\n    if (autoScroll) {\n        chatHistory.scrollTop = chatHistory.scrollHeight;\n    }\n\n    return messageContainer;\n}\n\n// Make setMessage available globally\nwindow.setMessage = setMessage;\n\n// Global functions that need to be available early for Alpine.js\nwindow.newChat = async function() {\n    try {\n        setContext(generateGUID());\n        updateAfterScroll();\n    } catch (e) {\n        window.toastFetchError(\"Error creating new chat\", e);\n    }\n};\n\n// These will be initialized after DOM is loaded\nlet leftPanel, rightPanel, container, chatInput, sendButton, chatHistory;\nlet inputSection, statusSection, chatsSection, tasksSection, progressBar, autoScrollSwitch, timeDate;\n\nlet autoScroll = true;\nlet context = \"\";\nlet connectionStatus = false\n\n// Initialize the toggle button\nsetupSidebarToggle();\n// Initialize tabs\nsetupTabs();\n\nfunction isMobile() {\n    return window.innerWidth <= 768;\n}\n\nfunction toggleSidebar(show) {\n    const overlay = document.getElementById('sidebar-overlay');\n    if (typeof show === 'boolean') {\n        leftPanel.classList.toggle('hidden', !show);\n        rightPanel.classList.toggle('expanded', show); // Fix the toggle logic here\n        overlay.classList.toggle('visible', show);\n    } else {\n        leftPanel.classList.toggle('hidden');\n        rightPanel.classList.toggle('expanded'); // Fix the toggle logic here\n        overlay.classList.toggle('visible', !leftPanel.classList.contains('hidden'));\n    }\n}\n\nfunction handleResize() {\n    const overlay = document.getElementById('sidebar-overlay');\n    \n    // Add null safety checks\n    if (!leftPanel || !rightPanel || !overlay) return;\n    \n    if (isMobile()) {\n        leftPanel.classList.add('hidden');\n        rightPanel.classList.add('expanded');\n        overlay.classList.remove('visible');\n    } else {\n        leftPanel.classList.remove('hidden');\n        rightPanel.classList.remove('expanded');\n        overlay.classList.remove('visible');\n    }\n}\n\n// Moved to DOMContentLoaded\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const overlay = document.getElementById('sidebar-overlay');\n    overlay.addEventListener('click', () => {\n        if (isMobile()) {\n            toggleSidebar(false);\n        }\n    });\n});\n\nfunction setupSidebarToggle() {\n    const leftPanel = document.getElementById('left-panel');\n    const rightPanel = document.getElementById('right-panel');\n    const toggleSidebarButton = document.getElementById('toggle-sidebar');\n    if (toggleSidebarButton) {\n        toggleSidebarButton.addEventListener('click', toggleSidebar);\n    } else {\n        console.error('Toggle sidebar button not found');\n        setTimeout(setupSidebarToggle, 100);\n    }\n}\ndocument.addEventListener('DOMContentLoaded', setupSidebarToggle);\n\nexport async function sendMessage() {\n    try {\n        const message = chatInput.value.trim();\n        const inputAD = Alpine.$data(inputSection);\n        const attachments = inputAD.attachments;\n        const hasAttachments = attachments && attachments.length > 0;\n\n        if (message || hasAttachments) {\n            let response;\n            const messageId = generateGUID();\n\n            // Include attachments in the user message\n            if (hasAttachments) {\n                const attachmentsWithUrls = attachments.map(attachment => {\n                    if (attachment.type === 'image') {\n                        return {\n                            ...attachment,\n                            url: URL.createObjectURL(attachment.file)\n                        };\n                    } else {\n                        return {\n                            ...attachment\n                        };\n                    }\n                });\n\n                // Render user message with attachments\n                setMessage(messageId, 'user', '', message, false, {\n                    attachments: attachmentsWithUrls\n                });\n\n                const formData = new FormData();\n                formData.append('text', message);\n                formData.append('context', context);\n                formData.append('message_id', messageId);\n\n                for (let i = 0; i < attachments.length; i++) {\n                    formData.append('attachments', attachments[i].file);\n                }\n\n                response = await fetch('/message_async', {\n                    method: 'POST',\n                    body: formData\n                });\n            } else {\n                // For text-only messages\n                const data = {\n                    text: message,\n                    context,\n                    message_id: messageId\n                };\n                response = await fetch('/message_async', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(data)\n                });\n            }\n\n            // Handle response\n            const jsonResponse = await response.json();\n            if (!jsonResponse) {\n                toast(\"No response returned.\", \"error\");\n            }\n            // else if (!jsonResponse.ok) {\n            //     if (jsonResponse.message) {\n            //         toast(jsonResponse.message, \"error\");\n            //     } else {\n            //         toast(\"Undefined error.\", \"error\");\n            //     }\n            // }\n            else {\n                setContext(jsonResponse.context);\n            }\n\n            // Clear input and attachments\n            chatInput.value = '';\n            inputAD.attachments = [];\n            inputAD.hasAttachments = false;\n            adjustTextareaHeight();\n        }\n    } catch (e) {\n        toastFetchError(\"Error sending message\", e)\n    }\n}\n\nfunction toastFetchError(text, error) {\n    if (getConnectionStatus()) {\n        toast(`${text}: ${error.message}`, \"error\");\n    } else {\n        toast(`${text} (it seems the backend is not running): ${error.message}`, \"error\");\n    }\n    console.error(text, error);\n}\nwindow.toastFetchError = toastFetchError\n\n// Moved to DOMContentLoaded\n\n\nexport function updateChatInput(text) {\n    console.log('updateChatInput called with:', text);\n\n    // Append text with proper spacing\n    const currentValue = chatInput.value;\n    const needsSpace = currentValue.length > 0 && !currentValue.endsWith(' ');\n    chatInput.value = currentValue + (needsSpace ? ' ' : '') + text + ' ';\n\n    // Adjust height and trigger input event\n    adjustTextareaHeight();\n    chatInput.dispatchEvent(new Event('input'));\n\n    console.log('Updated chat input value:', chatInput.value);\n}\n\nfunction adjustTextareaHeight() {\n    chatInput.style.height = 'auto';\n    chatInput.style.height = (chatInput.scrollHeight) + 'px';\n}\n\nexport const sendJsonData = async function (url, data) {\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    });\n\n    if (!response.ok) {\n        const error = await response.text();\n        throw new Error(error);\n    }\n    const jsonResponse = await response.json();\n    return jsonResponse;\n}\nwindow.sendJsonData = sendJsonData\n\nfunction generateGUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0;\n        const v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nfunction getConnectionStatus() {\n    return connectionStatus\n}\n\nfunction setConnectionStatus(connected) {\n    connectionStatus = connected;\n    try {\n        // Safely get the status icon if it exists\n        const timeDateEl = document.getElementById('time-date');\n        if (timeDateEl) {\n            const statusIcon = timeDateEl.querySelector('.status-icon');\n            if (statusIcon && statusIcon.__x) {\n                statusIcon.__x.$data.connected = connected;\n            }\n        }\n    } catch (error) {\n        console.error('Error updating connection status:', error);\n    }\n}\n\nlet lastLogVersion = 0;\nlet lastLogGuid = \"\"\nlet lastSpokenNo = 0\n\nasync function poll() {\n    let updated = false\n    try {\n        // Get timezone from navigator\n        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n        const response = await sendJsonData(\n            \"/poll\",\n            {\n                log_from: lastLogVersion,\n                context: context || null,\n                timezone: timezone\n            }\n        );\n\n        // Check if the response is valid\n        if (!response) {\n            console.error(\"Invalid response from poll endpoint\");\n            return false;\n        }\n\n        if (!context) setContext(response.context)\n        if (response.context != context) return //skip late polls after context change\n\n        if (lastLogGuid != response.log_guid) {\n            if (chatHistory) {\n                chatHistory.innerHTML = \"\"\n            }\n            lastLogVersion = 0\n        }\n\n        if (lastLogVersion != response.log_version) {\n            updated = true\n            for (const log of response.logs) {\n                const messageId = log.id || log.no; // Use log.id if available\n                setMessage(messageId, log.type, log.heading, log.content, log.temp, log.kvps);\n            }\n            afterMessagesUpdate(response.logs)\n        }\n\n        lastLogVersion = response.log_version;\n        lastLogGuid = response.log_guid;\n\n        updateProgress(response.log_progress, response.log_progress_active)\n\n        //set ui model vars from backend - with Alpine.js safety check\n        if (inputSection && inputSection.__x && inputSection.__x.$data) {\n            inputSection.__x.$data.paused = response.paused;\n        }\n\n        // Update status icon state\n        setConnectionStatus(true)\n\n        // Update chats list and sort by created_at time (newer first) - with Alpine.js safety check\n        if (chatsSection && typeof Alpine !== 'undefined' && Alpine.$data) {\n            try {\n                const chatsAD = Alpine.$data(chatsSection);\n                if (chatsAD) {\n                    const contexts = response.contexts || [];\n                    chatsAD.contexts = contexts.sort((a, b) =>\n                        (b.created_at || 0) - (a.created_at || 0)\n                    );\n                }\n            } catch (error) {\n                console.log('Alpine.js not ready for chats section, skipping update');\n            }\n        }\n\n        // Update tasks list and sort by creation time (newer first) - with Alpine.js safety check\n        const tasksSection = document.getElementById('tasks-section');\n        if (tasksSection && typeof Alpine !== 'undefined' && Alpine.$data) {\n            try {\n                const tasksAD = Alpine.$data(tasksSection);\n                if (tasksAD) {\n                    const tasks = response.tasks || [];\n\n                    // Always update tasks to ensure state changes are reflected\n                    if (tasks.length > 0) {\n                        // Sort the tasks by creation time\n                        const sortedTasks = [...tasks].sort((a, b) =>\n                            (b.created_at || 0) - (a.created_at || 0)\n                        );\n\n                        // Assign the sorted tasks to the Alpine data\n                        tasksAD.tasks = sortedTasks;\n                    } else {\n                        // Make sure to use a new empty array instance\n                        tasksAD.tasks = [];\n                    }\n                }\n            } catch (error) {\n                console.log('Alpine.js not ready for tasks section, skipping update');\n            }\n        }\n\n        lastLogVersion = response.log_version;\n        lastLogGuid = response.log_guid;\n\n    } catch (error) {\n        console.error('Error in polling function:', {\n            message: error.message,\n            stack: error.stack,\n            name: error.name,\n            error: error\n        });\n        setConnectionStatus(false)\n    }\n\n    return updated\n}\n\nfunction afterMessagesUpdate(logs) {\n    if (localStorage.getItem('speech') == 'true') {\n        speakMessages(logs)\n    }\n}\n\nfunction speakMessages(logs) {\n    // log.no, log.type, log.heading, log.content\n    for (let i = logs.length - 1; i >= 0; i--) {\n        const log = logs[i]\n        if (log.type == \"response\") {\n            if (log.no > lastSpokenNo) {\n                lastSpokenNo = log.no\n                speech.speak(log.content)\n                return\n            }\n        }\n    }\n}\n\nfunction updateProgress(progress, active) {\n    if (!progress) progress = \"\"\n    \n    // Add null safety check\n    if (!progressBar) return;\n\n    if (!active) {\n        removeClassFromElement(progressBar, \"shiny-text\")\n    } else {\n        addClassToElement(progressBar, \"shiny-text\")\n    }\n\n    if (progressBar.innerHTML != progress) {\n        progressBar.innerHTML = progress\n    }\n}\n\nwindow.pauseAgent = async function (paused) {\n    try {\n        const resp = await sendJsonData(\"/pause\", { paused: paused, context });\n    } catch (e) {\n        window.toastFetchError(\"Error pausing agent\", e)\n    }\n}\n\nwindow.resetChat = async function (ctxid=null) {\n    try {\n        const resp = await sendJsonData(\"/chat_reset\", { \"context\": ctxid === null ? context : ctxid });\n        if (ctxid === null) updateAfterScroll();\n    } catch (e) {\n        window.toastFetchError(\"Error resetting chat\", e);\n    }\n}\n\nwindow.newChat = async function () {\n    try {\n        setContext(generateGUID());\n        updateAfterScroll()\n    } catch (e) {\n        window.toastFetchError(\"Error creating new chat\", e)\n    }\n}\n\nwindow.killChat = async function (id) {\n    if (!id) {\n        console.error(\"No chat ID provided for deletion\");\n        return;\n    }\n\n    console.log(\"Deleting chat with ID:\", id);\n\n    try {\n        const chatsAD = Alpine.$data(chatsSection);\n        console.log(\"Current contexts before deletion:\", JSON.stringify(chatsAD.contexts.map(c => ({ id: c.id, name: c.name }))));\n\n        // switch to another context if deleting current\n        switchFromContext(id);\n\n        // Delete the chat on the server\n        await sendJsonData(\"/chat_remove\", { context: id });\n\n        // Update the UI manually to ensure the correct chat is removed\n        // Deep clone the contexts array to prevent reference issues\n        const updatedContexts = chatsAD.contexts.filter(ctx => ctx.id !== id);\n        console.log(\"Updated contexts after deletion:\", JSON.stringify(updatedContexts.map(c => ({ id: c.id, name: c.name }))));\n\n        // Force UI update by creating a new array\n        chatsAD.contexts = [...updatedContexts];\n\n        updateAfterScroll();\n\n        toast(\"Chat deleted successfully\", \"success\");\n    } catch (e) {\n        console.error(\"Error deleting chat:\", e);\n        window.toastFetchError(\"Error deleting chat\", e);\n    }\n}\n\nexport function switchFromContext(id){\n    // If we're deleting the currently selected chat, switch to another one first\n    if (context === id) {\n        const chatsAD = Alpine.$data(chatsSection);\n        \n        // Find an alternate chat to switch to if we're deleting the current one\n        let alternateChat = null;\n        for (let i = 0; i < chatsAD.contexts.length; i++) {\n            if (chatsAD.contexts[i].id !== id) {\n                alternateChat = chatsAD.contexts[i];\n                break;\n            }\n        }\n\n        if (alternateChat) {\n            setContext(alternateChat.id);\n        } else {\n            // If no other chats, create a new empty context\n            setContext(generateGUID());\n        }\n    }\n}\n\n// Function to ensure proper UI state when switching contexts\nfunction ensureProperTabSelection(contextId) {\n    // Get current active tab\n    const activeTab = localStorage.getItem('activeTab') || 'chats';\n\n    // First attempt to determine if this is a task or chat based on the task list\n    const tasksSection = document.getElementById('tasks-section');\n    let isTask = false;\n\n    if (tasksSection) {\n        const tasksAD = Alpine.$data(tasksSection);\n        if (tasksAD && tasksAD.tasks) {\n            isTask = tasksAD.tasks.some(task => task.id === contextId);\n        }\n    }\n\n    // If we're selecting a task but are in the chats tab, switch to tasks tab\n    if (isTask && activeTab === 'chats') {\n        // Store this as the last selected task before switching\n        localStorage.setItem('lastSelectedTask', contextId);\n        activateTab('tasks');\n        return true;\n    }\n\n    // If we're selecting a chat but are in the tasks tab, switch to chats tab\n    if (!isTask && activeTab === 'tasks') {\n        // Store this as the last selected chat before switching\n        localStorage.setItem('lastSelectedChat', contextId);\n        activateTab('chats');\n        return true;\n    }\n\n    return false;\n}\n\nwindow.selectChat = async function (id) {\n    if (id === context) return //already selected\n\n    // Check if we need to switch tabs based on the context type\n    const tabSwitched = ensureProperTabSelection(id);\n\n    // If we didn't switch tabs, proceed with normal selection\n    if (!tabSwitched) {\n        // Switch to the new context - this will clear chat history and reset tracking variables\n        setContext(id);\n\n        // Update both contexts and tasks lists to reflect the selected item\n        const chatsAD = Alpine.$data(chatsSection);\n        const tasksSection = document.getElementById('tasks-section');\n        if (tasksSection) {\n            const tasksAD = Alpine.$data(tasksSection);\n            tasksAD.selected = id;\n        }\n        chatsAD.selected = id;\n\n        // Store this selection in the appropriate localStorage key\n        const activeTab = localStorage.getItem('activeTab') || 'chats';\n        if (activeTab === 'chats') {\n            localStorage.setItem('lastSelectedChat', id);\n        } else if (activeTab === 'tasks') {\n            localStorage.setItem('lastSelectedTask', id);\n        }\n\n        // Trigger an immediate poll to fetch content\n        poll();\n    }\n\n    updateAfterScroll();\n}\n\nexport const setContext = function (id) {\n    if (id == context) return;\n    context = id;\n    // Always reset the log tracking variables when switching contexts\n    // This ensures we get fresh data from the backend\n    lastLogGuid = \"\";\n    lastLogVersion = 0;\n    lastSpokenNo = 0;\n\n    // Clear the chat history immediately to avoid showing stale content\n    chatHistory.innerHTML = \"\";\n\n    // Update both selected states\n    const chatsAD = Alpine.$data(chatsSection);\n    const tasksAD = Alpine.$data(tasksSection);\n\n    chatsAD.selected = id;\n    tasksAD.selected = id;\n}\n\nexport const getContext = function () {\n    return context\n}\n\nwindow.toggleAutoScroll = async function (_autoScroll) {\n    autoScroll = _autoScroll;\n}\n\nwindow.toggleJson = async function (showJson) {\n    // add display:none to .msg-json class definition\n    toggleCssProperty('.msg-json', 'display', showJson ? 'block' : 'none');\n}\n\nwindow.toggleThoughts = async function (showThoughts) {\n    // add display:none to .msg-json class definition\n    toggleCssProperty('.msg-thoughts', 'display', showThoughts ? undefined : 'none');\n}\n\nwindow.toggleUtils = async function (showUtils) {\n    // add display:none to .msg-json class definition\n    toggleCssProperty('.message-util', 'display', showUtils ? undefined : 'none');\n    // toggleCssProperty('.message-util .msg-kvps', 'display', showUtils ? undefined : 'none');\n    // toggleCssProperty('.message-util .msg-content', 'display', showUtils ? undefined : 'none');\n}\n\nwindow.toggleDarkMode = function (isDark) {\n    if (isDark) {\n        document.body.classList.remove('light-mode');\n        document.body.classList.add('dark-mode');\n       } else {\n        document.body.classList.remove('dark-mode');\n        document.body.classList.add('light-mode');\n    }\n    console.log(\"Dark mode:\", isDark);\n    localStorage.setItem('darkMode', isDark);\n};\n\nwindow.toggleSpeech = function (isOn) {\n    console.log(\"Speech:\", isOn);\n    localStorage.setItem('speech', isOn);\n    if (!isOn) speech.stop()\n};\n\nwindow.nudge = async function () {\n    try {\n        const resp = await sendJsonData(\"/nudge\", { ctxid: getContext() });\n    } catch (e) {\n        toastFetchError(\"Error nudging agent\", e)\n    }\n}\n\nwindow.restart = async function () {\n    try {\n        if (!getConnectionStatus()) {\n            toast(\"Backend disconnected, cannot restart.\", \"error\");\n            return\n        }\n        // First try to initiate restart\n        const resp = await sendJsonData(\"/restart\", {});\n\n    } catch (e) {\n        // Show restarting message\n        toast(\"Restarting...\", \"info\", 0);\n\n        let retries = 0;\n        const maxRetries = 240; // Maximum number of retries (60 seconds with 250ms interval)\n\n        while (retries < maxRetries) {\n            try {\n                const resp = await sendJsonData(\"/health\", {});\n                // Server is back up, show success message\n                await new Promise(resolve => setTimeout(resolve, 250));\n                hideToast();\n                await new Promise(resolve => setTimeout(resolve, 400));\n                toast(\"Restarted\", \"success\", 5000);\n                return;\n            } catch (e) {\n                // Server still down, keep waiting\n                retries++;\n                await new Promise(resolve => setTimeout(resolve, 250));\n            }\n        }\n\n        // If we get here, restart failed or took too long\n        hideToast();\n        await new Promise(resolve => setTimeout(resolve, 400));\n        toast(\"Restart timed out or failed\", \"error\", 5000);\n    }\n}\n\n// Modify this part\ndocument.addEventListener('DOMContentLoaded', () => {\n    const isDarkMode = localStorage.getItem('darkMode') !== 'false';\n    window.toggleDarkMode(isDarkMode);\n});\n\n// Wait for Alpine.js to be fully ready before starting polling\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('DOMContentLoaded - waiting for Alpine.js to be ready');\n    \n    // Wait for Alpine.js to finish initialization\n    waitForAlpineAndInitialize();\n});\n\nfunction waitForAlpineAndInitialize() {\n    // Check if Alpine.js is available and has finished initialization\n    if (typeof Alpine !== 'undefined' && document.readyState === 'complete') {\n        // Give Alpine.js a moment to process all x-data directives\n        setTimeout(() => {\n            initializeUIWithAlpine();\n        }, 500);\n    } else {\n        // Keep checking until Alpine.js is ready\n        setTimeout(waitForAlpineAndInitialize, 100);\n    }\n}\n\nfunction initializeUIWithAlpine() {\n    console.log('Starting Alpine.js-aware UI initialization...');\n    \n    // Define the elements we need with more robust selectors\n    const requiredSelectors = {\n        leftPanel: 'left-panel',\n        rightPanel: 'right-panel', \n        container: '.container',\n        chatInput: 'chat-input',\n        sendButton: 'send-button',\n        chatHistory: 'chat-history',\n        inputSection: 'input-section',\n        statusSection: 'progress-bar-box',\n        chatsSection: 'chats-section',\n        tasksSection: 'tasks-section',\n        progressBar: 'progress-bar',\n        autoScrollSwitch: 'auto-scroll-switch',\n        timeDate: 'time-date'\n    };\n    \n    // Find elements with improved detection that works with Alpine.js\n    const elements = {};\n    const missingElements = [];\n    \n    Object.entries(requiredSelectors).forEach(([name, selector]) => {\n        let element = null;\n        \n        // Try multiple selection methods\n        if (selector.startsWith('.') || selector.startsWith('#')) {\n            element = document.querySelector(selector);\n        } else {\n            // Try as ID first\n            element = document.getElementById(selector);\n            // If not found, try as selector\n            if (!element) {\n                element = document.querySelector(`#${selector}`);\n            }\n        }\n        \n        elements[name] = element;\n        if (!element) {\n            missingElements.push(name);\n            console.warn(`Element not found: ${name} (${selector})`);\n        } else {\n            console.log(`Found: ${name}`);\n        }\n    });\n    \n    // Assign elements to global variables\n    leftPanel = elements.leftPanel;\n    rightPanel = elements.rightPanel;\n    container = elements.container;\n    chatInput = elements.chatInput;\n    sendButton = elements.sendButton;\n    chatHistory = elements.chatHistory;\n    inputSection = elements.inputSection;\n    statusSection = elements.statusSection;\n    chatsSection = elements.chatsSection;\n    tasksSection = elements.tasksSection;\n    progressBar = elements.progressBar;\n    autoScrollSwitch = elements.autoScrollSwitch;\n    timeDate = elements.timeDate;\n    \n    // Log what we found\n    if (missingElements.length > 0) {\n        console.warn('Missing elements after Alpine.js initialization:', missingElements);\n        \n        // For elements that are still missing, try alternative approaches\n        if (!rightPanel) {\n            console.log('Right panel still missing, trying alternative selector...');\n            rightPanel = document.querySelector('[id=\"right-panel\"]') || document.querySelector('#right-panel');\n        }\n        \n        if (!chatInput) {\n            console.log('Chat input still missing, trying alternative selector...');\n            chatInput = document.querySelector('[id=\"chat-input\"]') || document.querySelector('#chat-input');\n        }\n        \n        if (!sendButton) {\n            console.log('Send button still missing, trying alternative selector...');\n            sendButton = document.querySelector('[id=\"send-button\"]') || document.querySelector('#send-button');\n        }\n        \n        if (!chatHistory) {\n            console.log('Chat history still missing, trying alternative selector...');\n            chatHistory = document.querySelector('[id=\"chat-history\"]') || document.querySelector('#chat-history');\n        }\n        \n        if (!inputSection) {\n            console.log('Input section still missing, trying alternative selector...');\n            inputSection = document.querySelector('[id=\"input-section\"]') || document.querySelector('#input-section');\n        }\n        \n    } else {\n        console.log('All required elements found!');\n    }\n    \n    // Setup event listeners for available elements\n    setupEventListeners();\n    \n    // Initialize components\n    setupSidebarToggle();\n    setupTabs();\n    initializeActiveTab();\n    \n    console.log('UI initialization complete - elements available:', {\n        leftPanel: !!leftPanel,\n        rightPanel: !!rightPanel,\n        chatInput: !!chatInput,\n        sendButton: !!sendButton,\n        chatHistory: !!chatHistory,\n        inputSection: !!inputSection\n    });\n    \n    // Start polling\n    startPolling();\n}\n\nfunction setupEventListeners() {\n    // Chat input event listeners\n    if (chatInput) {\n        console.log('Setting up chat input event listeners');\n        chatInput.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                sendMessage();\n            }\n        });\n        chatInput.addEventListener('input', adjustTextareaHeight);\n    } else {\n        console.error('Chat input element not found - cannot set up event listeners');\n    }\n\n    // Send button event listener\n    if (sendButton) {\n        console.log('Setting up send button event listener');\n        sendButton.addEventListener('click', sendMessage);\n    } else {\n        console.error('Send button element not found - cannot set up event listener');\n    }\n\n    // Chat history scroll listener\n    if (chatHistory) {\n        console.log('Setting up chat history scroll listener');\n        chatHistory.addEventListener('scroll', updateAfterScroll);\n    } else {\n        console.error('Chat history element not found - cannot set up scroll listener');\n    }\n\n    // Window event listeners\n    window.addEventListener('load', handleResize);\n    window.addEventListener('resize', handleResize);\n}\n\nfunction toggleCssProperty(selector, property, value) {\n    // Get the stylesheet that contains the class\n    const styleSheets = document.styleSheets;\n\n    // Iterate through all stylesheets to find the class\n    for (let i = 0; i < styleSheets.length; i++) {\n        const styleSheet = styleSheets[i];\n        const rules = styleSheet.cssRules || styleSheet.rules;\n\n        for (let j = 0; j < rules.length; j++) {\n            const rule = rules[j];\n            if (rule.selectorText == selector) {\n                // Check if the property is already applied\n                if (value === undefined) {\n                    rule.style.removeProperty(property);\n                } else {\n                    rule.style.setProperty(property, value);\n                }\n                return;\n            }\n        }\n    }\n}\n\nwindow.loadChats = async function () {\n    try {\n        const fileContents = await readJsonFiles();\n        const response = await sendJsonData(\"/chat_load\", { chats: fileContents });\n\n        if (!response) {\n            toast(\"No response returned.\", \"error\")\n        }\n        // else if (!response.ok) {\n        //     if (response.message) {\n        //         toast(response.message, \"error\")\n        //     } else {\n        //         toast(\"Undefined error.\", \"error\")\n        //     }\n        // }\n        else {\n            setContext(response.ctxids[0])\n            toast(\"Chats loaded.\", \"success\")\n        }\n\n    } catch (e) {\n        toastFetchError(\"Error loading chats\", e)\n    }\n}\n\nwindow.saveChat = async function () {\n    try {\n        const response = await sendJsonData(\"/chat_export\", { ctxid: context });\n\n        if (!response) {\n            toast(\"No response returned.\", \"error\")\n        }\n        //  else if (!response.ok) {\n        //     if (response.message) {\n        //         toast(response.message, \"error\")\n        //     } else {\n        //         toast(\"Undefined error.\", \"error\")\n        //     }\n        // }\n        else {\n            downloadFile(response.ctxid + \".json\", response.content)\n            toast(\"Chat file downloaded.\", \"success\")\n        }\n\n    } catch (e) {\n        toastFetchError(\"Error saving chat\", e)\n    }\n}\n\nfunction downloadFile(filename, content) {\n    // Create a Blob with the content to save\n    const blob = new Blob([content], { type: 'application/json' });\n\n    // Create a link element\n    const link = document.createElement('a');\n\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n    link.href = url;\n\n    // Set the file name for download\n    link.download = filename;\n\n    // Programmatically click the link to trigger the download\n    link.click();\n\n    // Clean up by revoking the object URL\n    setTimeout(() => {\n        URL.revokeObjectURL(url);\n    }, 0);\n}\n\n\nfunction readJsonFiles() {\n    return new Promise((resolve, reject) => {\n        // Create an input element of type 'file'\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = '.json'; // Only accept JSON files\n        input.multiple = true;  // Allow multiple file selection\n\n        // Trigger the file dialog\n        input.click();\n\n        // When files are selected\n        input.onchange = async () => {\n            const files = input.files;\n            if (!files.length) {\n                resolve([]); // Return an empty array if no files are selected\n                return;\n            }\n\n            // Read each file as a string and store in an array\n            const filePromises = Array.from(files).map(file => {\n                return new Promise((fileResolve, fileReject) => {\n                    const reader = new FileReader();\n                    reader.onload = () => fileResolve(reader.result);\n                    reader.onerror = fileReject;\n                    reader.readAsText(file);\n                });\n            });\n\n            try {\n                const fileContents = await Promise.all(filePromises);\n                resolve(fileContents);\n            } catch (error) {\n                reject(error); // In case of any file reading error\n            }\n        };\n    });\n}\n\nfunction addClassToElement(element, className) {\n    if (element && element.classList) {\n        element.classList.add(className);\n    }\n}\n\nfunction removeClassFromElement(element, className) {\n    if (element && element.classList) {\n        element.classList.remove(className);\n    }\n}\n\n\nfunction scrollChanged(isAtBottom) {\n    const inputAS = Alpine.$data(autoScrollSwitch);\n    inputAS.autoScroll = isAtBottom\n    // autoScrollSwitch.checked = isAtBottom\n}\n\nfunction updateAfterScroll() {\n    // const toleranceEm = 1; // Tolerance in em units\n    // const tolerancePx = toleranceEm * parseFloat(getComputedStyle(document.documentElement).fontSize); // Convert em to pixels\n    const tolerancePx = 50;\n    const chatHistory = document.getElementById('chat-history');\n    const isAtBottom = (chatHistory.scrollHeight - chatHistory.scrollTop) <= (chatHistory.clientHeight + tolerancePx);\n\n    scrollChanged(isAtBottom);\n}\n\n// Moved to DOMContentLoaded\n\n// setInterval(poll, 250);\n\nasync function startPolling() {\n    const shortInterval = 25\n    const longInterval = 250\n    const shortIntervalPeriod = 100\n    let shortIntervalCount = 0\n\n    async function _doPoll() {\n        let nextInterval = longInterval\n\n        try {\n            const result = await poll();\n            if (result) shortIntervalCount = shortIntervalPeriod; // Reset the counter when the result is true\n            if (shortIntervalCount > 0) shortIntervalCount--; // Decrease the counter on each call\n            nextInterval = shortIntervalCount > 0 ? shortInterval : longInterval;\n        } catch (error) {\n            console.error('Error in polling function:', {\n                message: error.message,\n                stack: error.stack,\n                name: error.name,\n                error: error\n            });\n        }\n\n        // Call the function again after the selected interval\n        setTimeout(_doPoll.bind(this), nextInterval);\n    }\n\n    _doPoll();\n}\n\n// Setup tabs functionality\nfunction setupTabs() {\n    const chatsTab = document.getElementById('chats-tab');\n    const tasksTab = document.getElementById('tasks-tab');\n\n    if (chatsTab && tasksTab) {\n        chatsTab.addEventListener('click', function() {\n            activateTab('chats');\n        });\n\n        tasksTab.addEventListener('click', function() {\n            activateTab('tasks');\n        });\n    } else {\n        console.error('Tab elements not found');\n        setTimeout(setupTabs, 100); // Retry setup\n    }\n}\n\nfunction activateTab(tabName) {\n    const chatsTab = document.getElementById('chats-tab');\n    const tasksTab = document.getElementById('tasks-tab');\n    const chatsSection = document.getElementById('chats-section');\n    const tasksSection = document.getElementById('tasks-section');\n\n    // Get current context to preserve before switching\n    const currentContext = context;\n\n    // Store the current selection for the active tab before switching\n    const previousTab = localStorage.getItem('activeTab');\n    if (previousTab === 'chats') {\n        localStorage.setItem('lastSelectedChat', currentContext);\n    } else if (previousTab === 'tasks') {\n        localStorage.setItem('lastSelectedTask', currentContext);\n    }\n\n    // Reset all tabs and sections\n    chatsTab.classList.remove('active');\n    tasksTab.classList.remove('active');\n    chatsSection.style.display = 'none';\n    tasksSection.style.display = 'none';\n\n    // Remember the last active tab in localStorage\n    localStorage.setItem('activeTab', tabName);\n\n    // Activate selected tab and section\n    if (tabName === 'chats') {\n        chatsTab.classList.add('active');\n        chatsSection.style.display = '';\n\n        // Get the available contexts from Alpine.js data\n        const chatsAD = Alpine.$data(chatsSection);\n        const availableContexts = chatsAD.contexts || [];\n\n        // Restore previous chat selection\n        const lastSelectedChat = localStorage.getItem('lastSelectedChat');\n\n        // Only switch if:\n        // 1. lastSelectedChat exists AND\n        // 2. It's different from current context AND\n        // 3. The context actually exists in our contexts list OR there are no contexts yet\n        if (lastSelectedChat &&\n            lastSelectedChat !== currentContext &&\n            (availableContexts.some(ctx => ctx.id === lastSelectedChat) || availableContexts.length === 0)) {\n            setContext(lastSelectedChat);\n        }\n    } else if (tabName === 'tasks') {\n        tasksTab.classList.add('active');\n        tasksSection.style.display = 'flex';\n        tasksSection.style.flexDirection = 'column';\n\n        // Get the available tasks from Alpine.js data\n        const tasksAD = Alpine.$data(tasksSection);\n        const availableTasks = tasksAD.tasks || [];\n\n        // Restore previous task selection\n        const lastSelectedTask = localStorage.getItem('lastSelectedTask');\n\n        // Only switch if:\n        // 1. lastSelectedTask exists AND\n        // 2. It's different from current context AND\n        // 3. The task actually exists in our tasks list\n        if (lastSelectedTask &&\n            lastSelectedTask !== currentContext &&\n            availableTasks.some(task => task.id === lastSelectedTask)) {\n            setContext(lastSelectedTask);\n        }\n    }\n\n    // Request a poll update\n    poll();\n}\n\n// Add function to initialize active tab and selections from localStorage\nfunction initializeActiveTab() {\n    // Initialize selection storage if not present\n    if (!localStorage.getItem('lastSelectedChat')) {\n        localStorage.setItem('lastSelectedChat', '');\n    }\n    if (!localStorage.getItem('lastSelectedTask')) {\n        localStorage.setItem('lastSelectedTask', '');\n    }\n\n    const activeTab = localStorage.getItem('activeTab') || 'chats';\n    activateTab(activeTab);\n}\n\n/*\n * A0 Chat UI\n *\n * Tasks tab functionality:\n * - Tasks are displayed in the Tasks tab with the same mechanics as chats\n * - Both lists are sorted by creation time (newest first)\n * - Selection state is preserved across tab switches\n * - The active tab is remembered across sessions\n * - Tasks use the same context system as chats for communication with the backend\n * - Future support for renaming and deletion will be implemented later\n */\n\n// Open the scheduler detail view for a specific task\nfunction openTaskDetail(taskId) {\n    // Wait for Alpine.js to be fully loaded\n    if (window.Alpine) {\n        // Get the settings modal button and click it to ensure all init logic happens\n        const settingsButton = document.getElementById('settings');\n        if (settingsButton) {\n            // Programmatically click the settings button\n            settingsButton.click();\n\n            // Now get a reference to the modal element\n            const modalEl = document.getElementById('settingsModal');\n            if (!modalEl) {\n                console.error('Settings modal element not found after clicking button');\n                return;\n            }\n\n            // Get the Alpine.js data for the modal\n            const modalData = Alpine.$data(modalEl);\n\n            // Use a timeout to ensure the modal is fully rendered\n            setTimeout(() => {\n                // Switch to the scheduler tab first\n                modalData.switchTab('scheduler');\n\n                // Use another timeout to ensure the scheduler component is initialized\n                setTimeout(() => {\n                    // Get the scheduler component\n                    const schedulerComponent = document.querySelector('[x-data=\"schedulerSettings\"]');\n                    if (!schedulerComponent) {\n                        console.error('Scheduler component not found');\n                        return;\n                    }\n\n                    // Get the Alpine.js data for the scheduler component\n                    const schedulerData = Alpine.$data(schedulerComponent);\n\n                    // Show the task detail view for the specific task\n                    schedulerData.showTaskDetail(taskId);\n\n                    console.log('Task detail view opened for task:', taskId);\n                }, 50); // Give time for the scheduler tab to initialize\n            }, 25); // Give time for the modal to render\n        } else {\n            console.error('Settings button not found');\n        }\n    } else {\n        console.error('Alpine.js not loaded');\n    }\n}\n\n// Make the function available globally\nwindow.openTaskDetail = openTaskDetail;\n\n// Handle file upload function for Alpine.js\nwindow.handleFileUploadForAlpine = function(event) {\n    const files = event.target.files;\n    const inputAD = Alpine.$data(inputSection);\n    \n    Array.from(files).forEach(file => {\n        const ext = file.name.split('.').pop().toLowerCase();\n        const isImage = ['jpg', 'jpeg', 'png', 'bmp'].includes(ext);\n\n        if (isImage) {\n            // Handle image preview\n            const reader = new FileReader();\n            reader.onload = e => {\n                inputAD.attachments.push({\n                    file: file,\n                    url: e.target.result,\n                    type: 'image',\n                    name: file.name,\n                    extension: ext\n                });\n                inputAD.hasAttachments = true;\n            };\n            reader.readAsDataURL(file);\n        } else {\n            // Handle other file types\n            inputAD.attachments.push({\n                file: file,\n                type: 'file',\n                name: file.name,\n                extension: ext\n            });\n            inputAD.hasAttachments = true;\n        }\n\n    });\n};\n\n\n// Setup drag and drop functionality\ndocument.addEventListener('DOMContentLoaded', function() {\n    const dragDropOverlay = document.getElementById('dragdrop-overlay');\n    const inputSection = document.getElementById('input-section');\n    let dragCounter = 0;\n\n    // Skip drag and drop setup if overlay doesn't exist\n    if (!dragDropOverlay) {\n        console.warn('Drag drop overlay element not found, skipping drag and drop setup');\n        return;\n    }\n\n    // Prevent default drag behaviors\n    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n        document.addEventListener(eventName, (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        }, false);\n    });\n\n    // Handle drag enter\n    document.addEventListener('dragenter', (e) => {\n        dragCounter++;\n        if (dragCounter === 1 && dragDropOverlay) {\n            Alpine.$data(dragDropOverlay).isVisible = true;\n        }\n    }, false);\n\n    // Handle drag leave\n    document.addEventListener('dragleave', (e) => {\n        dragCounter--;\n        if (dragCounter === 0 && dragDropOverlay) {\n            Alpine.$data(dragDropOverlay).isVisible = false;\n        }\n    }, false);\n\n    // Handle drop\n    dragDropOverlay.addEventListener('drop', (e) => {\n        dragCounter = 0;\n        Alpine.$data(dragDropOverlay).isVisible = false;\n\n        const inputAD = Alpine.$data(inputSection);\n        const files = e.dataTransfer.files;\n        handleFiles(files, inputAD);\n    }, false);\n});\n\n// Separate file handling logic to be used by both drag-drop and file input\nfunction handleFiles(files, inputAD) {\n    Array.from(files).forEach(file => {\n        const ext = file.name.split('.').pop().toLowerCase();\n\n            const isImage = ['jpg', 'jpeg', 'png', 'bmp'].includes(ext);\n\n            if (isImage) {\n                const reader = new FileReader();\n                reader.onload = e => {\n                    inputAD.attachments.push({\n                        file: file,\n                        url: e.target.result,\n                        type: 'image',\n                        name: file.name,\n                        extension: ext\n                    });\n                    inputAD.hasAttachments = true;\n                };\n                reader.readAsDataURL(file);\n            } else {\n                // Handle other file types\n                inputAD.attachments.push({\n                    file: file,\n                    type: 'file',\n                    name: file.name,\n                    extension: ext\n                });\n                inputAD.hasAttachments = true;\n            }\n\n    });\n}\n\n// Modify the existing handleFileUpload to use the new handleFiles function\nwindow.handleFileUpload = function(event) {\n    const files = event.target.files;\n    const inputAD = Alpine.$data(inputSection);\n    handleFiles(files, inputAD);\n}\n\nfunction toast(text, type = 'info', timeout = 5000) {\n    const toast = document.getElementById('toast');\n    const isVisible = toast.classList.contains('show');\n\n    // Clear any existing timeout immediately\n    if (toast.timeoutId) {\n        clearTimeout(toast.timeoutId);\n        toast.timeoutId = null;\n    }\n\n    // Function to update toast content and show it\n    const updateAndShowToast = () => {\n        // Update the toast content and type\n        const title = type.charAt(0).toUpperCase() + type.slice(1);\n        toast.querySelector('.toast__title').textContent = title;\n        toast.querySelector('.toast__message').textContent = text;\n\n        // Remove old classes and add new ones\n        toast.classList.remove('toast--success', 'toast--error', 'toast--info');\n        toast.classList.add(`toast--${type}`);\n\n        // Show/hide copy button based on toast type\n        const copyButton = toast.querySelector('.toast__copy');\n        copyButton.style.display = type === 'error' ? 'inline-block' : 'none';\n\n        // Add the close button event listener\n        const closeButton = document.querySelector('.toast__close');\n        closeButton.onclick = () => {\n            hideToast();\n        };\n\n        // Add the copy button event listener\n        copyButton.onclick = () => {\n            navigator.clipboard.writeText(text);\n            copyButton.textContent = 'Copied!';\n            setTimeout(() => {\n                copyButton.textContent = 'Copy';\n            }, 2000);\n        };\n\n        // Show the toast\n        toast.style.display = 'flex';\n        // Force a reflow to ensure the animation triggers\n        void toast.offsetWidth;\n        toast.classList.add('show');\n\n        // Set timeout if specified\n        if (timeout) {\n            const minTimeout = Math.max(timeout, 5000);\n            toast.timeoutId = setTimeout(() => {\n                hideToast();\n            }, minTimeout);\n        }\n    };\n\n    if (isVisible) {\n        // If a toast is visible, hide it first then show the new one\n        toast.classList.remove('show');\n        toast.classList.add('hide');\n\n        // Wait for hide animation to complete before showing new toast\n        setTimeout(() => {\n            toast.classList.remove('hide');\n            updateAndShowToast();\n        }, 400); // Match this with CSS transition duration\n    } else {\n        // If no toast is visible, show the new one immediately\n        updateAndShowToast();\n    }\n}\nwindow.toast = toast\n\nfunction hideToast() {\n    const toast = document.getElementById('toast');\n\n    // Clear any existing timeout\n    if (toast.timeoutId) {\n        clearTimeout(toast.timeoutId);\n        toast.timeoutId = null;\n    }\n\n    toast.classList.remove('show');\n    toast.classList.add('hide');\n\n    // Wait for the hide animation to complete before removing from display\n    setTimeout(() => {\n        toast.style.display = 'none';\n        toast.classList.remove('hide');\n    }, 400); // Match this with CSS transition duration\n}\n\n// Export functions to window object for global access\nwindow.sendMessage = sendMessage;\nwindow.updateChatInput = updateChatInput;\nwindow.sendJsonData = sendJsonData;\nwindow.setContext = setContext;\nwindow.getContext = getContext;\nwindow.switchFromContext = switchFromContext;\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/AlpineStore.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/alpine.min.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":2,"column":193,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":207},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":2,"column":766,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":780},{"ruleId":"no-undef","severity":2,"message":"'MutationObserver' is not defined.","line":2,"column":1454,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":1470},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":2,"column":1506,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":1514},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":2,"column":1718,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":1732},{"ruleId":"no-undef","severity":2,"message":"'ShadowRoot' is not defined.","line":2,"column":2988,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":2998},{"ruleId":"no-undef","severity":2,"message":"'Element' is not defined.","line":2,"column":4054,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":4061},{"ruleId":"no-undef","severity":2,"message":"'error' is not defined.","line":2,"column":4609,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":4614},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":2,"column":5087,"nodeType":"Identifier","messageId":"undef","endLine":2,"endColumn":5094},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":15,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":25},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":1558,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":1565},{"ruleId":"no-undef","severity":2,"message":"'CustomEvent' is not defined.","line":6,"column":3679,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":3690},{"ruleId":"no-undef","severity":2,"message":"'ShadowRoot' is not defined.","line":6,"column":3806,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":3816},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":3988,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":3995},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":4177,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":4185},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":4331,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":4339},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":4357,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":4365},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":4500,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":4508},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":4574,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":4582},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":4605,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":4615},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":5511,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5519},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":6,"column":5639,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5653},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":5663,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":5673},{"ruleId":"no-unused-vars","severity":2,"message":"'r' is assigned a value but never used.","line":6,"column":5953,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":5954,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[11126,11160],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":6784,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":6794},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":6,"column":9101,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9107},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":9185,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9193},{"ruleId":"no-undef","severity":2,"message":"'requestAnimationFrame' is not defined.","line":6,"column":9222,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9243},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":9244,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9254},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":6,"column":9792,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":9806},{"ruleId":"no-undef","severity":2,"message":"'requestAnimationFrame' is not defined.","line":6,"column":10879,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":10900},{"ruleId":"no-undef","severity":2,"message":"'getComputedStyle' is not defined.","line":6,"column":10931,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":10947},{"ruleId":"no-undef","severity":2,"message":"'getComputedStyle' is not defined.","line":6,"column":11018,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11034},{"ruleId":"no-undef","severity":2,"message":"'getComputedStyle' is not defined.","line":6,"column":11110,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11126},{"ruleId":"no-undef","severity":2,"message":"'requestAnimationFrame' is not defined.","line":6,"column":11195,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11216},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":11248,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":11258},{"ruleId":"no-unused-vars","severity":2,"message":"'n' is defined but never used.","line":6,"column":12065,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":12066,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[17237,17239],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":6,"column":12447,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":12453},{"ruleId":"no-undef","severity":2,"message":"'clearTimeout' is not defined.","line":6,"column":14800,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":14812},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":14818,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":14828},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":14921,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":14931},{"ruleId":"no-unused-vars","severity":2,"message":"'s' is assigned a value but never used.","line":6,"column":14998,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":14999},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":6,"column":15442,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":6,"endColumn":15456,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[20613,20630],"text":"Object.prototype.hasOwnProperty.call(t, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-undef","severity":2,"message":"'Element' is not defined.","line":6,"column":15610,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":15617},{"ruleId":"no-unused-vars","severity":2,"message":"'Ls' is assigned a value but never used.","line":6,"column":17360,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":17362,"suggestions":[{"messageId":"removeVar","data":{"varName":"Ls"},"fix":{"range":[22529,22686],"text":""},"desc":"Remove unused variable 'Ls'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'$s' is assigned a value but never used.","line":6,"column":17538,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":17540,"suggestions":[{"messageId":"removeVar","data":{"varName":"$s"},"fix":{"range":[22710,22731],"text":""},"desc":"Remove unused variable '$s'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'js' is assigned a value but never used.","line":6,"column":17969,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":17971,"suggestions":[{"messageId":"removeVar","data":{"varName":"js"},"fix":{"range":[23141,23193],"text":""},"desc":"Remove unused variable 'js'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'Fs' is assigned a value but never used.","line":6,"column":18037,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18039,"suggestions":[{"messageId":"removeVar","data":{"varName":"Fs"},"fix":{"range":[23209,23253],"text":""},"desc":"Remove unused variable 'Fs'."}]},{"ruleId":"no-unused-vars","severity":2,"message":"'Bs' is assigned a value but never used.","line":6,"column":18128,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18130,"suggestions":[{"messageId":"removeVar","data":{"varName":"Bs"},"fix":{"range":[23300,23328],"text":""},"desc":"Remove unused variable 'Bs'."}]},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":21284,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":21291},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":21397,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":21404},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":23145,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":23152},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":24295,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":24302},{"ruleId":"no-undef","severity":2,"message":"'console' is not defined.","line":6,"column":24981,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":24988},{"ruleId":"no-unused-vars","severity":2,"message":"'r' is defined but never used.","line":6,"column":26434,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":26435,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[31600,31609],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":6,"column":26590,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":26604},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":27566,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":27574},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":27623,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":27631},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":6,"column":28208,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":28214},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":28243,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":28251},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":28781,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":28789},{"ruleId":"no-unused-vars","severity":2,"message":"'w' is defined but never used.","line":6,"column":31475,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":31476,"suggestions":[{"messageId":"removeVar","data":{"varName":"w"},"fix":{"range":[36647,36649],"text":""},"desc":"Remove unused variable 'w'."}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":6,"column":31675,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":31681},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":6,"column":31725,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":31731},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":31787,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":31795},{"ruleId":"no-undef","severity":2,"message":"'CustomEvent' is not defined.","line":6,"column":31905,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":31916},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":6,"column":32998,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":33012},{"ruleId":"no-unused-vars","severity":2,"message":"'r' is defined but never used.","line":6,"column":33967,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":33968,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[39129,39141],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-undef","severity":2,"message":"'setTimeout' is not defined.","line":6,"column":35021,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":35031},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":36549,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":36557},{"ruleId":"no-undef","severity":2,"message":"'document' is not defined.","line":6,"column":36941,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":36949},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\}.","line":6,"column":37350,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":6,"endColumn":37351,"suggestions":[{"messageId":"removeEscape","fix":{"range":[42523,42524],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[42523,42523],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\}.","line":6,"column":37365,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":6,"endColumn":37366,"suggestions":[{"messageId":"removeEscape","fix":{"range":[42538,42539],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[42538,42538],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":6,"column":39542,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":39548},{"ruleId":"no-undef","severity":2,"message":"'queueMicrotask' is not defined.","line":6,"column":39559,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":39573}],"suppressedMessages":[],"errorCount":75,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\n(()=>{var nt=!1,it=!1,W=[],ot=-1;function Ut(e){Rn(e)}function Rn(e){W.includes(e)||W.push(e),Mn()}function Wt(e){let t=W.indexOf(e);t!==-1&&t>ot&&W.splice(t,1)}function Mn(){!it&&!nt&&(nt=!0,queueMicrotask(Nn))}function Nn(){nt=!1,it=!0;for(let e=0;e<W.length;e++)W[e](),ot=e;W.length=0,ot=-1,it=!1}var T,N,$,at,st=!0;function Gt(e){st=!1,e(),st=!0}function Jt(e){T=e.reactive,$=e.release,N=t=>e.effect(t,{scheduler:r=>{st?Ut(r):r()}}),at=e.raw}function ct(e){N=e}function Yt(e){let t=()=>{};return[n=>{let i=N(n);return e._x_effects||(e._x_effects=new Set,e._x_runEffects=()=>{e._x_effects.forEach(o=>o())}),e._x_effects.add(i),t=()=>{i!==void 0&&(e._x_effects.delete(i),$(i))},i},()=>{t()}]}function ve(e,t){let r=!0,n,i=N(()=>{let o=e();JSON.stringify(o),r?n=o:queueMicrotask(()=>{t(o,n),n=o}),r=!1});return()=>$(i)}var Xt=[],Zt=[],Qt=[];function er(e){Qt.push(e)}function te(e,t){typeof t==\"function\"?(e._x_cleanups||(e._x_cleanups=[]),e._x_cleanups.push(t)):(t=e,Zt.push(t))}function Ae(e){Xt.push(e)}function Oe(e,t,r){e._x_attributeCleanups||(e._x_attributeCleanups={}),e._x_attributeCleanups[t]||(e._x_attributeCleanups[t]=[]),e._x_attributeCleanups[t].push(r)}function lt(e,t){e._x_attributeCleanups&&Object.entries(e._x_attributeCleanups).forEach(([r,n])=>{(t===void 0||t.includes(r))&&(n.forEach(i=>i()),delete e._x_attributeCleanups[r])})}function tr(e){for(e._x_effects?.forEach(Wt);e._x_cleanups?.length;)e._x_cleanups.pop()()}var ut=new MutationObserver(mt),ft=!1;function ue(){ut.observe(document,{subtree:!0,childList:!0,attributes:!0,attributeOldValue:!0}),ft=!0}function dt(){kn(),ut.disconnect(),ft=!1}var le=[];function kn(){let e=ut.takeRecords();le.push(()=>e.length>0&&mt(e));let t=le.length;queueMicrotask(()=>{if(le.length===t)for(;le.length>0;)le.shift()()})}function m(e){if(!ft)return e();dt();let t=e();return ue(),t}var pt=!1,Se=[];function rr(){pt=!0}function nr(){pt=!1,mt(Se),Se=[]}function mt(e){if(pt){Se=Se.concat(e);return}let t=[],r=new Set,n=new Map,i=new Map;for(let o=0;o<e.length;o++)if(!e[o].target._x_ignoreMutationObserver&&(e[o].type===\"childList\"&&(e[o].removedNodes.forEach(s=>{s.nodeType===1&&s._x_marker&&r.add(s)}),e[o].addedNodes.forEach(s=>{if(s.nodeType===1){if(r.has(s)){r.delete(s);return}s._x_marker||t.push(s)}})),e[o].type===\"attributes\")){let s=e[o].target,a=e[o].attributeName,c=e[o].oldValue,l=()=>{n.has(s)||n.set(s,[]),n.get(s).push({name:a,value:s.getAttribute(a)})},u=()=>{i.has(s)||i.set(s,[]),i.get(s).push(a)};s.hasAttribute(a)&&c===null?l():s.hasAttribute(a)?(u(),l()):u()}i.forEach((o,s)=>{lt(s,o)}),n.forEach((o,s)=>{Xt.forEach(a=>a(s,o))});for(let o of r)t.some(s=>s.contains(o))||Zt.forEach(s=>s(o));for(let o of t)o.isConnected&&Qt.forEach(s=>s(o));t=null,r=null,n=null,i=null}function Ce(e){return z(B(e))}function k(e,t,r){return e._x_dataStack=[t,...B(r||e)],()=>{e._x_dataStack=e._x_dataStack.filter(n=>n!==t)}}function B(e){return e._x_dataStack?e._x_dataStack:typeof ShadowRoot==\"function\"&&e instanceof ShadowRoot?B(e.host):e.parentNode?B(e.parentNode):[]}function z(e){return new Proxy({objects:e},Dn)}var Dn={ownKeys({objects:e}){return Array.from(new Set(e.flatMap(t=>Object.keys(t))))},has({objects:e},t){return t==Symbol.unscopables?!1:e.some(r=>Object.prototype.hasOwnProperty.call(r,t)||Reflect.has(r,t))},get({objects:e},t,r){return t==\"toJSON\"?Pn:Reflect.get(e.find(n=>Reflect.has(n,t))||{},t,r)},set({objects:e},t,r,n){let i=e.find(s=>Object.prototype.hasOwnProperty.call(s,t))||e[e.length-1],o=Object.getOwnPropertyDescriptor(i,t);return o?.set&&o?.get?o.set.call(n,r)||!0:Reflect.set(i,t,r)}};function Pn(){return Reflect.ownKeys(this).reduce((t,r)=>(t[r]=Reflect.get(this,r),t),{})}function Te(e){let t=n=>typeof n==\"object\"&&!Array.isArray(n)&&n!==null,r=(n,i=\"\")=>{Object.entries(Object.getOwnPropertyDescriptors(n)).forEach(([o,{value:s,enumerable:a}])=>{if(a===!1||s===void 0||typeof s==\"object\"&&s!==null&&s.__v_skip)return;let c=i===\"\"?o:`${i}.${o}`;typeof s==\"object\"&&s!==null&&s._x_interceptor?n[o]=s.initialize(e,c,o):t(s)&&s!==n&&!(s instanceof Element)&&r(s,c)})};return r(e)}function Re(e,t=()=>{}){let r={initialValue:void 0,_x_interceptor:!0,initialize(n,i,o){return e(this.initialValue,()=>In(n,i),s=>ht(n,i,s),i,o)}};return t(r),n=>{if(typeof n==\"object\"&&n!==null&&n._x_interceptor){let i=r.initialize.bind(r);r.initialize=(o,s,a)=>{let c=n.initialize(o,s,a);return r.initialValue=c,i(o,s,a)}}else r.initialValue=n;return r}}function In(e,t){return t.split(\".\").reduce((r,n)=>r[n],e)}function ht(e,t,r){if(typeof t==\"string\"&&(t=t.split(\".\")),t.length===1)e[t[0]]=r;else{if(t.length===0)throw error;return e[t[0]]||(e[t[0]]={}),ht(e[t[0]],t.slice(1),r)}}var ir={};function y(e,t){ir[e]=t}function fe(e,t){let r=Ln(t);return Object.entries(ir).forEach(([n,i])=>{Object.defineProperty(e,`$${n}`,{get(){return i(t,r)},enumerable:!1})}),e}function Ln(e){let[t,r]=_t(e),n={interceptor:Re,...t};return te(e,r),n}function or(e,t,r,...n){try{return r(...n)}catch(i){re(i,e,t)}}function re(e,t,r=void 0){e=Object.assign(e??{message:\"No error message given.\"},{el:t,expression:r}),console.warn(`Alpine Expression Error: ${e.message}\n\n    ${r?'Expression: \"'+r+`\"\n    \n    `:\"\"}`,t),setTimeout(()=>{throw e},0)}var Me=!0;function ke(e){let t=Me;Me=!1;let r=e();return Me=t,r}function R(e,t,r={}){let n;return x(e,t)(i=>n=i,r),n}function x(...e){return sr(...e)}var sr=xt;function ar(e){sr=e}function xt(e,t){let r={};fe(r,e);let n=[r,...B(e)],i=typeof t==\"function\"?$n(n,t):Fn(n,t,e);return or.bind(null,e,t,i)}function $n(e,t){return(r=()=>{},{scope:n={},params:i=[]}={})=>{let o=t.apply(z([n,...e]),i);Ne(r,o)}}var gt={};function jn(e,t){if(gt[e])return gt[e];let r=Object.getPrototypeOf(async function(){}).constructor,n=/^[\\n\\s]*if.*\\(.*\\)/.test(e.trim())||/^(let|const)\\s/.test(e.trim())?`(async()=>{ ${e} })()`:e,o=(()=>{try{let s=new r([\"__self\",\"scope\"],`with (scope) { __self.result = ${n} }; __self.finished = true; return __self.result;`);return Object.defineProperty(s,\"name\",{value:`[Alpine] ${e}`}),s}catch(s){return re(s,t,e),Promise.resolve()}})();return gt[e]=o,o}function Fn(e,t,r){let n=jn(t,r);return(i=()=>{},{scope:o={},params:s=[]}={})=>{n.result=void 0,n.finished=!1;let a=z([o,...e]);if(typeof n==\"function\"){let c=n(n,a).catch(l=>re(l,r,t));n.finished?(Ne(i,n.result,a,s,r),n.result=void 0):c.then(l=>{Ne(i,l,a,s,r)}).catch(l=>re(l,r,t)).finally(()=>n.result=void 0)}}}function Ne(e,t,r,n,i){if(Me&&typeof t==\"function\"){let o=t.apply(r,n);o instanceof Promise?o.then(s=>Ne(e,s,r,n)).catch(s=>re(s,i,t)):e(o)}else typeof t==\"object\"&&t instanceof Promise?t.then(o=>e(o)):e(t)}var wt=\"x-\";function C(e=\"\"){return wt+e}function cr(e){wt=e}var De={};function d(e,t){return De[e]=t,{before(r){if(!De[r]){console.warn(String.raw`Cannot find directive \\`${r}\\`. \\`${e}\\` will use the default order of execution`);return}let n=G.indexOf(r);G.splice(n>=0?n:G.indexOf(\"DEFAULT\"),0,e)}}}function lr(e){return Object.keys(De).includes(e)}function pe(e,t,r){if(t=Array.from(t),e._x_virtualDirectives){let o=Object.entries(e._x_virtualDirectives).map(([a,c])=>({name:a,value:c})),s=Et(o);o=o.map(a=>s.find(c=>c.name===a.name)?{name:`x-bind:${a.name}`,value:`\"${a.value}\"`}:a),t=t.concat(o)}let n={};return t.map(dr((o,s)=>n[o]=s)).filter(mr).map(zn(n,r)).sort(Kn).map(o=>Bn(e,o))}function Et(e){return Array.from(e).map(dr()).filter(t=>!mr(t))}var yt=!1,de=new Map,ur=Symbol();function fr(e){yt=!0;let t=Symbol();ur=t,de.set(t,[]);let r=()=>{for(;de.get(t).length;)de.get(t).shift()();de.delete(t)},n=()=>{yt=!1,r()};e(r),n()}function _t(e){let t=[],r=a=>t.push(a),[n,i]=Yt(e);return t.push(i),[{Alpine:K,effect:n,cleanup:r,evaluateLater:x.bind(x,e),evaluate:R.bind(R,e)},()=>t.forEach(a=>a())]}function Bn(e,t){let r=()=>{},n=De[t.type]||r,[i,o]=_t(e);Oe(e,t.original,o);let s=()=>{e._x_ignore||e._x_ignoreSelf||(n.inline&&n.inline(e,t,i),n=n.bind(n,e,t,i),yt?de.get(ur).push(n):n())};return s.runCleanups=o,s}var Pe=(e,t)=>({name:r,value:n})=>(r.startsWith(e)&&(r=r.replace(e,t)),{name:r,value:n}),Ie=e=>e;function dr(e=()=>{}){return({name:t,value:r})=>{let{name:n,value:i}=pr.reduce((o,s)=>s(o),{name:t,value:r});return n!==t&&e(n,t),{name:n,value:i}}}var pr=[];function ne(e){pr.push(e)}function mr({name:e}){return hr().test(e)}var hr=()=>new RegExp(`^${wt}([^:^.]+)\\\\b`);function zn(e,t){return({name:r,value:n})=>{let i=r.match(hr()),o=r.match(/:([a-zA-Z0-9\\-_:]+)/),s=r.match(/\\.[^.\\]]+(?=[^\\]]*$)/g)||[],a=t||e[r]||r;return{type:i?i[1]:null,value:o?o[1]:null,modifiers:s.map(c=>c.replace(\".\",\"\")),expression:n,original:a}}}var bt=\"DEFAULT\",G=[\"ignore\",\"ref\",\"data\",\"id\",\"anchor\",\"bind\",\"init\",\"for\",\"model\",\"modelable\",\"transition\",\"show\",\"if\",bt,\"teleport\"];function Kn(e,t){let r=G.indexOf(e.type)===-1?bt:e.type,n=G.indexOf(t.type)===-1?bt:t.type;return G.indexOf(r)-G.indexOf(n)}function J(e,t,r={}){e.dispatchEvent(new CustomEvent(t,{detail:r,bubbles:!0,composed:!0,cancelable:!0}))}function D(e,t){if(typeof ShadowRoot==\"function\"&&e instanceof ShadowRoot){Array.from(e.children).forEach(i=>D(i,t));return}let r=!1;if(t(e,()=>r=!0),r)return;let n=e.firstElementChild;for(;n;)D(n,t,!1),n=n.nextElementSibling}function E(e,...t){console.warn(`Alpine Warning: ${e}`,...t)}var _r=!1;function gr(){_r&&E(\"Alpine has already been initialized on this page. Calling Alpine.start() more than once can cause problems.\"),_r=!0,document.body||E(\"Unable to initialize. Trying to load Alpine before `<body>` is available. Did you forget to add `defer` in Alpine's `<script>` tag?\"),J(document,\"alpine:init\"),J(document,\"alpine:initializing\"),ue(),er(t=>S(t,D)),te(t=>P(t)),Ae((t,r)=>{pe(t,r).forEach(n=>n())});let e=t=>!Y(t.parentElement,!0);Array.from(document.querySelectorAll(br().join(\",\"))).filter(e).forEach(t=>{S(t)}),J(document,\"alpine:initialized\"),setTimeout(()=>{Vn()})}var vt=[],xr=[];function yr(){return vt.map(e=>e())}function br(){return vt.concat(xr).map(e=>e())}function Le(e){vt.push(e)}function $e(e){xr.push(e)}function Y(e,t=!1){return j(e,r=>{if((t?br():yr()).some(i=>r.matches(i)))return!0})}function j(e,t){if(e){if(t(e))return e;if(e._x_teleportBack&&(e=e._x_teleportBack),!!e.parentElement)return j(e.parentElement,t)}}function wr(e){return yr().some(t=>e.matches(t))}var Er=[];function vr(e){Er.push(e)}var Hn=1;function S(e,t=D,r=()=>{}){j(e,n=>n._x_ignore)||fr(()=>{t(e,(n,i)=>{n._x_marker||(r(n,i),Er.forEach(o=>o(n,i)),pe(n,n.attributes).forEach(o=>o()),n._x_ignore||(n._x_marker=Hn++),n._x_ignore&&i())})})}function P(e,t=D){t(e,r=>{tr(r),lt(r),delete r._x_marker})}function Vn(){[[\"ui\",\"dialog\",[\"[x-dialog], [x-popover]\"]],[\"anchor\",\"anchor\",[\"[x-anchor]\"]],[\"sort\",\"sort\",[\"[x-sort]\"]]].forEach(([t,r,n])=>{lr(r)||n.some(i=>{if(document.querySelector(i))return E(`found \"${i}\", but missing ${t} plugin`),!0})})}var St=[],At=!1;function ie(e=()=>{}){return queueMicrotask(()=>{At||setTimeout(()=>{je()})}),new Promise(t=>{St.push(()=>{e(),t()})})}function je(){for(At=!1;St.length;)St.shift()()}function Sr(){At=!0}function me(e,t){return Array.isArray(t)?Ar(e,t.join(\" \")):typeof t==\"object\"&&t!==null?qn(e,t):typeof t==\"function\"?me(e,t()):Ar(e,t)}function Ar(e,t){let r=o=>o.split(\" \").filter(Boolean),n=o=>o.split(\" \").filter(s=>!e.classList.contains(s)).filter(Boolean),i=o=>(e.classList.add(...o),()=>{e.classList.remove(...o)});return t=t===!0?t=\"\":t||\"\",i(n(t))}function qn(e,t){let r=a=>a.split(\" \").filter(Boolean),n=Object.entries(t).flatMap(([a,c])=>c?r(a):!1).filter(Boolean),i=Object.entries(t).flatMap(([a,c])=>c?!1:r(a)).filter(Boolean),o=[],s=[];return i.forEach(a=>{e.classList.contains(a)&&(e.classList.remove(a),s.push(a))}),n.forEach(a=>{e.classList.contains(a)||(e.classList.add(a),o.push(a))}),()=>{s.forEach(a=>e.classList.add(a)),o.forEach(a=>e.classList.remove(a))}}function X(e,t){return typeof t==\"object\"&&t!==null?Un(e,t):Wn(e,t)}function Un(e,t){let r={};return Object.entries(t).forEach(([n,i])=>{r[n]=e.style[n],n.startsWith(\"--\")||(n=Gn(n)),e.style.setProperty(n,i)}),setTimeout(()=>{e.style.length===0&&e.removeAttribute(\"style\")}),()=>{X(e,r)}}function Wn(e,t){let r=e.getAttribute(\"style\",t);return e.setAttribute(\"style\",t),()=>{e.setAttribute(\"style\",r||\"\")}}function Gn(e){return e.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase()}function he(e,t=()=>{}){let r=!1;return function(){r?t.apply(this,arguments):(r=!0,e.apply(this,arguments))}}d(\"transition\",(e,{value:t,modifiers:r,expression:n},{evaluate:i})=>{typeof n==\"function\"&&(n=i(n)),n!==!1&&(!n||typeof n==\"boolean\"?Yn(e,r,t):Jn(e,n,t))});function Jn(e,t,r){Or(e,me,\"\"),{enter:i=>{e._x_transition.enter.during=i},\"enter-start\":i=>{e._x_transition.enter.start=i},\"enter-end\":i=>{e._x_transition.enter.end=i},leave:i=>{e._x_transition.leave.during=i},\"leave-start\":i=>{e._x_transition.leave.start=i},\"leave-end\":i=>{e._x_transition.leave.end=i}}[r](t)}function Yn(e,t,r){Or(e,X);let n=!t.includes(\"in\")&&!t.includes(\"out\")&&!r,i=n||t.includes(\"in\")||[\"enter\"].includes(r),o=n||t.includes(\"out\")||[\"leave\"].includes(r);t.includes(\"in\")&&!n&&(t=t.filter((g,b)=>b<t.indexOf(\"out\"))),t.includes(\"out\")&&!n&&(t=t.filter((g,b)=>b>t.indexOf(\"out\")));let s=!t.includes(\"opacity\")&&!t.includes(\"scale\"),a=s||t.includes(\"opacity\"),c=s||t.includes(\"scale\"),l=a?0:1,u=c?_e(t,\"scale\",95)/100:1,p=_e(t,\"delay\",0)/1e3,h=_e(t,\"origin\",\"center\"),w=\"opacity, transform\",F=_e(t,\"duration\",150)/1e3,Ee=_e(t,\"duration\",75)/1e3,f=\"cubic-bezier(0.4, 0.0, 0.2, 1)\";i&&(e._x_transition.enter.during={transformOrigin:h,transitionDelay:`${p}s`,transitionProperty:w,transitionDuration:`${F}s`,transitionTimingFunction:f},e._x_transition.enter.start={opacity:l,transform:`scale(${u})`},e._x_transition.enter.end={opacity:1,transform:\"scale(1)\"}),o&&(e._x_transition.leave.during={transformOrigin:h,transitionDelay:`${p}s`,transitionProperty:w,transitionDuration:`${Ee}s`,transitionTimingFunction:f},e._x_transition.leave.start={opacity:1,transform:\"scale(1)\"},e._x_transition.leave.end={opacity:l,transform:`scale(${u})`})}function Or(e,t,r={}){e._x_transition||(e._x_transition={enter:{during:r,start:r,end:r},leave:{during:r,start:r,end:r},in(n=()=>{},i=()=>{}){Fe(e,t,{during:this.enter.during,start:this.enter.start,end:this.enter.end},n,i)},out(n=()=>{},i=()=>{}){Fe(e,t,{during:this.leave.during,start:this.leave.start,end:this.leave.end},n,i)}})}window.Element.prototype._x_toggleAndCascadeWithTransitions=function(e,t,r,n){let i=document.visibilityState===\"visible\"?requestAnimationFrame:setTimeout,o=()=>i(r);if(t){e._x_transition&&(e._x_transition.enter||e._x_transition.leave)?e._x_transition.enter&&(Object.entries(e._x_transition.enter.during).length||Object.entries(e._x_transition.enter.start).length||Object.entries(e._x_transition.enter.end).length)?e._x_transition.in(r):o():e._x_transition?e._x_transition.in(r):o();return}e._x_hidePromise=e._x_transition?new Promise((s,a)=>{e._x_transition.out(()=>{},()=>s(n)),e._x_transitioning&&e._x_transitioning.beforeCancel(()=>a({isFromCancelledTransition:!0}))}):Promise.resolve(n),queueMicrotask(()=>{let s=Cr(e);s?(s._x_hideChildren||(s._x_hideChildren=[]),s._x_hideChildren.push(e)):i(()=>{let a=c=>{let l=Promise.all([c._x_hidePromise,...(c._x_hideChildren||[]).map(a)]).then(([u])=>u?.());return delete c._x_hidePromise,delete c._x_hideChildren,l};a(e).catch(c=>{if(!c.isFromCancelledTransition)throw c})})})};function Cr(e){let t=e.parentNode;if(t)return t._x_hidePromise?t:Cr(t)}function Fe(e,t,{during:r,start:n,end:i}={},o=()=>{},s=()=>{}){if(e._x_transitioning&&e._x_transitioning.cancel(),Object.keys(r).length===0&&Object.keys(n).length===0&&Object.keys(i).length===0){o(),s();return}let a,c,l;Xn(e,{start(){a=t(e,n)},during(){c=t(e,r)},before:o,end(){a(),l=t(e,i)},after:s,cleanup(){c(),l()}})}function Xn(e,t){let r,n,i,o=he(()=>{m(()=>{r=!0,n||t.before(),i||(t.end(),je()),t.after(),e.isConnected&&t.cleanup(),delete e._x_transitioning})});e._x_transitioning={beforeCancels:[],beforeCancel(s){this.beforeCancels.push(s)},cancel:he(function(){for(;this.beforeCancels.length;)this.beforeCancels.shift()();o()}),finish:o},m(()=>{t.start(),t.during()}),Sr(),requestAnimationFrame(()=>{if(r)return;let s=Number(getComputedStyle(e).transitionDuration.replace(/,.*/,\"\").replace(\"s\",\"\"))*1e3,a=Number(getComputedStyle(e).transitionDelay.replace(/,.*/,\"\").replace(\"s\",\"\"))*1e3;s===0&&(s=Number(getComputedStyle(e).animationDuration.replace(\"s\",\"\"))*1e3),m(()=>{t.before()}),n=!0,requestAnimationFrame(()=>{r||(m(()=>{t.end()}),je(),setTimeout(e._x_transitioning.finish,s+a),i=!0)})})}function _e(e,t,r){if(e.indexOf(t)===-1)return r;let n=e[e.indexOf(t)+1];if(!n||t===\"scale\"&&isNaN(n))return r;if(t===\"duration\"||t===\"delay\"){let i=n.match(/([0-9]+)ms/);if(i)return i[1]}return t===\"origin\"&&[\"top\",\"right\",\"left\",\"center\",\"bottom\"].includes(e[e.indexOf(t)+2])?[n,e[e.indexOf(t)+2]].join(\" \"):n}var I=!1;function A(e,t=()=>{}){return(...r)=>I?t(...r):e(...r)}function Tr(e){return(...t)=>I&&e(...t)}var Rr=[];function H(e){Rr.push(e)}function Mr(e,t){Rr.forEach(r=>r(e,t)),I=!0,kr(()=>{S(t,(r,n)=>{n(r,()=>{})})}),I=!1}var Be=!1;function Nr(e,t){t._x_dataStack||(t._x_dataStack=e._x_dataStack),I=!0,Be=!0,kr(()=>{Zn(t)}),I=!1,Be=!1}function Zn(e){let t=!1;S(e,(n,i)=>{D(n,(o,s)=>{if(t&&wr(o))return s();t=!0,i(o,s)})})}function kr(e){let t=N;ct((r,n)=>{let i=t(r);return $(i),()=>{}}),e(),ct(t)}function ge(e,t,r,n=[]){switch(e._x_bindings||(e._x_bindings=T({})),e._x_bindings[t]=r,t=n.includes(\"camel\")?si(t):t,t){case\"value\":Qn(e,r);break;case\"style\":ti(e,r);break;case\"class\":ei(e,r);break;case\"selected\":case\"checked\":ri(e,t,r);break;default:Pr(e,t,r);break}}function Qn(e,t){if(Ot(e))e.attributes.value===void 0&&(e.value=t),window.fromModel&&(typeof t==\"boolean\"?e.checked=xe(e.value)===t:e.checked=Dr(e.value,t));else if(ze(e))Number.isInteger(t)?e.value=t:!Array.isArray(t)&&typeof t!=\"boolean\"&&![null,void 0].includes(t)?e.value=String(t):Array.isArray(t)?e.checked=t.some(r=>Dr(r,e.value)):e.checked=!!t;else if(e.tagName===\"SELECT\")oi(e,t);else{if(e.value===t)return;e.value=t===void 0?\"\":t}}function ei(e,t){e._x_undoAddedClasses&&e._x_undoAddedClasses(),e._x_undoAddedClasses=me(e,t)}function ti(e,t){e._x_undoAddedStyles&&e._x_undoAddedStyles(),e._x_undoAddedStyles=X(e,t)}function ri(e,t,r){Pr(e,t,r),ii(e,t,r)}function Pr(e,t,r){[null,void 0,!1].includes(r)&&ci(t)?e.removeAttribute(t):(Ir(t)&&(r=t),ni(e,t,r))}function ni(e,t,r){e.getAttribute(t)!=r&&e.setAttribute(t,r)}function ii(e,t,r){e[t]!==r&&(e[t]=r)}function oi(e,t){let r=[].concat(t).map(n=>n+\"\");Array.from(e.options).forEach(n=>{n.selected=r.includes(n.value)})}function si(e){return e.toLowerCase().replace(/-(\\w)/g,(t,r)=>r.toUpperCase())}function Dr(e,t){return e==t}function xe(e){return[1,\"1\",\"true\",\"on\",\"yes\",!0].includes(e)?!0:[0,\"0\",\"false\",\"off\",\"no\",!1].includes(e)?!1:e?Boolean(e):null}var ai=new Set([\"allowfullscreen\",\"async\",\"autofocus\",\"autoplay\",\"checked\",\"controls\",\"default\",\"defer\",\"disabled\",\"formnovalidate\",\"inert\",\"ismap\",\"itemscope\",\"loop\",\"multiple\",\"muted\",\"nomodule\",\"novalidate\",\"open\",\"playsinline\",\"readonly\",\"required\",\"reversed\",\"selected\",\"shadowrootclonable\",\"shadowrootdelegatesfocus\",\"shadowrootserializable\"]);function Ir(e){return ai.has(e)}function ci(e){return![\"aria-pressed\",\"aria-checked\",\"aria-expanded\",\"aria-selected\"].includes(e)}function Lr(e,t,r){return e._x_bindings&&e._x_bindings[t]!==void 0?e._x_bindings[t]:jr(e,t,r)}function $r(e,t,r,n=!0){if(e._x_bindings&&e._x_bindings[t]!==void 0)return e._x_bindings[t];if(e._x_inlineBindings&&e._x_inlineBindings[t]!==void 0){let i=e._x_inlineBindings[t];return i.extract=n,ke(()=>R(e,i.expression))}return jr(e,t,r)}function jr(e,t,r){let n=e.getAttribute(t);return n===null?typeof r==\"function\"?r():r:n===\"\"?!0:Ir(t)?!![t,\"true\"].includes(n):n}function ze(e){return e.type===\"checkbox\"||e.localName===\"ui-checkbox\"||e.localName===\"ui-switch\"}function Ot(e){return e.type===\"radio\"||e.localName===\"ui-radio\"}function Ke(e,t){var r;return function(){var n=this,i=arguments,o=function(){r=null,e.apply(n,i)};clearTimeout(r),r=setTimeout(o,t)}}function He(e,t){let r;return function(){let n=this,i=arguments;r||(e.apply(n,i),r=!0,setTimeout(()=>r=!1,t))}}function Ve({get:e,set:t},{get:r,set:n}){let i=!0,o,s,a=N(()=>{let c=e(),l=r();if(i)n(Ct(c)),i=!1;else{let u=JSON.stringify(c),p=JSON.stringify(l);u!==o?n(Ct(c)):u!==p&&t(Ct(l))}o=JSON.stringify(e()),s=JSON.stringify(r())});return()=>{$(a)}}function Ct(e){return typeof e==\"object\"?JSON.parse(JSON.stringify(e)):e}function Fr(e){(Array.isArray(e)?e:[e]).forEach(r=>r(K))}var Z={},Br=!1;function zr(e,t){if(Br||(Z=T(Z),Br=!0),t===void 0)return Z[e];Z[e]=t,Te(Z[e]),typeof t==\"object\"&&t!==null&&t.hasOwnProperty(\"init\")&&typeof t.init==\"function\"&&Z[e].init()}function Kr(){return Z}var Hr={};function Vr(e,t){let r=typeof t!=\"function\"?()=>t:t;return e instanceof Element?Tt(e,r()):(Hr[e]=r,()=>{})}function qr(e){return Object.entries(Hr).forEach(([t,r])=>{Object.defineProperty(e,t,{get(){return(...n)=>r(...n)}})}),e}function Tt(e,t,r){let n=[];for(;n.length;)n.pop()();let i=Object.entries(t).map(([s,a])=>({name:s,value:a})),o=Et(i);return i=i.map(s=>o.find(a=>a.name===s.name)?{name:`x-bind:${s.name}`,value:`\"${s.value}\"`}:s),pe(e,i,r).map(s=>{n.push(s.runCleanups),s()}),()=>{for(;n.length;)n.pop()()}}var Ur={};function Wr(e,t){Ur[e]=t}function Gr(e,t){return Object.entries(Ur).forEach(([r,n])=>{Object.defineProperty(e,r,{get(){return(...i)=>n.bind(t)(...i)},enumerable:!1})}),e}var li={get reactive(){return T},get release(){return $},get effect(){return N},get raw(){return at},version:\"3.14.9\",flushAndStopDeferringMutations:nr,dontAutoEvaluateFunctions:ke,disableEffectScheduling:Gt,startObservingMutations:ue,stopObservingMutations:dt,setReactivityEngine:Jt,onAttributeRemoved:Oe,onAttributesAdded:Ae,closestDataStack:B,skipDuringClone:A,onlyDuringClone:Tr,addRootSelector:Le,addInitSelector:$e,interceptClone:H,addScopeToNode:k,deferMutations:rr,mapAttributes:ne,evaluateLater:x,interceptInit:vr,setEvaluator:ar,mergeProxies:z,extractProp:$r,findClosest:j,onElRemoved:te,closestRoot:Y,destroyTree:P,interceptor:Re,transition:Fe,setStyles:X,mutateDom:m,directive:d,entangle:Ve,throttle:He,debounce:Ke,evaluate:R,initTree:S,nextTick:ie,prefixed:C,prefix:cr,plugin:Fr,magic:y,store:zr,start:gr,clone:Nr,cloneNode:Mr,bound:Lr,$data:Ce,watch:ve,walk:D,data:Wr,bind:Vr},K=li;function Rt(e,t){let r=Object.create(null),n=e.split(\",\");for(let i=0;i<n.length;i++)r[n[i]]=!0;return t?i=>!!r[i.toLowerCase()]:i=>!!r[i]}var ui=\"itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly\";var Ls=Rt(ui+\",async,autofocus,autoplay,controls,default,defer,disabled,hidden,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected\");var Jr=Object.freeze({}),$s=Object.freeze([]);var fi=Object.prototype.hasOwnProperty,ye=(e,t)=>fi.call(e,t),V=Array.isArray,oe=e=>Yr(e)===\"[object Map]\";var di=e=>typeof e==\"string\",qe=e=>typeof e==\"symbol\",be=e=>e!==null&&typeof e==\"object\";var pi=Object.prototype.toString,Yr=e=>pi.call(e),Mt=e=>Yr(e).slice(8,-1);var Ue=e=>di(e)&&e!==\"NaN\"&&e[0]!==\"-\"&&\"\"+parseInt(e,10)===e;var We=e=>{let t=Object.create(null);return r=>t[r]||(t[r]=e(r))},mi=/-(\\w)/g,js=We(e=>e.replace(mi,(t,r)=>r?r.toUpperCase():\"\")),hi=/\\B([A-Z])/g,Fs=We(e=>e.replace(hi,\"-$1\").toLowerCase()),Nt=We(e=>e.charAt(0).toUpperCase()+e.slice(1)),Bs=We(e=>e?`on${Nt(e)}`:\"\"),kt=(e,t)=>e!==t&&(e===e||t===t);var Dt=new WeakMap,we=[],L,Q=Symbol(\"iterate\"),Pt=Symbol(\"Map key iterate\");function _i(e){return e&&e._isEffect===!0}function rn(e,t=Jr){_i(e)&&(e=e.raw);let r=xi(e,t);return t.lazy||r(),r}function nn(e){e.active&&(on(e),e.options.onStop&&e.options.onStop(),e.active=!1)}var gi=0;function xi(e,t){let r=function(){if(!r.active)return e();if(!we.includes(r)){on(r);try{return bi(),we.push(r),L=r,e()}finally{we.pop(),sn(),L=we[we.length-1]}}};return r.id=gi++,r.allowRecurse=!!t.allowRecurse,r._isEffect=!0,r.active=!0,r.raw=e,r.deps=[],r.options=t,r}function on(e){let{deps:t}=e;if(t.length){for(let r=0;r<t.length;r++)t[r].delete(e);t.length=0}}var se=!0,Lt=[];function yi(){Lt.push(se),se=!1}function bi(){Lt.push(se),se=!0}function sn(){let e=Lt.pop();se=e===void 0?!0:e}function M(e,t,r){if(!se||L===void 0)return;let n=Dt.get(e);n||Dt.set(e,n=new Map);let i=n.get(r);i||n.set(r,i=new Set),i.has(L)||(i.add(L),L.deps.push(i),L.options.onTrack&&L.options.onTrack({effect:L,target:e,type:t,key:r}))}function U(e,t,r,n,i,o){let s=Dt.get(e);if(!s)return;let a=new Set,c=u=>{u&&u.forEach(p=>{(p!==L||p.allowRecurse)&&a.add(p)})};if(t===\"clear\")s.forEach(c);else if(r===\"length\"&&V(e))s.forEach((u,p)=>{(p===\"length\"||p>=n)&&c(u)});else switch(r!==void 0&&c(s.get(r)),t){case\"add\":V(e)?Ue(r)&&c(s.get(\"length\")):(c(s.get(Q)),oe(e)&&c(s.get(Pt)));break;case\"delete\":V(e)||(c(s.get(Q)),oe(e)&&c(s.get(Pt)));break;case\"set\":oe(e)&&c(s.get(Q));break}let l=u=>{u.options.onTrigger&&u.options.onTrigger({effect:u,target:e,key:r,type:t,newValue:n,oldValue:i,oldTarget:o}),u.options.scheduler?u.options.scheduler(u):u()};a.forEach(l)}var wi=Rt(\"__proto__,__v_isRef,__isVue\"),an=new Set(Object.getOwnPropertyNames(Symbol).map(e=>Symbol[e]).filter(qe)),Ei=cn();var vi=cn(!0);var Xr=Si();function Si(){let e={};return[\"includes\",\"indexOf\",\"lastIndexOf\"].forEach(t=>{e[t]=function(...r){let n=_(this);for(let o=0,s=this.length;o<s;o++)M(n,\"get\",o+\"\");let i=n[t](...r);return i===-1||i===!1?n[t](...r.map(_)):i}}),[\"push\",\"pop\",\"shift\",\"unshift\",\"splice\"].forEach(t=>{e[t]=function(...r){yi();let n=_(this)[t].apply(this,r);return sn(),n}}),e}function cn(e=!1,t=!1){return function(n,i,o){if(i===\"__v_isReactive\")return!e;if(i===\"__v_isReadonly\")return e;if(i===\"__v_raw\"&&o===(e?t?Bi:dn:t?Fi:fn).get(n))return n;let s=V(n);if(!e&&s&&ye(Xr,i))return Reflect.get(Xr,i,o);let a=Reflect.get(n,i,o);return(qe(i)?an.has(i):wi(i))||(e||M(n,\"get\",i),t)?a:It(a)?!s||!Ue(i)?a.value:a:be(a)?e?pn(a):et(a):a}}var Ai=Oi();function Oi(e=!1){return function(r,n,i,o){let s=r[n];if(!e&&(i=_(i),s=_(s),!V(r)&&It(s)&&!It(i)))return s.value=i,!0;let a=V(r)&&Ue(n)?Number(n)<r.length:ye(r,n),c=Reflect.set(r,n,i,o);return r===_(o)&&(a?kt(i,s)&&U(r,\"set\",n,i,s):U(r,\"add\",n,i)),c}}function Ci(e,t){let r=ye(e,t),n=e[t],i=Reflect.deleteProperty(e,t);return i&&r&&U(e,\"delete\",t,void 0,n),i}function Ti(e,t){let r=Reflect.has(e,t);return(!qe(t)||!an.has(t))&&M(e,\"has\",t),r}function Ri(e){return M(e,\"iterate\",V(e)?\"length\":Q),Reflect.ownKeys(e)}var Mi={get:Ei,set:Ai,deleteProperty:Ci,has:Ti,ownKeys:Ri},Ni={get:vi,set(e,t){return console.warn(`Set operation on key \"${String(t)}\" failed: target is readonly.`,e),!0},deleteProperty(e,t){return console.warn(`Delete operation on key \"${String(t)}\" failed: target is readonly.`,e),!0}};var $t=e=>be(e)?et(e):e,jt=e=>be(e)?pn(e):e,Ft=e=>e,Qe=e=>Reflect.getPrototypeOf(e);function Ge(e,t,r=!1,n=!1){e=e.__v_raw;let i=_(e),o=_(t);t!==o&&!r&&M(i,\"get\",t),!r&&M(i,\"get\",o);let{has:s}=Qe(i),a=n?Ft:r?jt:$t;if(s.call(i,t))return a(e.get(t));if(s.call(i,o))return a(e.get(o));e!==i&&e.get(t)}function Je(e,t=!1){let r=this.__v_raw,n=_(r),i=_(e);return e!==i&&!t&&M(n,\"has\",e),!t&&M(n,\"has\",i),e===i?r.has(e):r.has(e)||r.has(i)}function Ye(e,t=!1){return e=e.__v_raw,!t&&M(_(e),\"iterate\",Q),Reflect.get(e,\"size\",e)}function Zr(e){e=_(e);let t=_(this);return Qe(t).has.call(t,e)||(t.add(e),U(t,\"add\",e,e)),this}function Qr(e,t){t=_(t);let r=_(this),{has:n,get:i}=Qe(r),o=n.call(r,e);o?un(r,n,e):(e=_(e),o=n.call(r,e));let s=i.call(r,e);return r.set(e,t),o?kt(t,s)&&U(r,\"set\",e,t,s):U(r,\"add\",e,t),this}function en(e){let t=_(this),{has:r,get:n}=Qe(t),i=r.call(t,e);i?un(t,r,e):(e=_(e),i=r.call(t,e));let o=n?n.call(t,e):void 0,s=t.delete(e);return i&&U(t,\"delete\",e,void 0,o),s}function tn(){let e=_(this),t=e.size!==0,r=oe(e)?new Map(e):new Set(e),n=e.clear();return t&&U(e,\"clear\",void 0,void 0,r),n}function Xe(e,t){return function(n,i){let o=this,s=o.__v_raw,a=_(s),c=t?Ft:e?jt:$t;return!e&&M(a,\"iterate\",Q),s.forEach((l,u)=>n.call(i,c(l),c(u),o))}}function Ze(e,t,r){return function(...n){let i=this.__v_raw,o=_(i),s=oe(o),a=e===\"entries\"||e===Symbol.iterator&&s,c=e===\"keys\"&&s,l=i[e](...n),u=r?Ft:t?jt:$t;return!t&&M(o,\"iterate\",c?Pt:Q),{next(){let{value:p,done:h}=l.next();return h?{value:p,done:h}:{value:a?[u(p[0]),u(p[1])]:u(p),done:h}},[Symbol.iterator](){return this}}}}function q(e){return function(...t){{let r=t[0]?`on key \"${t[0]}\" `:\"\";console.warn(`${Nt(e)} operation ${r}failed: target is readonly.`,_(this))}return e===\"delete\"?!1:this}}function ki(){let e={get(o){return Ge(this,o)},get size(){return Ye(this)},has:Je,add:Zr,set:Qr,delete:en,clear:tn,forEach:Xe(!1,!1)},t={get(o){return Ge(this,o,!1,!0)},get size(){return Ye(this)},has:Je,add:Zr,set:Qr,delete:en,clear:tn,forEach:Xe(!1,!0)},r={get(o){return Ge(this,o,!0)},get size(){return Ye(this,!0)},has(o){return Je.call(this,o,!0)},add:q(\"add\"),set:q(\"set\"),delete:q(\"delete\"),clear:q(\"clear\"),forEach:Xe(!0,!1)},n={get(o){return Ge(this,o,!0,!0)},get size(){return Ye(this,!0)},has(o){return Je.call(this,o,!0)},add:q(\"add\"),set:q(\"set\"),delete:q(\"delete\"),clear:q(\"clear\"),forEach:Xe(!0,!0)};return[\"keys\",\"values\",\"entries\",Symbol.iterator].forEach(o=>{e[o]=Ze(o,!1,!1),r[o]=Ze(o,!0,!1),t[o]=Ze(o,!1,!0),n[o]=Ze(o,!0,!0)}),[e,r,t,n]}var[Di,Pi,Ii,Li]=ki();function ln(e,t){let r=t?e?Li:Ii:e?Pi:Di;return(n,i,o)=>i===\"__v_isReactive\"?!e:i===\"__v_isReadonly\"?e:i===\"__v_raw\"?n:Reflect.get(ye(r,i)&&i in n?r:n,i,o)}var $i={get:ln(!1,!1)};var ji={get:ln(!0,!1)};function un(e,t,r){let n=_(r);if(n!==r&&t.call(e,n)){let i=Mt(e);console.warn(`Reactive ${i} contains both the raw and reactive versions of the same object${i===\"Map\"?\" as keys\":\"\"}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}var fn=new WeakMap,Fi=new WeakMap,dn=new WeakMap,Bi=new WeakMap;function zi(e){switch(e){case\"Object\":case\"Array\":return 1;case\"Map\":case\"Set\":case\"WeakMap\":case\"WeakSet\":return 2;default:return 0}}function Ki(e){return e.__v_skip||!Object.isExtensible(e)?0:zi(Mt(e))}function et(e){return e&&e.__v_isReadonly?e:mn(e,!1,Mi,$i,fn)}function pn(e){return mn(e,!0,Ni,ji,dn)}function mn(e,t,r,n,i){if(!be(e))return console.warn(`value cannot be made reactive: ${String(e)}`),e;if(e.__v_raw&&!(t&&e.__v_isReactive))return e;let o=i.get(e);if(o)return o;let s=Ki(e);if(s===0)return e;let a=new Proxy(e,s===2?n:r);return i.set(e,a),a}function _(e){return e&&_(e.__v_raw)||e}function It(e){return Boolean(e&&e.__v_isRef===!0)}y(\"nextTick\",()=>ie);y(\"dispatch\",e=>J.bind(J,e));y(\"watch\",(e,{evaluateLater:t,cleanup:r})=>(n,i)=>{let o=t(n),a=ve(()=>{let c;return o(l=>c=l),c},i);r(a)});y(\"store\",Kr);y(\"data\",e=>Ce(e));y(\"root\",e=>Y(e));y(\"refs\",e=>(e._x_refs_proxy||(e._x_refs_proxy=z(Hi(e))),e._x_refs_proxy));function Hi(e){let t=[];return j(e,r=>{r._x_refs&&t.push(r._x_refs)}),t}var Bt={};function zt(e){return Bt[e]||(Bt[e]=0),++Bt[e]}function hn(e,t){return j(e,r=>{if(r._x_ids&&r._x_ids[t])return!0})}function _n(e,t){e._x_ids||(e._x_ids={}),e._x_ids[t]||(e._x_ids[t]=zt(t))}y(\"id\",(e,{cleanup:t})=>(r,n=null)=>{let i=`${r}${n?`-${n}`:\"\"}`;return Vi(e,i,t,()=>{let o=hn(e,r),s=o?o._x_ids[r]:zt(r);return n?`${r}-${s}-${n}`:`${r}-${s}`})});H((e,t)=>{e._x_id&&(t._x_id=e._x_id)});function Vi(e,t,r,n){if(e._x_id||(e._x_id={}),e._x_id[t])return e._x_id[t];let i=n();return e._x_id[t]=i,r(()=>{delete e._x_id[t]}),i}y(\"el\",e=>e);gn(\"Focus\",\"focus\",\"focus\");gn(\"Persist\",\"persist\",\"persist\");function gn(e,t,r){y(t,n=>E(`You can't use [$${t}] without first installing the \"${e}\" plugin here: https://alpinejs.dev/plugins/${r}`,n))}d(\"modelable\",(e,{expression:t},{effect:r,evaluateLater:n,cleanup:i})=>{let o=n(t),s=()=>{let u;return o(p=>u=p),u},a=n(`${t} = __placeholder`),c=u=>a(()=>{},{scope:{__placeholder:u}}),l=s();c(l),queueMicrotask(()=>{if(!e._x_model)return;e._x_removeModelListeners.default();let u=e._x_model.get,p=e._x_model.set,h=Ve({get(){return u()},set(w){p(w)}},{get(){return s()},set(w){c(w)}});i(h)})});d(\"teleport\",(e,{modifiers:t,expression:r},{cleanup:n})=>{e.tagName.toLowerCase()!==\"template\"&&E(\"x-teleport can only be used on a <template> tag\",e);let i=xn(r),o=e.content.cloneNode(!0).firstElementChild;e._x_teleport=o,o._x_teleportBack=e,e.setAttribute(\"data-teleport-template\",!0),o.setAttribute(\"data-teleport-target\",!0),e._x_forwardEvents&&e._x_forwardEvents.forEach(a=>{o.addEventListener(a,c=>{c.stopPropagation(),e.dispatchEvent(new c.constructor(c.type,c))})}),k(o,{},e);let s=(a,c,l)=>{l.includes(\"prepend\")?c.parentNode.insertBefore(a,c):l.includes(\"append\")?c.parentNode.insertBefore(a,c.nextSibling):c.appendChild(a)};m(()=>{s(o,i,t),A(()=>{S(o)})()}),e._x_teleportPutBack=()=>{let a=xn(r);m(()=>{s(e._x_teleport,a,t)})},n(()=>m(()=>{o.remove(),P(o)}))});var qi=document.createElement(\"div\");function xn(e){let t=A(()=>document.querySelector(e),()=>qi)();return t||E(`Cannot find x-teleport element for selector: \"${e}\"`),t}var yn=()=>{};yn.inline=(e,{modifiers:t},{cleanup:r})=>{t.includes(\"self\")?e._x_ignoreSelf=!0:e._x_ignore=!0,r(()=>{t.includes(\"self\")?delete e._x_ignoreSelf:delete e._x_ignore})};d(\"ignore\",yn);d(\"effect\",A((e,{expression:t},{effect:r})=>{r(x(e,t))}));function ae(e,t,r,n){let i=e,o=c=>n(c),s={},a=(c,l)=>u=>l(c,u);if(r.includes(\"dot\")&&(t=Ui(t)),r.includes(\"camel\")&&(t=Wi(t)),r.includes(\"passive\")&&(s.passive=!0),r.includes(\"capture\")&&(s.capture=!0),r.includes(\"window\")&&(i=window),r.includes(\"document\")&&(i=document),r.includes(\"debounce\")){let c=r[r.indexOf(\"debounce\")+1]||\"invalid-wait\",l=tt(c.split(\"ms\")[0])?Number(c.split(\"ms\")[0]):250;o=Ke(o,l)}if(r.includes(\"throttle\")){let c=r[r.indexOf(\"throttle\")+1]||\"invalid-wait\",l=tt(c.split(\"ms\")[0])?Number(c.split(\"ms\")[0]):250;o=He(o,l)}return r.includes(\"prevent\")&&(o=a(o,(c,l)=>{l.preventDefault(),c(l)})),r.includes(\"stop\")&&(o=a(o,(c,l)=>{l.stopPropagation(),c(l)})),r.includes(\"once\")&&(o=a(o,(c,l)=>{c(l),i.removeEventListener(t,o,s)})),(r.includes(\"away\")||r.includes(\"outside\"))&&(i=document,o=a(o,(c,l)=>{e.contains(l.target)||l.target.isConnected!==!1&&(e.offsetWidth<1&&e.offsetHeight<1||e._x_isShown!==!1&&c(l))})),r.includes(\"self\")&&(o=a(o,(c,l)=>{l.target===e&&c(l)})),(Ji(t)||wn(t))&&(o=a(o,(c,l)=>{Yi(l,r)||c(l)})),i.addEventListener(t,o,s),()=>{i.removeEventListener(t,o,s)}}function Ui(e){return e.replace(/-/g,\".\")}function Wi(e){return e.toLowerCase().replace(/-(\\w)/g,(t,r)=>r.toUpperCase())}function tt(e){return!Array.isArray(e)&&!isNaN(e)}function Gi(e){return[\" \",\"_\"].includes(e)?e:e.replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/[_\\s]/,\"-\").toLowerCase()}function Ji(e){return[\"keydown\",\"keyup\"].includes(e)}function wn(e){return[\"contextmenu\",\"click\",\"mouse\"].some(t=>e.includes(t))}function Yi(e,t){let r=t.filter(o=>![\"window\",\"document\",\"prevent\",\"stop\",\"once\",\"capture\",\"self\",\"away\",\"outside\",\"passive\"].includes(o));if(r.includes(\"debounce\")){let o=r.indexOf(\"debounce\");r.splice(o,tt((r[o+1]||\"invalid-wait\").split(\"ms\")[0])?2:1)}if(r.includes(\"throttle\")){let o=r.indexOf(\"throttle\");r.splice(o,tt((r[o+1]||\"invalid-wait\").split(\"ms\")[0])?2:1)}if(r.length===0||r.length===1&&bn(e.key).includes(r[0]))return!1;let i=[\"ctrl\",\"shift\",\"alt\",\"meta\",\"cmd\",\"super\"].filter(o=>r.includes(o));return r=r.filter(o=>!i.includes(o)),!(i.length>0&&i.filter(s=>((s===\"cmd\"||s===\"super\")&&(s=\"meta\"),e[`${s}Key`])).length===i.length&&(wn(e.type)||bn(e.key).includes(r[0])))}function bn(e){if(!e)return[];e=Gi(e);let t={ctrl:\"control\",slash:\"/\",space:\" \",spacebar:\" \",cmd:\"meta\",esc:\"escape\",up:\"arrow-up\",down:\"arrow-down\",left:\"arrow-left\",right:\"arrow-right\",period:\".\",comma:\",\",equal:\"=\",minus:\"-\",underscore:\"_\"};return t[e]=e,Object.keys(t).map(r=>{if(t[r]===e)return r}).filter(r=>r)}d(\"model\",(e,{modifiers:t,expression:r},{effect:n,cleanup:i})=>{let o=e;t.includes(\"parent\")&&(o=e.parentNode);let s=x(o,r),a;typeof r==\"string\"?a=x(o,`${r} = __placeholder`):typeof r==\"function\"&&typeof r()==\"string\"?a=x(o,`${r()} = __placeholder`):a=()=>{};let c=()=>{let h;return s(w=>h=w),En(h)?h.get():h},l=h=>{let w;s(F=>w=F),En(w)?w.set(h):a(()=>{},{scope:{__placeholder:h}})};typeof r==\"string\"&&e.type===\"radio\"&&m(()=>{e.hasAttribute(\"name\")||e.setAttribute(\"name\",r)});var u=e.tagName.toLowerCase()===\"select\"||[\"checkbox\",\"radio\"].includes(e.type)||t.includes(\"lazy\")?\"change\":\"input\";let p=I?()=>{}:ae(e,u,t,h=>{l(Kt(e,t,h,c()))});if(t.includes(\"fill\")&&([void 0,null,\"\"].includes(c())||ze(e)&&Array.isArray(c())||e.tagName.toLowerCase()===\"select\"&&e.multiple)&&l(Kt(e,t,{target:e},c())),e._x_removeModelListeners||(e._x_removeModelListeners={}),e._x_removeModelListeners.default=p,i(()=>e._x_removeModelListeners.default()),e.form){let h=ae(e.form,\"reset\",[],w=>{ie(()=>e._x_model&&e._x_model.set(Kt(e,t,{target:e},c())))});i(()=>h())}e._x_model={get(){return c()},set(h){l(h)}},e._x_forceModelUpdate=h=>{h===void 0&&typeof r==\"string\"&&r.match(/\\./)&&(h=\"\"),window.fromModel=!0,m(()=>ge(e,\"value\",h)),delete window.fromModel},n(()=>{let h=c();t.includes(\"unintrusive\")&&document.activeElement.isSameNode(e)||e._x_forceModelUpdate(h)})});function Kt(e,t,r,n){return m(()=>{if(r instanceof CustomEvent&&r.detail!==void 0)return r.detail!==null&&r.detail!==void 0?r.detail:r.target.value;if(ze(e))if(Array.isArray(n)){let i=null;return t.includes(\"number\")?i=Ht(r.target.value):t.includes(\"boolean\")?i=xe(r.target.value):i=r.target.value,r.target.checked?n.includes(i)?n:n.concat([i]):n.filter(o=>!Xi(o,i))}else return r.target.checked;else{if(e.tagName.toLowerCase()===\"select\"&&e.multiple)return t.includes(\"number\")?Array.from(r.target.selectedOptions).map(i=>{let o=i.value||i.text;return Ht(o)}):t.includes(\"boolean\")?Array.from(r.target.selectedOptions).map(i=>{let o=i.value||i.text;return xe(o)}):Array.from(r.target.selectedOptions).map(i=>i.value||i.text);{let i;return Ot(e)?r.target.checked?i=r.target.value:i=n:i=r.target.value,t.includes(\"number\")?Ht(i):t.includes(\"boolean\")?xe(i):t.includes(\"trim\")?i.trim():i}}})}function Ht(e){let t=e?parseFloat(e):null;return Zi(t)?t:e}function Xi(e,t){return e==t}function Zi(e){return!Array.isArray(e)&&!isNaN(e)}function En(e){return e!==null&&typeof e==\"object\"&&typeof e.get==\"function\"&&typeof e.set==\"function\"}d(\"cloak\",e=>queueMicrotask(()=>m(()=>e.removeAttribute(C(\"cloak\")))));$e(()=>`[${C(\"init\")}]`);d(\"init\",A((e,{expression:t},{evaluate:r})=>typeof t==\"string\"?!!t.trim()&&r(t,{},!1):r(t,{},!1)));d(\"text\",(e,{expression:t},{effect:r,evaluateLater:n})=>{let i=n(t);r(()=>{i(o=>{m(()=>{e.textContent=o})})})});d(\"html\",(e,{expression:t},{effect:r,evaluateLater:n})=>{let i=n(t);r(()=>{i(o=>{m(()=>{e.innerHTML=o,e._x_ignoreSelf=!0,S(e),delete e._x_ignoreSelf})})})});ne(Pe(\":\",Ie(C(\"bind:\"))));var vn=(e,{value:t,modifiers:r,expression:n,original:i},{effect:o,cleanup:s})=>{if(!t){let c={};qr(c),x(e,n)(u=>{Tt(e,u,i)},{scope:c});return}if(t===\"key\")return Qi(e,n);if(e._x_inlineBindings&&e._x_inlineBindings[t]&&e._x_inlineBindings[t].extract)return;let a=x(e,n);o(()=>a(c=>{c===void 0&&typeof n==\"string\"&&n.match(/\\./)&&(c=\"\"),m(()=>ge(e,t,c,r))})),s(()=>{e._x_undoAddedClasses&&e._x_undoAddedClasses(),e._x_undoAddedStyles&&e._x_undoAddedStyles()})};vn.inline=(e,{value:t,modifiers:r,expression:n})=>{t&&(e._x_inlineBindings||(e._x_inlineBindings={}),e._x_inlineBindings[t]={expression:n,extract:!1})};d(\"bind\",vn);function Qi(e,t){e._x_keyExpression=t}Le(()=>`[${C(\"data\")}]`);d(\"data\",(e,{expression:t},{cleanup:r})=>{if(eo(e))return;t=t===\"\"?\"{}\":t;let n={};fe(n,e);let i={};Gr(i,n);let o=R(e,t,{scope:i});(o===void 0||o===!0)&&(o={}),fe(o,e);let s=T(o);Te(s);let a=k(e,s);s.init&&R(e,s.init),r(()=>{s.destroy&&R(e,s.destroy),a()})});H((e,t)=>{e._x_dataStack&&(t._x_dataStack=e._x_dataStack,t.setAttribute(\"data-has-alpine-state\",!0))});function eo(e){return I?Be?!0:e.hasAttribute(\"data-has-alpine-state\"):!1}d(\"show\",(e,{modifiers:t,expression:r},{effect:n})=>{let i=x(e,r);e._x_doHide||(e._x_doHide=()=>{m(()=>{e.style.setProperty(\"display\",\"none\",t.includes(\"important\")?\"important\":void 0)})}),e._x_doShow||(e._x_doShow=()=>{m(()=>{e.style.length===1&&e.style.display===\"none\"?e.removeAttribute(\"style\"):e.style.removeProperty(\"display\")})});let o=()=>{e._x_doHide(),e._x_isShown=!1},s=()=>{e._x_doShow(),e._x_isShown=!0},a=()=>setTimeout(s),c=he(p=>p?s():o(),p=>{typeof e._x_toggleAndCascadeWithTransitions==\"function\"?e._x_toggleAndCascadeWithTransitions(e,p,s,o):p?a():o()}),l,u=!0;n(()=>i(p=>{!u&&p===l||(t.includes(\"immediate\")&&(p?a():o()),c(p),l=p,u=!1)}))});d(\"for\",(e,{expression:t},{effect:r,cleanup:n})=>{let i=ro(t),o=x(e,i.items),s=x(e,e._x_keyExpression||\"index\");e._x_prevKeys=[],e._x_lookup={},r(()=>to(e,i,o,s)),n(()=>{Object.values(e._x_lookup).forEach(a=>m(()=>{P(a),a.remove()})),delete e._x_prevKeys,delete e._x_lookup})});function to(e,t,r,n){let i=s=>typeof s==\"object\"&&!Array.isArray(s),o=e;r(s=>{no(s)&&s>=0&&(s=Array.from(Array(s).keys(),f=>f+1)),s===void 0&&(s=[]);let a=e._x_lookup,c=e._x_prevKeys,l=[],u=[];if(i(s))s=Object.entries(s).map(([f,g])=>{let b=Sn(t,g,f,s);n(v=>{u.includes(v)&&E(\"Duplicate key on x-for\",e),u.push(v)},{scope:{index:f,...b}}),l.push(b)});else for(let f=0;f<s.length;f++){let g=Sn(t,s[f],f,s);n(b=>{u.includes(b)&&E(\"Duplicate key on x-for\",e),u.push(b)},{scope:{index:f,...g}}),l.push(g)}let p=[],h=[],w=[],F=[];for(let f=0;f<c.length;f++){let g=c[f];u.indexOf(g)===-1&&w.push(g)}c=c.filter(f=>!w.includes(f));let Ee=\"template\";for(let f=0;f<u.length;f++){let g=u[f],b=c.indexOf(g);if(b===-1)c.splice(f,0,g),p.push([Ee,f]);else if(b!==f){let v=c.splice(f,1)[0],O=c.splice(b-1,1)[0];c.splice(f,0,O),c.splice(b,0,v),h.push([v,O])}else F.push(g);Ee=g}for(let f=0;f<w.length;f++){let g=w[f];g in a&&(m(()=>{P(a[g]),a[g].remove()}),delete a[g])}for(let f=0;f<h.length;f++){let[g,b]=h[f],v=a[g],O=a[b],ee=document.createElement(\"div\");m(()=>{O||E('x-for \":key\" is undefined or invalid',o,b,a),O.after(ee),v.after(O),O._x_currentIfEl&&O.after(O._x_currentIfEl),ee.before(v),v._x_currentIfEl&&v.after(v._x_currentIfEl),ee.remove()}),O._x_refreshXForScope(l[u.indexOf(b)])}for(let f=0;f<p.length;f++){let[g,b]=p[f],v=g===\"template\"?o:a[g];v._x_currentIfEl&&(v=v._x_currentIfEl);let O=l[b],ee=u[b],ce=document.importNode(o.content,!0).firstElementChild,qt=T(O);k(ce,qt,o),ce._x_refreshXForScope=On=>{Object.entries(On).forEach(([Cn,Tn])=>{qt[Cn]=Tn})},m(()=>{v.after(ce),A(()=>S(ce))()}),typeof ee==\"object\"&&E(\"x-for key cannot be an object, it must be a string or an integer\",o),a[ee]=ce}for(let f=0;f<F.length;f++)a[F[f]]._x_refreshXForScope(l[u.indexOf(F[f])]);o._x_prevKeys=u})}function ro(e){let t=/,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/,r=/^\\s*\\(|\\)\\s*$/g,n=/([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/,i=e.match(n);if(!i)return;let o={};o.items=i[2].trim();let s=i[1].replace(r,\"\").trim(),a=s.match(t);return a?(o.item=s.replace(t,\"\").trim(),o.index=a[1].trim(),a[2]&&(o.collection=a[2].trim())):o.item=s,o}function Sn(e,t,r,n){let i={};return/^\\[.*\\]$/.test(e.item)&&Array.isArray(t)?e.item.replace(\"[\",\"\").replace(\"]\",\"\").split(\",\").map(s=>s.trim()).forEach((s,a)=>{i[s]=t[a]}):/^\\{.*\\}$/.test(e.item)&&!Array.isArray(t)&&typeof t==\"object\"?e.item.replace(\"{\",\"\").replace(\"}\",\"\").split(\",\").map(s=>s.trim()).forEach(s=>{i[s]=t[s]}):i[e.item]=t,e.index&&(i[e.index]=r),e.collection&&(i[e.collection]=n),i}function no(e){return!Array.isArray(e)&&!isNaN(e)}function An(){}An.inline=(e,{expression:t},{cleanup:r})=>{let n=Y(e);n._x_refs||(n._x_refs={}),n._x_refs[t]=e,r(()=>delete n._x_refs[t])};d(\"ref\",An);d(\"if\",(e,{expression:t},{effect:r,cleanup:n})=>{e.tagName.toLowerCase()!==\"template\"&&E(\"x-if can only be used on a <template> tag\",e);let i=x(e,t),o=()=>{if(e._x_currentIfEl)return e._x_currentIfEl;let a=e.content.cloneNode(!0).firstElementChild;return k(a,{},e),m(()=>{e.after(a),A(()=>S(a))()}),e._x_currentIfEl=a,e._x_undoIf=()=>{m(()=>{P(a),a.remove()}),delete e._x_currentIfEl},a},s=()=>{e._x_undoIf&&(e._x_undoIf(),delete e._x_undoIf)};r(()=>i(a=>{a?o():s()})),n(()=>e._x_undoIf&&e._x_undoIf())});d(\"id\",(e,{expression:t},{evaluate:r})=>{r(t).forEach(i=>_n(e,i))});H((e,t)=>{e._x_ids&&(t._x_ids=e._x_ids)});ne(Pe(\"@\",Ie(C(\"on:\"))));d(\"on\",A((e,{value:t,modifiers:r,expression:n},{cleanup:i})=>{let o=n?x(e,n):()=>{};e.tagName.toLowerCase()===\"template\"&&(e._x_forwardEvents||(e._x_forwardEvents=[]),e._x_forwardEvents.includes(t)||e._x_forwardEvents.push(t));let s=ae(e,t,r,a=>{o(()=>{},{scope:{$event:a},params:[a]})});i(()=>s())}));rt(\"Collapse\",\"collapse\",\"collapse\");rt(\"Intersect\",\"intersect\",\"intersect\");rt(\"Focus\",\"trap\",\"focus\");rt(\"Mask\",\"mask\",\"mask\");function rt(e,t,r){d(t,n=>E(`You can't use [x-${t}] without first installing the \"${e}\" plugin here: https://alpinejs.dev/plugins/${r}`,n))}K.setEvaluator(xt);K.setReactivityEngine({reactive:et,effect:rn,release:nn,raw:_});var Vt=K;window.Alpine=Vt;queueMicrotask(()=>{Vt.start()});})();","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/api.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/components.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'DOMParser' is not defined.","line":35,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":33},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":101,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":101,"endColumn":32,"suggestions":[{"fix":{"range":[3402,3453],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":164,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":164,"endColumn":18,"suggestions":[{"fix":{"range":[5308,5359],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":186,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":186,"endColumn":24,"suggestions":[{"fix":{"range":[6012,6076],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":18,"suggestions":[{"fix":{"range":[6193,6243],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'_e' is defined but never used.","line":209,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":209,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'MutationObserver' is not defined.","line":230,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":230,"endColumn":38}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Import a component into a target element\n// Import a component and recursively load its nested components\n// Returns the parsed document for additional processing\n\n// cache object to store loaded components\nconst componentCache = {};\n\nexport async function importComponent(path, targetElement) {\n  try {\n    if (!targetElement) {\n      throw new Error(\"Target element is required\");\n    }\n\n    // Show loading indicator\n    targetElement.innerHTML = '<div class=\"loading\"></div>';\n\n    // full component url\n    const componentUrl = \"components/\" + path;\n\n    // get html from cache or fetch it\n    let html;\n    if (componentCache[componentUrl]) {\n      html = componentCache[componentUrl];\n    } else {\n      const response = await fetch(componentUrl);\n      if (!response.ok) {\n        throw new Error(\n          `Error loading component ${path}: ${response.statusText}`\n        );\n      }\n      html = await response.text();\n      // store in cache\n      componentCache[componentUrl] = html;\n    }\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n\n    const allNodes = [\n      ...doc.querySelectorAll(\"style\"),\n      ...doc.querySelectorAll(\"script\"),\n      ...doc.body.childNodes,\n    ];\n\n    const loadPromises = [];\n    let blobCounter = 0;\n\n    for (const node of allNodes) {\n      if (node.nodeName === \"SCRIPT\") {\n        const isModule =\n          node.type === \"module\" || node.getAttribute(\"type\") === \"module\";\n\n        if (isModule) {\n          if (node.src) {\n            // For <script type=\"module\" src=\"...\" use dynamic import\n            const resolvedUrl = new URL(\n              node.src,\n              globalThis.location.origin\n            ).toString();\n\n            // Check if module is already in cache\n            if (!componentCache[resolvedUrl]) {\n              const modulePromise = import(resolvedUrl);\n              componentCache[resolvedUrl] = modulePromise;\n              loadPromises.push(modulePromise);\n            }\n          } else {\n            const virtualUrl = `${componentUrl.replaceAll(\n              \"/\",\n              \"_\"\n            )}.${++blobCounter}.js`;\n\n            // For inline module scripts, use cache or create blob\n            if (!componentCache[virtualUrl]) {\n              // Transform relative import paths to absolute URLs\n              let content = node.textContent.replace(\n                /import\\s+([^'\"]+)\\s+from\\s+[\"']([^\"']+)[\"']/g,\n                (match, bindings, importPath) => {\n                  // Convert relative OR root-based (e.g. /src/...) to absolute URLs\n                  if (!/^https?:\\/\\//.test(importPath)) {\n                    const absoluteUrl = new URL(\n                      importPath,\n                      globalThis.location.origin\n                    ).href;\n                    return `import ${bindings} from \"${absoluteUrl}\"`;\n                  }\n                  return match;\n                }\n              );\n\n              // Add sourceURL to the content\n              content += `\\n//# sourceURL=${virtualUrl}`;\n\n              // Create a Blob from the rewritten content\n              const blob = new Blob([content], {\n                type: \"text/javascript\",\n              });\n              const blobUrl = URL.createObjectURL(blob);\n\n              const modulePromise = import(blobUrl)\n                .catch((err) => {\n                  console.error(\"Failed to load inline module\", err);\n                  throw err;\n                })\n                .finally(() => URL.revokeObjectURL(blobUrl));\n\n              componentCache[virtualUrl] = modulePromise;\n              loadPromises.push(modulePromise);\n            }\n          }\n        } else {\n          // Non-module script\n          const script = document.createElement(\"script\");\n          Array.from(node.attributes || []).forEach((attr) => {\n            script.setAttribute(attr.name, attr.value);\n          });\n          script.textContent = node.textContent;\n\n          if (script.src) {\n            const promise = new Promise((resolve, reject) => {\n              script.onload = resolve;\n              script.onerror = reject;\n            });\n            loadPromises.push(promise);\n          }\n\n          targetElement.appendChild(script);\n        }\n      } else if (\n        node.nodeName === \"STYLE\" ||\n        (node.nodeName === \"LINK\" && node.rel === \"stylesheet\")\n      ) {\n        const clone = node.cloneNode(true);\n\n        if (clone.tagName === \"LINK\" && clone.rel === \"stylesheet\") {\n          const promise = new Promise((resolve, reject) => {\n            clone.onload = resolve;\n            clone.onerror = reject;\n          });\n          loadPromises.push(promise);\n        }\n\n        targetElement.appendChild(clone);\n      } else {\n        const clone = node.cloneNode(true);\n        targetElement.appendChild(clone);\n      }\n    }\n\n    // Wait for all tracked external scripts/styles to finish loading\n    await Promise.all(loadPromises);\n\n    // Remove loading indicator\n    const loadingEl = targetElement.querySelector(\".loading\");\n    if (loadingEl) {\n      targetElement.removeChild(loadingEl);\n    }\n\n    // // Load any nested components\n    // await loadComponents([targetElement]);\n\n    // Return parsed document\n    return doc;\n  } catch (error) {\n    console.error(\"Error importing component:\", error);\n    throw error;\n  }\n}\n\n// Load all x-component tags starting from root elements\nexport async function loadComponents(roots = [document.documentElement]) {\n  try {\n    // Convert single root to array if needed\n    const rootElements = Array.isArray(roots) ? roots : [roots];\n\n    // Find all top-level components and load them in parallel\n    const components = rootElements.flatMap((root) =>\n      Array.from(root.querySelectorAll(\"x-component\"))\n    );\n\n    if (components.length === 0) return;\n\n    await Promise.all(\n      components.map(async (component) => {   \n        const path = component.getAttribute(\"path\");\n        if (!path) {\n          console.error(\"x-component missing path attribute:\", component);\n          return;\n        }\n        await importComponent(path, component);\n      })\n    );\n  } catch (error) {\n    console.error(\"Error loading components:\", error);\n  }\n}\n\n// Function to traverse parents and collect x-component attributes\nexport function getParentAttributes(el) {\n  let element = el;\n  const attrs = {};\n\n  while (element) {\n    if (element.tagName.toLowerCase() === 'x-component') {\n      // Get all attributes\n      for (const attr of element.attributes) {\n        try {\n          // Try to parse as JSON first\n          attrs[attr.name] = JSON.parse(attr.value);\n        } catch(_e) {\n          // If not JSON, use raw value\n          attrs[attr.name] = attr.value;\n        }\n      }\n    }\n    element = element.parentElement;\n  }\n  return attrs;\n}\n// expose as global for x-components in Alpine\nglobalThis.xAttrs = getParentAttributes;\n\n// Initialize when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => loadComponents());\n} else {\n  loadComponents();\n}\n\n// Watch for DOM changes to dynamically load x-components\nconst observer = new MutationObserver((mutations) => {\n  for (const mutation of mutations) {\n    for (const node of mutation.addedNodes) {\n      if (node.nodeType === 1) {\n        // ELEMENT_NODE\n        // Check if this node or its descendants contain x-component(s)\n        if (node.matches?.(\"x-component\")) {\n          importComponent(node.getAttribute(\"path\"), node);\n        } else if (node.querySelectorAll) {\n          loadComponents([node]);\n        }\n      }\n    }\n  }\n});\nobserver.observe(document.body, { childList: true, subtree: true });\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/file_browser.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":52,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":52,"endColumn":22,"suggestions":[{"fix":{"range":[1406,1468],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'data' is assigned a value but never used.","line":128,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":128,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"data"},"fix":{"range":[3463,3498],"text":""},"desc":"Remove unused variable 'data'."}]},{"ruleId":"no-undef","severity":2,"message":"'data' is not defined.","line":188,"column":15,"nodeType":"Identifier","messageId":"undef","endLine":188,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'openFileLink' is not defined.","line":266,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":266,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'openFileLink' is not defined.","line":286,"column":23,"nodeType":"Identifier","messageId":"undef","endLine":286,"endColumn":35}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fileBrowserModalProxy = {\n  isOpen: false,\n  isLoading: false,\n\n  browser: {\n    title: \"File Browser\",\n    currentPath: \"\",\n    entries: [],\n    parentPath: \"\",\n    sortBy: \"name\",\n    sortDirection: \"asc\",\n  },\n\n  // Initialize navigation history\n  history: [],\n\n  async openModal(path) {\n    const modalEl = document.getElementById(\"fileBrowserModal\");\n    const modalAD = Alpine.$data(modalEl);\n\n    modalAD.isOpen = true;\n    modalAD.isLoading = true;\n    modalAD.history = []; // reset history when opening modal\n\n    // Initialize currentPath to root if it's empty\n    if (path) modalAD.browser.currentPath = path;\n    else if (!modalAD.browser.currentPath)\n      modalAD.browser.currentPath = \"$WORK_DIR\";\n\n    await modalAD.fetchFiles(modalAD.browser.currentPath);\n  },\n\n  isArchive(filename) {\n    const archiveExts = [\"zip\", \"tar\", \"gz\", \"rar\", \"7z\"];\n    const ext = filename.split(\".\").pop().toLowerCase();\n    return archiveExts.includes(ext);\n  },\n\n  async fetchFiles(path = \"\") {\n    this.isLoading = true;\n    try {\n      const response = await fetch(\n        `/get_work_dir_files?path=${encodeURIComponent(path)}`\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        this.browser.entries = data.data.entries;\n        this.browser.currentPath = data.data.current_path;\n        this.browser.parentPath = data.data.parent_path;\n      } else {\n        console.error(\"Error fetching files:\", await response.text());\n        this.browser.entries = [];\n      }\n    } catch (error) {\n      window.toastFetchError(\"Error fetching files\", error);\n      this.browser.entries = [];\n    } finally {\n      this.isLoading = false;\n    }\n  },\n\n  async navigateToFolder(path) {\n    // Push current path to history before navigating\n    if (this.browser.currentPath !== path) {\n      this.history.push(this.browser.currentPath);\n    }\n    await this.fetchFiles(path);\n  },\n\n  async navigateUp() {\n    if (this.browser.parentPath !== \"\") {\n      // Push current path to history before navigating up\n      this.history.push(this.browser.currentPath);\n      await this.fetchFiles(this.browser.parentPath);\n    }\n  },\n\n  sortFiles(entries) {\n    return [...entries].sort((a, b) => {\n      // Folders always come first\n      if (a.is_dir !== b.is_dir) {\n        return a.is_dir ? -1 : 1;\n      }\n\n      const direction = this.browser.sortDirection === \"asc\" ? 1 : -1;\n      switch (this.browser.sortBy) {\n        case \"name\":\n          return direction * a.name.localeCompare(b.name);\n        case \"size\":\n          return direction * (a.size - b.size);\n        case \"date\":\n          return direction * (new Date(a.modified) - new Date(b.modified));\n        default:\n          return 0;\n      }\n    });\n  },\n\n  toggleSort(column) {\n    if (this.browser.sortBy === column) {\n      this.browser.sortDirection =\n        this.browser.sortDirection === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      this.browser.sortBy = column;\n      this.browser.sortDirection = \"asc\";\n    }\n  },\n\n  async deleteFile(file) {\n    if (!confirm(`Are you sure you want to delete ${file.name}?`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/delete_work_dir_file\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          path: file.path,\n          currentPath: this.browser.currentPath,\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        this.browser.entries = this.browser.entries.filter(\n          (entry) => entry.path !== file.path\n        );\n        alert(\"File deleted successfully.\");\n      } else {\n        alert(`Error deleting file: ${await response.text()}`);\n      }\n    } catch (error) {\n      window.toastFetchError(\"Error deleting file\", error);\n      alert(\"Error deleting file\");\n    }\n  },\n\n  async handleFileUpload(event) {\n    try {\n      const files = event.target.files;\n      if (!files.length) return;\n\n      const formData = new FormData();\n      formData.append(\"path\", this.browser.currentPath);\n\n      for (let i = 0; i < files.length; i++) {\n        const ext = files[i].name.split(\".\").pop().toLowerCase();\n        if (![\"zip\", \"tar\", \"gz\", \"rar\", \"7z\"].includes(ext)) {\n          if (files[i].size > 100 * 1024 * 1024) {\n            // 100MB\n            alert(\n              `File ${files[i].name} exceeds the maximum allowed size of 100MB.`\n            );\n            continue;\n          }\n        }\n        formData.append(\"files[]\", files[i]);\n      }\n\n      // Proceed with upload after validation\n      const response = await fetch(\"/upload_work_dir_files\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        // Update the file list with new data\n        this.browser.entries = data.data.entries.map((entry) => ({\n          ...entry,\n          uploadStatus: data.failed.includes(entry.name) ? \"failed\" : \"success\",\n        }));\n        this.browser.currentPath = data.data.current_path;\n        this.browser.parentPath = data.data.parent_path;\n\n        // Show success message\n        if (data.failed && data.failed.length > 0) {\n          const failedFiles = data.failed\n            .map((file) => `${file.name}: ${file.error}`)\n            .join(\"\\n\");\n          alert(`Some files failed to upload:\\n${failedFiles}`);\n        }\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      window.toastFetchError(\"Error uploading files\", error);\n      alert(\"Error uploading files\");\n    }\n  },\n\n  async downloadFile(file) {\n    try {\n      const downloadUrl = `/download_work_dir_file?path=${encodeURIComponent(\n        file.path\n      )}`;\n\n      const response = await fetch(downloadUrl);\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const blob = await response.blob();\n\n      const link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blob);\n      link.download = file.name;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(link.href);\n    } catch (error) {\n      window.toastFetchError(\"Error downloading file\", error);\n      alert(\"Error downloading file\");\n    }\n  },\n\n  // Helper Functions\n  formatFileSize(size) {\n    if (size === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  },\n\n  formatDate(dateString) {\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  },\n\n  handleClose() {\n    this.isOpen = false;\n  },\n};\n\n// Wait for Alpine to be ready\ndocument.addEventListener(\"alpine:init\", () => {\n  Alpine.data(\"fileBrowserModalProxy\", () => ({\n    init() {\n      Object.assign(this, fileBrowserModalProxy);\n      // Ensure immediate file fetch when modal opens\n      this.$watch(\"isOpen\", async (value) => {\n        if (value) {\n          await this.fetchFiles(this.browser.currentPath);\n        }\n      });\n    },\n  }));\n});\n\n// Keep the global assignment for backward compatibility\nwindow.fileBrowserModalProxy = fileBrowserModalProxy;\n\nopenFileLink = async function (path) {\n  try {\n    const resp = await window.sendJsonData(\"/file_info\", { path });\n    if (!resp.exists) {\n      window.toast(\"File does not exist.\", \"error\");\n      return;\n    }\n\n    if (resp.is_dir) {\n      fileBrowserModalProxy.openModal(resp.abs_path);\n    } else {\n      fileBrowserModalProxy.downloadFile({\n        path: resp.abs_path,\n        name: resp.file_name,\n      });\n    }\n  } catch (e) {\n    window.toastFetchError(\"Error opening file\", e);\n  }\n};\nwindow.openFileLink = openFileLink;\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/history.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'ace' is not defined.","line":38,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":38,"endColumn":27}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { getContext } from \"../index.js\";\n\nexport async function openHistoryModal() {\n    try {\n        const hist = await window.sendJsonData(\"/history_get\", { context: getContext() });\n        // const data = JSON.stringify(hist.history, null, 4);\n        const data = hist.history\n        const size = hist.tokens\n        await showEditorModal(data, \"markdown\", `History ~${size} tokens`, \"Conversation history visible to the LLM. History is compressed to fit into the context window over time.\");\n    } catch (e) {\n        window.toastFetchError(\"Error fetching history\", e)\n        return\n    }\n}\n\nexport async function openCtxWindowModal() {\n    try {\n        const win = await window.sendJsonData(\"/ctx_window_get\", { context: getContext() });\n        const data = win.content\n        const size = win.tokens\n        await showEditorModal(data, \"markdown\", `Context window ~${size} tokens`, \"Data passed to the LLM during last interaction. Contains system message, conversation history and RAG.\");\n    } catch (e) {\n        window.toastFetchError(\"Error fetching context\", e)\n        return\n    }\n}\n\nasync function showEditorModal(data, type = \"json\", title, description = \"\") {\n    // Generate the HTML with JSON Viewer container\n    const html = `<div id=\"json-viewer-container\"></div>`;\n\n    // Open the modal with the generated HTML\n    await window.genericModalProxy.openModal(title, description, html, [\"history-viewer\"]);\n\n    // Initialize the JSON Viewer after the modal is rendered\n    const container = document.getElementById(\"json-viewer-container\");\n    if (container) {\n        const editor = ace.edit(\"json-viewer-container\");\n\n        const dark = localStorage.getItem('darkMode')\n        if (dark != \"false\") {\n            editor.setTheme(\"ace/theme/github_dark\");\n        } else {\n            editor.setTheme(\"ace/theme/tomorrow\");\n        }\n\n        editor.session.setMode(\"ace/mode/\" + type);\n        editor.setValue(data);\n        editor.clearSelection();\n        // editor.session.$toggleFoldWidget(5, {})\n    }\n}\n\nwindow.openHistoryModal = openHistoryModal;\nwindow.openCtxWindowModal = openCtxWindowModal;\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/image_modal.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'Image' is not defined.","line":44,"column":31,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":36},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":58,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":58,"endColumn":24,"suggestions":[{"fix":{"range":[1973,2020],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Singleton interval ID for image refresh\nlet activeIntervalId = null;\n\nexport async function openImageModal(src, refreshInterval = 0) {\n  try {\n    let imgSrc = src;\n    \n    // Clear any existing refresh interval\n    if (activeIntervalId !== null) {\n      clearInterval(activeIntervalId);\n      activeIntervalId = null;\n    }\n    \n    if (refreshInterval > 0) {\n      // Add or update timestamp to bypass cache\n      const addTimestamp = (url) => {\n        const urlObj = new URL(url, window.location.origin);\n        urlObj.searchParams.set('t', Date.now());\n        return urlObj.toString();\n      };\n\n      // Check if image viewer is still active\n      const isImageViewerActive = () => {\n        const container = document.querySelector('#image-viewer-container');\n        if (!container) return false;\n        \n        // Check if element or any parent is hidden\n        let element = container;\n        while (element) {\n          const style = window.getComputedStyle(element);\n          if (style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0') {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return true;\n      };\n\n      // Preload next image before displaying\n      const preloadAndUpdate = async (currentImg) => {\n        const nextSrc = addTimestamp(src);\n        // Create a promise that resolves when the image is loaded\n        const preloadPromise = new Promise((resolve, reject) => {\n          const tempImg = new Image();\n          tempImg.onload = () => resolve(nextSrc);\n          tempImg.onerror = reject;\n          tempImg.src = nextSrc;\n        });\n        \n        try {\n          // Wait for preload to complete\n          const loadedSrc = await preloadPromise;\n          // Check if this interval is still the active one\n          if (currentImg && isImageViewerActive()) {\n            currentImg.src = loadedSrc;\n          }\n        } catch (err) {\n          console.error('Failed to preload image:', err);\n        }\n      };\n      \n      imgSrc = addTimestamp(src);\n      \n      // Set up periodic refresh with preloading\n      activeIntervalId = setInterval(() => {\n        if (!isImageViewerActive()) {\n          clearInterval(activeIntervalId);\n          activeIntervalId = null;\n          return;\n        }\n        const img = document.querySelector('.image-viewer-img');\n        if (img) {\n          preloadAndUpdate(img);\n        }\n      }, refreshInterval);\n    }\n\n    const html = `<div id=\"image-viewer-container\"><img class=\"image-viewer-img\" src=\"${imgSrc}\" /></div>`;\n    const fileName = src.split(\"/\").pop();\n    \n    // Open the modal with the generated HTML\n    await window.genericModalProxy.openModal(fileName, \"\", html);\n  } catch (e) {\n    window.toastFetchError(\"Error fetching history\", e);\n    return;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/initFw.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'_modals' is defined but never used.","line":1,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":20,"suggestions":[{"messageId":"removeVar","data":{"varName":"_modals"},"fix":{"range":[7,25],"text":""},"desc":"Remove unused variable '_modals'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'_components' is defined but never used.","line":2,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":24,"suggestions":[{"messageId":"removeVar","data":{"varName":"_components"},"fix":{"range":[47,69],"text":""},"desc":"Remove unused variable '_components'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":18,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":18,"endColumn":18,"suggestions":[{"fix":{"range":[464,511],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as _modals from \"./modals.js\";\nimport * as _components from \"./components.js\";\n\n// Import Alpine.js directly\nimport \"./alpine.min.js\";\n\n// Wait for Alpine to be available\nif (typeof Alpine !== 'undefined') {\n    // add x-destroy directive\n    Alpine.directive(\n      \"destroy\",\n      (el, { expression }, { evaluateLater, cleanup }) => {\n        const onDestroy = evaluateLater(expression);\n        cleanup(() => onDestroy());\n      }\n    );\n} else {\n    console.error('Alpine.js not loaded properly');\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/messages.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":32,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":32,"endColumn":20,"suggestions":[{"fix":{"range":[1069,1112],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-undef","severity":2,"message":"'renderMathInElement' is not defined.","line":119,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":119,"endColumn":26},{"ruleId":"no-unused-vars","severity":1,"message":"'kvps' is assigned a value but never used.","line":192,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":192,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"kvps"},"fix":{"range":[4368,4383],"text":""},"desc":"Remove unused variable 'kvps'."}]},{"ruleId":"no-undef","severity":2,"message":"'messageContent' is not defined.","line":219,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":219,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'latex' is assigned a value but never used.","line":237,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":237,"endColumn":8,"suggestions":[{"messageId":"removeVar","data":{"varName":"latex"},"fix":{"range":[4975,4992],"text":""},"desc":"Remove unused variable 'latex'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'kvps' is assigned a value but never used.","line":354,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":354,"endColumn":7,"suggestions":[{"messageId":"removeVar","data":{"varName":"kvps"},"fix":{"range":[8408,8423],"text":""},"desc":"Remove unused variable 'kvps'."}]},{"ruleId":"no-undef","severity":2,"message":"'renderMathInElement' is not defined.","line":558,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":558,"endColumn":32},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":613,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":613,"endColumn":18,"suggestions":[{"fix":{"range":[13818,13861],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'args' is defined but never used.","line":638,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":638,"endColumn":40,"suggestions":[{"messageId":"removeVar","data":{"varName":"args"},"fix":{"range":[14371,14380],"text":""},"desc":"Remove unused variable 'args'."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// copy button\nimport { openImageModal } from \"./image_modal.js\";\n\nfunction createCopyButton() {\n  const button = document.createElement(\"button\");\n  button.className = \"copy-button\";\n  button.textContent = \"Copy\";\n\n  button.addEventListener(\"click\", async function (e) {\n    e.stopPropagation();\n    const container = this.closest(\".msg-content, .kvps-row, .message-text\");\n    let textToCopy;\n\n    if (container.classList.contains(\"kvps-row\")) {\n      textToCopy = container.querySelector(\".kvps-val\").textContent;\n    } else if (container.classList.contains(\"message-text\")) {\n      textToCopy = container.querySelector(\"span\").textContent;\n    } else {\n      textToCopy = container.querySelector(\"span\").textContent;\n    }\n\n    try {\n      await navigator.clipboard.writeText(textToCopy);\n      const originalText = button.textContent;\n      button.classList.add(\"copied\");\n      button.textContent = \"Copied!\";\n      setTimeout(() => {\n        button.classList.remove(\"copied\");\n        button.textContent = originalText;\n      }, 2000);\n    } catch (err) {\n      console.error(\"Failed to copy text:\", err);\n    }\n  });\n\n  return button;\n}\n\nfunction addCopyButtonToElement(element) {\n  if (!element.querySelector(\".copy-button\")) {\n    element.appendChild(createCopyButton());\n  }\n}\n\nexport function getHandler(type) {\n  switch (type) {\n    case \"user\":\n      return drawMessageUser;\n    case \"agent\":\n      return drawMessageAgent;\n    case \"response\":\n      return drawMessageResponse;\n    case \"tool\":\n      return drawMessageTool;\n    case \"code_exe\":\n      return drawMessageCodeExe;\n    case \"browser\":\n      return drawMessageBrowser;\n    case \"warning\":\n      return drawMessageWarning;\n    case \"rate_limit\":\n      return drawMessageWarning;\n    case \"error\":\n      return drawMessageError;\n    case \"info\":\n      return drawMessageInfo;\n    case \"util\":\n      return drawMessageUtil;\n    case \"hint\":\n      return drawMessageInfo;\n    default:\n      return drawMessageDefault;\n  }\n}\n\n// draw a message with a specific type\nexport function _drawMessage(\n  messageContainer,\n  heading,\n  content,\n  temp,\n  followUp,\n  kvps = null,\n  messageClasses = [],\n  contentClasses = [],\n  latex = false\n) {\n  const messageDiv = document.createElement(\"div\");\n  messageDiv.classList.add(\"message\", ...messageClasses);\n\n  if (heading) {\n    const headingElement = document.createElement(\"h4\");\n    headingElement.textContent = heading;\n    messageDiv.appendChild(headingElement);\n  }\n\n  drawKvps(messageDiv, kvps, latex);\n\n  if (content && content.trim().length > 0) {\n    const preElement = document.createElement(\"pre\");\n    preElement.classList.add(\"msg-content\", ...contentClasses);\n    preElement.style.whiteSpace = \"pre-wrap\";\n    preElement.style.wordBreak = \"break-word\";\n\n    const spanElement = document.createElement(\"span\");\n    spanElement.innerHTML = convertHTML(content);\n\n    // Add click handler for small screens\n    spanElement.addEventListener(\"click\", () => {\n      copyText(spanElement.textContent, spanElement);\n    });\n\n    preElement.appendChild(spanElement);\n    addCopyButtonToElement(preElement);\n    messageDiv.appendChild(preElement);\n\n    // Render LaTeX math within the span\n    if (window.renderMathInElement && latex) {\n      renderMathInElement(spanElement, {\n        delimiters: [{ left: \"$\", right: \"$\", display: true }],\n        throwOnError: false,\n      });\n    }\n  }\n\n  messageContainer.appendChild(messageDiv);\n\n  if (followUp) {\n    messageContainer.classList.add(\"message-followup\");\n  }\n\n  return messageDiv;\n}\n\nexport function drawMessageDefault(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    false,\n    kvps,\n    [\"message-ai\", \"message-default\"],\n    [\"msg-json\"],\n    false\n  );\n}\n\nexport function drawMessageAgent(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  let kvpsFlat = null;\n  if (kvps) {\n    kvpsFlat = { ...kvps, ...(kvps[\"tool_args\"] || {}) };\n    delete kvpsFlat[\"tool_args\"];\n  }\n\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    false,\n    kvpsFlat,\n    [\"message-ai\", \"message-agent\"],\n    [\"msg-json\"],\n    false\n  );\n}\n\nexport function drawMessageResponse(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    true,\n    null,\n    [\"message-ai\", \"message-agent-response\"],\n    [],\n    true\n  );\n}\n\nexport function drawMessageDelegation(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    messageContent,\n    temp,\n    true,\n    kvps,\n    [\"message-ai\", \"message-agent\", \"message-agent-delegation\"],\n    [],\n    true\n  );\n}\n\nexport function drawMessageUser(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null,\n  latex = false\n) {\n  const messageDiv = document.createElement(\"div\");\n  messageDiv.classList.add(\"message\", \"message-user\");\n\n  const headingElement = document.createElement(\"h4\");\n  headingElement.textContent = \"User message\";\n  messageDiv.appendChild(headingElement);\n\n  if (content && content.trim().length > 0) {\n    const textDiv = document.createElement(\"div\");\n    textDiv.classList.add(\"message-text\");\n\n    // Create a span for the content\n    const spanElement = document.createElement(\"span\");\n    spanElement.innerHTML = convertHTML(content);\n    textDiv.appendChild(spanElement);\n\n    // Add click handler\n    textDiv.addEventListener(\"click\", () => {\n      copyText(content, textDiv);\n    });\n\n    addCopyButtonToElement(textDiv);\n    messageDiv.appendChild(textDiv);\n  }\n\n  // Handle attachments\n  if (kvps && kvps.attachments && kvps.attachments.length > 0) {\n    const attachmentsContainer = document.createElement(\"div\");\n    attachmentsContainer.classList.add(\"attachments-container\");\n\n    kvps.attachments.forEach((attachment) => {\n      const attachmentDiv = document.createElement(\"div\");\n      attachmentDiv.classList.add(\"attachment-item\");\n\n      if (typeof attachment === \"string\") {\n        // attachment is filename\n        const filename = attachment;\n        const extension = filename.split(\".\").pop().toUpperCase();\n\n        attachmentDiv.classList.add(\"file-type\");\n        attachmentDiv.innerHTML = `\n                    <div class=\"file-preview\">\n                        <span class=\"filename\">${filename}</span>\n                        <span class=\"extension\">${extension}</span>\n                    </div>\n                `;\n      } else if (attachment.type === \"image\") {\n        // Existing logic for images\n        const imgWrapper = document.createElement(\"div\");\n        imgWrapper.classList.add(\"image-wrapper\");\n\n        const img = document.createElement(\"img\");\n        img.src = attachment.url;\n        img.alt = attachment.name;\n        img.classList.add(\"attachment-preview\");\n\n        const fileInfo = document.createElement(\"div\");\n        fileInfo.classList.add(\"file-info\");\n        fileInfo.innerHTML = `\n                    <span class=\"filename\">${attachment.name}</span>\n                    <span class=\"extension\">${attachment.extension.toUpperCase()}</span>\n                `;\n\n        imgWrapper.appendChild(img);\n        attachmentDiv.appendChild(imgWrapper);\n        attachmentDiv.appendChild(fileInfo);\n      } else {\n        // Existing logic for non-image files\n        attachmentDiv.classList.add(\"file-type\");\n        attachmentDiv.innerHTML = `\n                    <div class=\"file-preview\">\n                        <span class=\"filename\">${attachment.name}</span>\n                        <span class=\"extension\">${attachment.extension.toUpperCase()}</span>\n                    </div>\n                `;\n      }\n\n      attachmentsContainer.appendChild(attachmentDiv);\n    });\n\n    messageDiv.appendChild(attachmentsContainer);\n  }\n\n  messageContainer.appendChild(messageDiv);\n}\n\nexport function drawMessageTool(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    true,\n    kvps,\n    [\"message-ai\", \"message-tool\"],\n    [\"msg-output\"],\n    false\n  );\n}\n\nexport function drawMessageCodeExe(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    true,\n    null,\n    [\"message-ai\", \"message-code-exe\"],\n    [],\n    false\n  );\n}\n\nexport function drawMessageBrowser(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    true,\n    kvps,\n    [\"message-ai\", \"message-browser\"],\n    [\"msg-json\"],\n    false\n  );\n}\n\nexport function drawMessageAgentPlain(\n  classes,\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    false,\n    kvps,\n    [...classes],\n    [],\n    false\n  );\n  messageContainer.classList.add(\"center-container\");\n}\n\nexport function drawMessageInfo(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  return drawMessageAgentPlain(\n    [\"message-info\"],\n    messageContainer,\n    id,\n    type,\n    heading,\n    content,\n    temp,\n    kvps\n  );\n}\n\nexport function drawMessageUtil(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  _drawMessage(\n    messageContainer,\n    heading,\n    content,\n    temp,\n    false,\n    kvps,\n    [\"message-util\"],\n    [\"msg-json\"],\n    false\n  );\n  messageContainer.classList.add(\"center-container\");\n}\n\nexport function drawMessageWarning(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  return drawMessageAgentPlain(\n    [\"message-warning\"],\n    messageContainer,\n    id,\n    type,\n    heading,\n    content,\n    temp,\n    kvps\n  );\n}\n\nexport function drawMessageError(\n  messageContainer,\n  id,\n  type,\n  heading,\n  content,\n  temp,\n  kvps = null\n) {\n  return drawMessageAgentPlain(\n    [\"message-error\"],\n    messageContainer,\n    id,\n    type,\n    heading,\n    content,\n    temp,\n    kvps\n  );\n}\n\nfunction drawKvps(container, kvps, latex) {\n  if (kvps) {\n    const table = document.createElement(\"table\");\n    table.classList.add(\"msg-kvps\");\n    for (const [key, value] of Object.entries(kvps)) {\n      const row = table.insertRow();\n      row.classList.add(\"kvps-row\");\n      if (key === \"thoughts\" || key === \"reflection\")\n        row.classList.add(\"msg-thoughts\");\n\n      const th = row.insertCell();\n      th.textContent = convertToTitleCase(key);\n      th.classList.add(\"kvps-key\");\n\n      const td = row.insertCell();\n\n      if (Array.isArray(value)) {\n        for (const item of value) {\n          addValue(item);\n        }\n      } else {\n        addValue(value);\n      }\n\n      function addValue(value) {\n        if (typeof value === \"object\") value = JSON.stringify(value, null, 2);\n\n        if (typeof value === \"string\" && value.startsWith(\"img://\")) {\n          const imgElement = document.createElement(\"img\");\n          imgElement.classList.add(\"kvps-img\");\n          imgElement.src = value.replace(\"img://\", \"/image_get?path=\");\n          imgElement.alt = \"Image Attachment\";\n          td.appendChild(imgElement);\n\n          // Add click handler and cursor change\n          imgElement.style.cursor = \"pointer\";\n          imgElement.addEventListener(\"click\", () => {\n            openImageModal(imgElement.src, 1000);\n          });\n\n          td.appendChild(imgElement);\n        } else {\n          const pre = document.createElement(\"pre\");\n          pre.classList.add(\"kvps-val\");\n          //   if (row.classList.contains(\"msg-thoughts\")) {\n          const span = document.createElement(\"span\");\n          span.innerHTML = convertHTML(value);\n          pre.appendChild(span);\n          td.appendChild(pre);\n          addCopyButtonToElement(row);\n\n          // Add click handler\n          span.addEventListener(\"click\", () => {\n            copyText(span.textContent, span);\n          });\n\n          if (window.renderMathInElement && latex) {\n            renderMathInElement(span, {\n              delimiters: [{ left: \"$\", right: \"$\", display: true }],\n              throwOnError: false,\n            });\n          }\n        }\n      }\n      //   } else {\n      //     pre.textContent = value;\n\n      //     // Add click handler\n      //     pre.addEventListener(\"click\", () => {\n      //       copyText(value, pre);\n      //     });\n\n      //     td.appendChild(pre);\n      //     addCopyButtonToElement(row);\n      //   }\n    }\n    container.appendChild(table);\n  }\n}\n\nfunction convertToTitleCase(str) {\n  return str\n    .replace(/_/g, \" \") // Replace underscores with spaces\n    .toLowerCase() // Convert the entire string to lowercase\n    .replace(/\\b\\w/g, function (match) {\n      return match.toUpperCase(); // Capitalize the first letter of each word\n    });\n}\n\nfunction convertImageTags(content) {\n  // Regular expression to match <image> tags and extract base64 content\n  const imageTagRegex = /<image>(.*?)<\\/image>/g;\n\n  // Replace <image> tags with <img> tags with base64 source\n  const updatedContent = content.replace(\n    imageTagRegex,\n    (match, base64Content) => {\n      return `<img src=\"data:image/jpeg;base64,${base64Content}\" alt=\"Image Attachment\" style=\"max-width: 250px !important;\"/>`;\n    }\n  );\n\n  return updatedContent;\n}\n\nasync function copyText(text, element) {\n  try {\n    await navigator.clipboard.writeText(text);\n    element.classList.add(\"copied\");\n    setTimeout(() => {\n      element.classList.remove(\"copied\");\n    }, 2000);\n  } catch (err) {\n    console.error(\"Failed to copy text:\", err);\n  }\n}\n\nfunction convertHTML(str) {\n  if (typeof str !== \"string\") str = JSON.stringify(str, null, 2);\n\n  let result = escapeHTML(str);\n  result = convertPathsToLinks(result);\n  result = convertImageTags(result);\n  return result;\n}\n\nfunction escapeHTML(str) {\n  const escapeChars = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    \"'\": \"&#39;\",\n    '\"': \"&quot;\",\n  };\n  return str.replace(/[&<>'\"]/g, (char) => escapeChars[char]);\n}\n\nfunction convertPathsToLinks(str) {\n  function generateLinks(match, ...args) {\n    const parts = match.split(\"/\");\n\n    if (!parts[0]) parts.shift();\n    let conc = \"\";\n    let html = \"\";\n    for (const part of parts) {\n      conc += \"/\" + part;\n      html += `/<a href=\"#\" class=\"path-link\" onclick=\"openFileLink('${conc}');\">${part}</a>`;\n    }\n    return html;\n  }\n\n  const prefix = `(?:^|[ \\`'\"\\\\n]|&#39;|&quot;)`; // Use a non-capturing group for OR logic\n  const folder = `[a-zA-Z0-9_\\\\/.\\\\-]`; // Characters allowed in folder chain\n  const file = `[a-zA-Z0-9_\\\\-\\\\/]`; // Characters allowed in file names\n  const suffix = `(?<!\\\\.)`;\n\n  const regex = new RegExp(`(?<=${prefix})\\\\/${folder}*${file}${suffix}`, \"g\");\n\n  return str.replace(regex, generateLinks);\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/modal.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'value' is defined but never used.","line":123,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":123,"endColumn":47,"suggestions":[{"messageId":"removeVar","data":{"varName":"value"},"fix":{"range":[3506,3511],"text":""},"desc":"Remove unused variable 'value'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const fullScreenInputModalProxy = {\n    isOpen: false,\n    inputText: '',\n    wordWrap: true,\n    undoStack: [],\n    redoStack: [],\n    maxStackSize: 100,\n    lastSavedState: '',\n\n    openModal() {\n        const chatInput = document.getElementById('chat-input');\n        this.inputText = chatInput.value;\n        this.lastSavedState = this.inputText;\n        this.isOpen = true;\n        this.undoStack = [];\n        this.redoStack = [];\n        \n        // Focus the full screen input after a short delay to ensure the modal is rendered\n        setTimeout(() => {\n            const fullScreenInput = document.getElementById('full-screen-input');\n            fullScreenInput.focus();\n        }, 100);\n    },\n\n    handleClose() {\n        const chatInput = document.getElementById('chat-input');\n        chatInput.value = this.inputText;\n        chatInput.dispatchEvent(new Event('input')); // Trigger input event for textarea auto-resize\n        this.isOpen = false;\n    },\n\n    updateHistory() {\n        // Don't save if the text hasn't changed\n        if (this.lastSavedState === this.inputText) return;\n        \n        this.undoStack.push(this.lastSavedState);\n        if (this.undoStack.length > this.maxStackSize) {\n            this.undoStack.shift();\n        }\n        this.redoStack = [];\n        this.lastSavedState = this.inputText;\n    },\n\n    undo() {\n        if (!this.canUndo) return;\n        \n        this.redoStack.push(this.inputText);\n        this.inputText = this.undoStack.pop();\n        this.lastSavedState = this.inputText;\n    },\n\n    redo() {\n        if (!this.canRedo) return;\n        \n        this.undoStack.push(this.inputText);\n        this.inputText = this.redoStack.pop();\n        this.lastSavedState = this.inputText;\n    },\n\n    clearText() {\n        if (this.inputText) {\n            this.updateHistory(); // Save current state before clearing\n            this.inputText = '';\n            this.lastSavedState = '';\n        }\n    },\n\n    toggleWrap() {\n        this.wordWrap = !this.wordWrap;\n    },\n\n    get canUndo() {\n        return this.undoStack.length > 0;\n    },\n\n    get canRedo() {\n        return this.redoStack.length > 0;\n    }\n};\n\n// Register the full screen input modal with Alpine as a store\ndocument.addEventListener('alpine:init', () => {\n    Alpine.store('fullScreenInputModal', fullScreenInputModalProxy);\n});\n\n// Also register as a component for x-data usage\ndocument.addEventListener('alpine:init', () => {\n    Alpine.data('fullScreenInputModalProxy', () => fullScreenInputModalProxy);\n});\n\nconst genericModalProxy = {\n    isOpen: false,\n    isLoading: false,\n    title: '',\n    description: '',\n    html: '',\n\n    async openModal(title, description, html, contentClasses = []) {\n        const modalEl = document.getElementById('genericModal');\n        const modalContent = document.getElementById('viewer');\n        const modalAD = Alpine.$data(modalEl);\n\n        modalAD.isOpen = true;\n        modalAD.title = title\n        modalAD.description = description\n        modalAD.html = html\n\n        modalContent.className = 'modal-content';\n        modalContent.classList.add(...contentClasses);\n    },\n\n    handleClose() {\n        this.isOpen = false;\n    }\n}\n\n// Wait for Alpine to be ready\ndocument.addEventListener('alpine:init', () => {\n    Alpine.data('genericModalProxy', () => ({\n        init() {\n            Object.assign(this, genericModalProxy);\n            // Ensure immediate file fetch when modal opens\n            this.$watch('isOpen', async (value) => {\n               // what now?\n            });\n        }\n    }));\n});\n\n// Keep the global assignment for backward compatibility\nwindow.genericModalProxy = genericModalProxy;","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/modals.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'MutationObserver' is not defined.","line":111,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":111,"endColumn":27},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":133,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":133,"endColumn":24,"suggestions":[{"fix":{"range":[4092,4145],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":146,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":146,"endColumn":20,"suggestions":[{"fix":{"range":[4545,4598],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Import the component loader and page utilities\nimport { importComponent } from \"/js/components.js\";\n\n// Modal functionality\nconst modalStack = [];\n\n// Create a single backdrop for all modals\nconst backdrop = document.createElement(\"div\");\nbackdrop.className = \"modal-backdrop\";\nbackdrop.style.display = \"none\";\nbackdrop.style.backdropFilter = \"blur(5px)\";\n\n// Make sure we only close when clicking directly on the backdrop, not its children\nbackdrop.addEventListener(\"click\", (event) => {\n  if (event.target === backdrop) {\n    closeModal();\n  }\n});\ndocument.body.appendChild(backdrop);\n\n// Function to update z-index for all modals and backdrop\nfunction updateModalZIndexes() {\n  // Base z-index for modals\n  const baseZIndex = 3000;\n\n  // Update z-index for all modals\n  modalStack.forEach((modal, index) => {\n    // For first modal, z-index is baseZIndex\n    // For second modal, z-index is baseZIndex + 20\n    // This leaves room for the backdrop between them\n    modal.element.style.zIndex = baseZIndex + index * 20;\n  });\n\n  // Always show backdrop\n  backdrop.style.display = \"block\";\n\n  if (modalStack.length > 1) {\n    // For multiple modals, position backdrop between the top two\n    const topModalIndex = modalStack.length - 1;\n    const previousModalZIndex = baseZIndex + (topModalIndex - 1) * 20;\n    backdrop.style.zIndex = previousModalZIndex + 10;\n  } else if (modalStack.length === 1) {\n    // For single modal, position backdrop below it\n    backdrop.style.zIndex = baseZIndex - 1;\n  } else {\n    // No modals, hide backdrop\n    backdrop.style.display = \"none\";\n  }\n}\n\n// Function to create a new modal element\nfunction createModalElement(name) {\n  // Create modal element\n  const newModal = document.createElement(\"div\");\n  newModal.className = \"modal\";\n  newModal.modalName = name; // save name to the object\n\n  // Add click handler to the modal element to close when clicking outside content\n  newModal.addEventListener(\"click\", (event) => {\n    // Only close if clicking directly on the modal container, not its content\n    if (event.target === newModal) {\n      closeModal();\n    }\n  });\n\n\n  // Create modal structure\n  newModal.innerHTML = `\n    <div class=\"modal-inner\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\"></h2>\n        <button class=\"modal-close\">&times;</button>\n      </div>\n      <div class=\"modal-scroll\">\n        <div class=\"modal-bd\"></div>\n      </div>\n    </div>\n  `;\n\n  // Setup close button handler for this specific modal\n  const close_button = newModal.querySelector(\".modal-close\");\n  close_button.addEventListener(\"click\", () => closeModal());\n\n\n  // Add modal to DOM\n  document.body.appendChild(newModal);\n\n  // Show the modal\n  newModal.classList.add(\"show\");\n\n  // Update modal z-indexes\n  updateModalZIndexes();\n\n  return {\n    element: newModal,\n    title: newModal.querySelector(\".modal-title\"),\n    body: newModal.querySelector(\".modal-bd\"),\n    close: close_button,\n    styles: [],\n    scripts: [],\n  };\n}\n\n// Function to open modal with content from URL\nexport function openModal(modalPath) {\n  return new Promise((resolve) => {\n    try {\n      // Create new modal instance\n      const modal = createModalElement();\n\n      new MutationObserver(\n        (_, o) =>\n          !document.contains(modal.element) && (o.disconnect(), resolve())\n      ).observe(document.body, { childList: true, subtree: true });\n\n      // Set a loading state\n      modal.body.innerHTML = '<div class=\"loading\">Loading...</div>';\n\n      // Already added to stack above\n\n      // Use importComponent to load the modal content\n      // This handles all HTML, styles, scripts and nested components\n      // Updated path to use the new folder structure with modal.html\n      const componentPath = modalPath; // `modals/${modalPath}/modal.html`;\n\n      // Use importComponent which now returns the parsed document\n      importComponent(componentPath, modal.body)\n        .then((doc) => {\n          // Set the title from the document\n          modal.title.innerHTML = doc.title || modalPath;\n        })\n        .catch((error) => {\n          console.error(\"Error loading modal content:\", error);\n          modal.body.innerHTML = `<div class=\"error\">Failed to load modal content: ${error.message}</div>`;\n        });\n\n      // Add modal to stack and show it\n      // Add modal to stack\n      modalStack.push(modal);\n      modal.element.classList.add(\"show\");\n      document.body.style.overflow = \"hidden\";\n\n      // Update modal z-indexes\n      updateModalZIndexes();\n    } catch (error) {\n      console.error(\"Error loading modal content:\", error);\n      resolve();\n    }\n  });\n}\n\n// Function to close modal\nexport function closeModal(modalName = null) {\n  if (modalStack.length === 0) return;\n\n  let modalIndex = modalStack.length - 1; // Default to last modal\n  let modal;\n\n  if (modalName) {\n    // Find the modal with the specified name in the stack\n    modalIndex = modalStack.findIndex((modal) => modal.modalName === modalName);\n    if (modalIndex === -1) return; // Modal not found in stack\n\n    // Get the modal from stack at the found index\n    modal = modalStack[modalIndex];\n    // Remove the modal from stack\n    modalStack.splice(modalIndex, 1);\n  } else {\n    // Just remove the last modal\n    modal = modalStack.pop();\n  }\n\n  // Remove modal-specific styles and scripts immediately\n  modal.styles.forEach((styleId) => {\n    document.querySelector(`[data-modal-style=\"${styleId}\"]`)?.remove();\n  });\n  modal.scripts.forEach((scriptId) => {\n    document.querySelector(`[data-modal-script=\"${scriptId}\"]`)?.remove();\n  });\n\n  // First remove the show class to trigger the transition\n  modal.element.classList.remove(\"show\");\n\n  // Remove the modal element from DOM after animation\n  modal.element.addEventListener(\n    \"transitionend\",\n    () => {\n      // Make sure the modal is completely removed from the DOM\n      if (modal.element.parentNode) {\n        modal.element.parentNode.removeChild(modal.element);\n      }\n    },\n    { once: true }\n  );\n\n  // Fallback in case the transition event doesn't fire\n  setTimeout(() => {\n    if (modal.element.parentNode) {\n      modal.element.parentNode.removeChild(modal.element);\n    }\n  }, 500); // 500ms should be enough for the transition to complete\n\n  // Handle backdrop visibility and body overflow\n  if (modalStack.length === 0) {\n    // Hide backdrop when no modals are left\n    backdrop.style.display = \"none\";\n    document.body.style.overflow = \"\";\n  } else {\n    // Update modal z-indexes\n    updateModalZIndexes();\n  }\n}\n\n// Function to scroll to element by ID within the last modal\nexport function scrollModal(id) {\n  if (!id) return;\n\n  // Get the last modal in the stack\n  const lastModal = modalStack[modalStack.length - 1].element;\n  if (!lastModal) return;\n\n  // Find the modal container and target element\n  const modalContainer = lastModal.querySelector(\".modal-scroll\");\n  const targetElement = lastModal.querySelector(`#${id}`);\n\n  if (modalContainer && targetElement) {\n    modalContainer.scrollTo({\n      top: targetElement.offsetTop - 20, // 20px padding from top\n      behavior: \"smooth\",\n    });\n  }\n}\n\n// Make scrollModal globally available\nglobalThis.scrollModal = scrollModal;\n\n// Handle modal content loading from clicks\ndocument.addEventListener(\"click\", async (e) => {\n  const modalTrigger = e.target.closest(\"[data-modal-content]\");\n  if (modalTrigger) {\n    e.preventDefault();\n    if (\n      modalTrigger.hasAttribute(\"disabled\") ||\n      modalTrigger.classList.contains(\"disabled\")\n    ) {\n      return;\n    }\n    const modalPath = modalTrigger.getAttribute(\"href\");\n    await openModal(modalPath);\n  }\n});\n\n// Close modal on escape key (closes only the top modal)\ndocument.addEventListener(\"keydown\", (e) => {\n  if (e.key === \"Escape\" && modalStack.length > 0) {\n    closeModal();\n  }\n});\n\n// also export as global function\nglobalThis.openModal = openModal;\nglobalThis.closeModal = closeModal;\nglobalThis.scrollModal = scrollModal;\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/scheduler.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":66,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":66,"endColumn":20,"suggestions":[{"fix":{"range":[2667,2710],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'newTasks' is defined but never used.","line":145,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":145,"endColumn":43,"suggestions":[{"messageId":"removeVar","data":{"varName":"newTasks"},"fix":{"range":[5350,5358],"text":""},"desc":"Remove unused variable 'newTasks'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":198,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":198,"endColumn":28,"suggestions":[{"fix":{"range":[7112,7167],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":218,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":218,"endColumn":28,"suggestions":[{"fix":{"range":[7882,7940],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":222,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":222,"endColumn":24,"suggestions":[{"fix":{"range":[7992,8029],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":236,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":236,"endColumn":24,"suggestions":[{"fix":{"range":[8482,8519],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":277,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":277,"endColumn":34,"suggestions":[{"fix":{"range":[9823,9886],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":280,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":280,"endColumn":34,"suggestions":[{"fix":{"range":[10001,10075],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":286,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":286,"endColumn":42,"suggestions":[{"fix":{"range":[10363,10416],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":290,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":290,"endColumn":42,"suggestions":[{"fix":{"range":[10555,10597],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":294,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":294,"endColumn":42,"suggestions":[{"fix":{"range":[10736,10778],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":298,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":298,"endColumn":42,"suggestions":[{"fix":{"range":[10917,10959],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":305,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":305,"endColumn":37,"suggestions":[{"fix":{"range":[11181,11265],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":314,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":314,"endColumn":30,"suggestions":[{"fix":{"range":[11500,11546],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":396,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":396,"endColumn":37,"suggestions":[{"fix":{"range":[14514,14588],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":399,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":399,"endColumn":34,"suggestions":[{"fix":{"range":[14665,14731],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":485,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":485,"endColumn":24,"suggestions":[{"fix":{"range":[17954,17998],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":486,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":486,"endColumn":24,"suggestions":[{"fix":{"range":[18011,18067],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":556,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":556,"endColumn":32,"suggestions":[{"fix":{"range":[21248,21323],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":559,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":559,"endColumn":28,"suggestions":[{"fix":{"range":[21359,21428],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":602,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":602,"endColumn":32,"suggestions":[{"fix":{"range":[22964,23024],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"prefer-const","severity":1,"message":"'taskData' is never reassigned. Use 'const' instead.","line":666,"column":17,"nodeType":"Identifier","messageId":"useConst","endLine":666,"endColumn":25},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":710,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":710,"endColumn":36,"suggestions":[{"fix":{"range":[27889,27964],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":713,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":713,"endColumn":32,"suggestions":[{"fix":{"range":[28008,28074],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":747,"column":33,"nodeType":"MemberExpression","messageId":"unexpected","endLine":747,"endColumn":45,"suggestions":[{"fix":{"range":[29604,29667],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":750,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":750,"endColumn":41,"suggestions":[{"fix":{"range":[29768,29824],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":768,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":768,"endColumn":32,"suggestions":[{"fix":{"range":[30492,30571],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":784,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":784,"endColumn":28,"suggestions":[{"fix":{"range":[31146,31231],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":808,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":808,"endColumn":32,"suggestions":[{"fix":{"range":[32189,32250],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":869,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":869,"endColumn":30,"suggestions":[{"fix":{"range":[34609,34652],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":898,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":898,"endColumn":30,"suggestions":[{"fix":{"range":[35607,35651],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":944,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":944,"endColumn":30,"suggestions":[{"fix":{"range":[37281,37333],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":991,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":991,"endColumn":30,"suggestions":[{"fix":{"range":[39078,39123],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-dupe-keys","severity":2,"message":"Duplicate key 'filteredTasks'.","line":1029,"column":13,"nodeType":"ObjectExpression","messageId":"unexpected","endLine":1029,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1032,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1032,"endColumn":29,"suggestions":[{"fix":{"range":[40740,40791],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-dupe-keys","severity":2,"message":"Duplicate key 'attachmentsText'.","line":1095,"column":13,"nodeType":"ObjectExpression","messageId":"unexpected","endLine":1095,"endColumn":28},{"ruleId":"no-dupe-keys","severity":2,"message":"Duplicate key 'attachmentsText'.","line":1106,"column":13,"nodeType":"ObjectExpression","messageId":"unexpected","endLine":1106,"endColumn":28},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1118,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1118,"endColumn":26,"suggestions":[{"fix":{"range":[44147,44201],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1119,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1119,"endColumn":24,"suggestions":[{"fix":{"range":[44214,44254],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1120,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1120,"endColumn":24,"suggestions":[{"fix":{"range":[44267,44314],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1121,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1121,"endColumn":24,"suggestions":[{"fix":{"range":[44327,44376],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1122,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1122,"endColumn":24,"suggestions":[{"fix":{"range":[44389,44434],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1123,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1123,"endColumn":24,"suggestions":[{"fix":{"range":[44447,44500],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1127,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1127,"endColumn":30,"suggestions":[{"fix":{"range":[44606,44670],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1128,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1128,"endColumn":33,"suggestions":[{"fix":{"range":[44687,44706],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1132,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1132,"endColumn":24,"suggestions":[{"fix":{"range":[44758,44819],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1135,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1135,"endColumn":26,"suggestions":[{"fix":{"range":[44871,44908],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1141,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1141,"endColumn":28,"suggestions":[{"fix":{"range":[45190,45256],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1143,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1143,"endColumn":29,"suggestions":[{"fix":{"range":[45285,45304],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1146,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1146,"endColumn":26,"suggestions":[{"fix":{"range":[45357,45395],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1152,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1152,"endColumn":28,"suggestions":[{"fix":{"range":[45689,45757],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1154,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1154,"endColumn":29,"suggestions":[{"fix":{"range":[45786,45805],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1157,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1157,"endColumn":24,"suggestions":[{"fix":{"range":[45862,45921],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1159,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1159,"endColumn":29,"suggestions":[{"fix":{"range":[45935,45954],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1164,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1164,"endColumn":26,"suggestions":[{"fix":{"range":[46044,46099],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1167,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1167,"endColumn":24,"suggestions":[{"fix":{"range":[46144,46176],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1168,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1168,"endColumn":24,"suggestions":[{"fix":{"range":[46189,46575],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1181,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1181,"endColumn":30,"suggestions":[{"fix":{"range":[46656,46713],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1182,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1182,"endColumn":33,"suggestions":[{"fix":{"range":[46730,46749],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1187,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1187,"endColumn":30,"suggestions":[{"fix":{"range":[46851,46934],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1188,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1188,"endColumn":33,"suggestions":[{"fix":{"range":[46951,46970],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1193,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1193,"endColumn":26,"suggestions":[{"fix":{"range":[47047,47074],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1194,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1194,"endColumn":24,"suggestions":[{"fix":{"range":[47087,47130],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1196,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1196,"endColumn":30,"suggestions":[{"fix":{"range":[47188,47383],"text":""},"messageId":"removeConsole","data":{"propertyName":"table"},"desc":"Remove the console.table()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1204,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1204,"endColumn":28,"suggestions":[{"fix":{"range":[47449,47526],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1206,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1206,"endColumn":28,"suggestions":[{"fix":{"range":[47564,47598],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1208,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1208,"endColumn":29,"suggestions":[{"fix":{"range":[47625,47644],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1211,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1211,"endColumn":26,"suggestions":[{"fix":{"range":[47688,47720],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1213,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1213,"endColumn":24,"suggestions":[{"fix":{"range":[47787,47833],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1215,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1215,"endColumn":30,"suggestions":[{"fix":{"range":[47894,48092],"text":""},"messageId":"removeConsole","data":{"propertyName":"table"},"desc":"Remove the console.table()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1222,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1222,"endColumn":28,"suggestions":[{"fix":{"range":[48130,48163],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1224,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1224,"endColumn":29,"suggestions":[{"fix":{"range":[48190,48209],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1227,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1227,"endColumn":26,"suggestions":[{"fix":{"range":[48265,48299],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1231,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1231,"endColumn":29,"suggestions":[{"fix":{"range":[48429,48494],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1235,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1235,"endColumn":28,"suggestions":[{"fix":{"range":[48628,48683],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1239,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1239,"endColumn":28,"suggestions":[{"fix":{"range":[48820,48877],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1246,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1246,"endColumn":32,"suggestions":[{"fix":{"range":[49173,49240],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1253,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1253,"endColumn":32,"suggestions":[{"fix":{"range":[49513,49583],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1262,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1262,"endColumn":29,"suggestions":[{"fix":{"range":[49923,49986],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1266,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1266,"endColumn":29,"suggestions":[{"fix":{"range":[50055,50119],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1269,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1269,"endColumn":29,"suggestions":[{"fix":{"range":[50147,50166],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1271,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1271,"endColumn":29,"suggestions":[{"fix":{"range":[50180,50199],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1289,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1289,"endColumn":32,"suggestions":[{"fix":{"range":[50950,51010],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1293,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1293,"endColumn":33,"suggestions":[{"fix":{"range":[51080,51144],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-undef","severity":2,"message":"'flatpickr' is not defined.","line":1341,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":1341,"endColumn":37},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1425,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1425,"endColumn":16,"suggestions":[{"fix":{"range":[56770,56835],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1428,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1428,"endColumn":16,"suggestions":[{"fix":{"range":[56909,56971],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1445,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1445,"endColumn":24,"suggestions":[{"fix":{"range":[57677,57751],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1464,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1464,"endColumn":32,"suggestions":[{"fix":{"range":[58665,58713],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1593,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1593,"endColumn":38,"suggestions":[{"fix":{"range":[64111,64159],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1603,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1603,"endColumn":34,"suggestions":[{"fix":{"range":[64449,64515],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1607,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1607,"endColumn":24,"suggestions":[{"fix":{"range":[64568,64606],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1617,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1617,"endColumn":16,"suggestions":[{"fix":{"range":[64787,64869],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1622,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1622,"endColumn":20,"suggestions":[{"fix":{"range":[65042,65123],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1629,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1629,"endColumn":16,"suggestions":[{"fix":{"range":[65361,65434],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1666,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1666,"endColumn":42,"suggestions":[{"fix":{"range":[67082,67151],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1672,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1672,"endColumn":42,"suggestions":[{"fix":{"range":[67378,67449],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1675,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1675,"endColumn":38,"suggestions":[{"fix":{"range":[67529,67589],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":1679,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":1679,"endColumn":30,"suggestions":[{"fix":{"range":[67681,67739],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":95,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Task Scheduler Component for Settings Modal\n * Manages scheduled and ad-hoc tasks through a dedicated settings tab\n */\n\nimport { formatDateTime, getUserTimezone } from './time-utils.js';\nimport { switchFromContext } from '../index.js';\n\n// Ensure the showToast function is available\n// if (typeof window.showToast !== 'function') {\n//     window.showToast = function(message, type = 'info') {\n//         console.log(`[Toast ${type}]: ${message}`);\n//         // Create toast element if not already present\n//         let toastContainer = document.getElementById('toast-container');\n//         if (!toastContainer) {\n//             toastContainer = document.createElement('div');\n//             toastContainer.id = 'toast-container';\n//             toastContainer.style.position = 'fixed';\n//             toastContainer.style.bottom = '20px';\n//             toastContainer.style.right = '20px';\n//             toastContainer.style.zIndex = '9999';\n//             document.body.appendChild(toastContainer);\n//         }\n\n//         // Create the toast\n//         const toast = document.createElement('div');\n//         toast.className = `toast toast-${type}`;\n//         toast.style.padding = '10px 15px';\n//         toast.style.margin = '5px 0';\n//         toast.style.backgroundColor = type === 'error' ? '#f44336' :\n//                                     type === 'success' ? '#4CAF50' :\n//                                     type === 'warning' ? '#ff9800' : '#2196F3';\n//         toast.style.color = 'white';\n//         toast.style.borderRadius = '4px';\n//         toast.style.boxShadow = '0 2px 5px rgba(0,0,0,0.2)';\n//         toast.style.width = 'auto';\n//         toast.style.maxWidth = '300px';\n//         toast.style.wordWrap = 'break-word';\n\n//         toast.innerHTML = message;\n\n//         // Add to container\n//         toastContainer.appendChild(toast);\n\n//         // Auto remove after 3 seconds\n//         setTimeout(() => {\n//             if (toast.parentNode) {\n//                 toast.style.opacity = '0';\n//                 toast.style.transition = 'opacity 0.5s ease';\n//                 setTimeout(() => {\n//                     if (toast.parentNode) {\n//                         toast.parentNode.removeChild(toast);\n//                     }\n//                 }, 500);\n//             }\n//         }, 3000);\n//     };\n// }\n\n// Add this near the top of the scheduler.js file, outside of any function\nconst showToast = function(message, type = 'info') {\n    // Use the global toast function if available, otherwise fallback to console\n    if (typeof window.toast === 'function') {\n        window.toast(message, type);\n    } else {\n        console.log(`Toast (${type}): ${message}`);\n    }\n};\n\n// Define the full component implementation\nconst fullComponentImplementation = function() {\n    return {\n        tasks: [],\n        isLoading: true,\n        selectedTask: null,\n        expandedTaskId: null,\n        sortField: 'name',\n        sortDirection: 'asc',\n        filterType: 'all',  // all, scheduled, adhoc, planned\n        filterState: 'all',  // all, idle, running, disabled, error\n        pollingInterval: null,\n        pollingActive: false, // Track if polling is currently active\n        editingTask: {\n            name: '',\n            type: 'scheduled',\n            state: 'idle',\n            schedule: {\n                minute: '*',\n                hour: '*',\n                day: '*',\n                month: '*',\n                weekday: '*',\n                timezone: getUserTimezone()\n            },\n            token: '',\n            plan: {\n                todo: [],\n                in_progress: null,\n                done: []\n            },\n            system_prompt: '',\n            prompt: '',\n            attachments: []\n        },\n        isCreating: false,\n        isEditing: false,\n        showLoadingState: false,\n        viewMode: 'list', // Controls whether to show list or detail view\n        selectedTaskForDetail: null, // Task object for detail view\n        attachmentsText: '',\n        filteredTasks: [],\n        hasNoTasks: true, // Add explicit reactive property\n\n        // Initialize the component\n        init() {\n            // Initialize component data\n            this.tasks = [];\n            this.isLoading = true;\n            this.hasNoTasks = true; // Add explicit reactive property\n            this.filterType = 'all';\n            this.filterState = 'all';\n            this.sortField = 'name';\n            this.sortDirection = 'asc';\n            this.pollingInterval = null;\n            this.pollingActive = false;\n\n            // Start polling for tasks\n            this.startPolling();\n\n            // Refresh initial data\n            this.fetchTasks();\n\n            // Set up event handler for tab selection to ensure view is refreshed when tab becomes visible\n            document.addEventListener('click', (event) => {\n                // Check if a tab was clicked\n                const clickedTab = event.target.closest('.settings-tab');\n                if (clickedTab && clickedTab.getAttribute('data-tab') === 'scheduler') {\n                    setTimeout(() => {\n                        this.fetchTasks();\n                    }, 100);\n                }\n            });\n\n            // Watch for changes to the tasks array to update UI\n            this.$watch('tasks', (newTasks) => {\n                this.updateTasksUI();\n            });\n\n            this.$watch('filterType', () => {\n                this.updateTasksUI();\n            });\n\n            this.$watch('filterState', () => {\n                this.updateTasksUI();\n            });\n\n            // Set up default configuration\n            this.viewMode = localStorage.getItem('scheduler_view_mode') || 'list';\n            this.selectedTask = null;\n            this.expandedTaskId = null;\n            this.editingTask = {\n                name: '',\n                type: 'scheduled',\n                state: 'idle',\n                schedule: {\n                    minute: '*',\n                    hour: '*',\n                    day: '*',\n                    month: '*',\n                    weekday: '*',\n                    timezone: getUserTimezone()\n                },\n                token: this.generateRandomToken ? this.generateRandomToken() : '',\n                plan: {\n                    todo: [],\n                    in_progress: null,\n                    done: []\n                },\n                system_prompt: '',\n                prompt: '',\n                attachments: []\n            };\n\n            // Initialize Flatpickr for date/time pickers after Alpine is fully initialized\n            this.$nextTick(() => {\n                // Wait until DOM is updated\n                setTimeout(() => {\n                    if (this.isCreating) {\n                        this.initFlatpickr('create');\n                    } else if (this.isEditing) {\n                        this.initFlatpickr('edit');\n                    }\n                }, 100);\n            });\n\n            // Cleanup on component destruction\n            this.$cleanup = () => {\n                console.log('Cleaning up schedulerSettings component');\n                this.stopPolling();\n\n                // Clean up any Flatpickr instances\n                const createInput = document.getElementById('newPlannedTime-create');\n                if (createInput && createInput._flatpickr) {\n                    createInput._flatpickr.destroy();\n                }\n\n                const editInput = document.getElementById('newPlannedTime-edit');\n                if (editInput && editInput._flatpickr) {\n                    editInput._flatpickr.destroy();\n                }\n            };\n        },\n\n        // Start polling for task updates\n        startPolling() {\n            // Don't start if already polling\n            if (this.pollingInterval) {\n                console.log('Polling already active, not starting again');\n                return;\n            }\n\n            console.log('Starting task polling');\n            this.pollingActive = true;\n\n            // Fetch immediately, then set up interval for every 2 seconds\n            this.fetchTasks();\n            this.pollingInterval = setInterval(() => {\n                if (this.pollingActive) {\n                    this.fetchTasks();\n                }\n            }, 2000); // Poll every 2 seconds as requested\n        },\n\n        // Stop polling when tab is inactive\n        stopPolling() {\n            console.log('Stopping task polling');\n            this.pollingActive = false;\n\n            if (this.pollingInterval) {\n                clearInterval(this.pollingInterval);\n                this.pollingInterval = null;\n            }\n        },\n\n        // Fetch tasks from API\n        async fetchTasks() {\n            // Don't fetch if polling is inactive (prevents race conditions)\n            if (!this.pollingActive && this.pollingInterval) {\n                return;\n            }\n\n            // Don't fetch while creating/editing a task\n            if (this.isCreating || this.isEditing) {\n                return;\n            }\n\n            this.isLoading = true;\n            try {\n                const response = await fetch('/scheduler_tasks_list', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        timezone: getUserTimezone()\n                    })\n                });\n\n                if (!response.ok) {\n                    throw new Error('Failed to fetch tasks');\n                }\n\n                const data = await response.json();\n\n                // Check if data.tasks exists and is an array\n                if (!data || !data.tasks) {\n                    console.error('Invalid response: data.tasks is missing', data);\n                    this.tasks = [];\n                } else if (!Array.isArray(data.tasks)) {\n                    console.error('Invalid response: data.tasks is not an array', data.tasks);\n                    this.tasks = [];\n                } else {\n                    // Verify each task has necessary properties\n                    const validTasks = data.tasks.filter(task => {\n                        if (!task || typeof task !== 'object') {\n                            console.error('Invalid task (not an object):', task);\n                            return false;\n                        }\n                        if (!task.uuid) {\n                            console.error('Task missing uuid:', task);\n                            return false;\n                        }\n                        if (!task.name) {\n                            console.error('Task missing name:', task);\n                            return false;\n                        }\n                        if (!task.type) {\n                            console.error('Task missing type:', task);\n                            return false;\n                        }\n                        return true;\n                    });\n\n                    if (validTasks.length !== data.tasks.length) {\n                        console.warn(`Filtered out ${data.tasks.length - validTasks.length} invalid tasks`);\n                    }\n\n                    this.tasks = validTasks;\n\n                    // Update UI using the shared function\n                    this.updateTasksUI();\n                }\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n                // Only show toast for errors on manual refresh, not during polling\n                if (!this.pollingInterval) {\n                    showToast('Failed to fetch tasks: ' + error.message, 'error');\n                }\n                // Reset tasks to empty array on error\n                this.tasks = [];\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        // Change sort field/direction\n        changeSort(field) {\n            if (this.sortField === field) {\n                // Toggle direction if already sorting by this field\n                this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n            } else {\n                // Set new sort field and default to ascending\n                this.sortField = field;\n                this.sortDirection = 'asc';\n            }\n        },\n\n        // Toggle expanded task row\n        toggleTaskExpand(taskId) {\n            if (this.expandedTaskId === taskId) {\n                this.expandedTaskId = null;\n            } else {\n                this.expandedTaskId = taskId;\n            }\n        },\n\n        // Show task detail view\n        showTaskDetail(taskId) {\n            const task = this.tasks.find(t => t.uuid === taskId);\n            if (!task) {\n                showToast('Task not found', 'error');\n                return;\n            }\n\n            // Create a copy of the task to avoid modifying the original\n            this.selectedTaskForDetail = JSON.parse(JSON.stringify(task));\n\n            // Ensure attachments is always an array\n            if (!this.selectedTaskForDetail.attachments) {\n                this.selectedTaskForDetail.attachments = [];\n            }\n\n            this.viewMode = 'detail';\n        },\n\n        // Close detail view and return to list\n        closeTaskDetail() {\n            this.selectedTaskForDetail = null;\n            this.viewMode = 'list';\n        },\n\n        // Format date for display\n        formatDate(dateString) {\n            if (!dateString) return 'Never';\n            return formatDateTime(dateString, 'full');\n        },\n\n        // Format plan for display\n        formatPlan(task) {\n            if (!task || !task.plan) return 'No plan';\n\n            const todoCount = Array.isArray(task.plan.todo) ? task.plan.todo.length : 0;\n            const inProgress = task.plan.in_progress ? 'Yes' : 'No';\n            const doneCount = Array.isArray(task.plan.done) ? task.plan.done.length : 0;\n\n            let nextRun = '';\n            if (Array.isArray(task.plan.todo) && task.plan.todo.length > 0) {\n                try {\n                    const nextTime = new Date(task.plan.todo[0]);\n\n                    // Verify it's a valid date before formatting\n                    if (!isNaN(nextTime.getTime())) {\n                        nextRun = formatDateTime(nextTime, 'short');\n                    } else {\n                        nextRun = 'Invalid date';\n                        console.warn(`Invalid date format in plan.todo[0]: ${task.plan.todo[0]}`);\n                    }\n                } catch (error) {\n                    console.error(`Error formatting next run time: ${error.message}`);\n                    nextRun = 'Error';\n                }\n            } else {\n                nextRun = 'None';\n            }\n\n            return `Next: ${nextRun}\\nTodo: ${todoCount}\\nIn Progress: ${inProgress}\\nDone: ${doneCount}`;\n        },\n\n        // Format schedule for display\n        formatSchedule(task) {\n            if (!task.schedule) return 'None';\n\n            let schedule = '';\n            if (typeof task.schedule === 'string') {\n                schedule = task.schedule;\n            } else if (typeof task.schedule === 'object') {\n                // Display only the cron parts, not the timezone\n                schedule = `${task.schedule.minute || '*'} ${task.schedule.hour || '*'} ${task.schedule.day || '*'} ${task.schedule.month || '*'} ${task.schedule.weekday || '*'}`;\n            }\n\n            return schedule;\n        },\n\n        // Get CSS class for state badge\n        getStateBadgeClass(state) {\n            switch (state) {\n                case 'idle': return 'scheduler-status-idle';\n                case 'running': return 'scheduler-status-running';\n                case 'disabled': return 'scheduler-status-disabled';\n                case 'error': return 'scheduler-status-error';\n                default: return '';\n            }\n        },\n\n        // Create a new task\n        startCreateTask() {\n            this.isCreating = true;\n            this.isEditing = false;\n            document.querySelector('[x-data=\"schedulerSettings\"]')?.setAttribute('data-editing-state', 'creating');\n            this.editingTask = {\n                name: '',\n                type: 'scheduled', // Default to scheduled\n                state: 'idle', // Initialize with idle state\n                schedule: {\n                    minute: '*',\n                    hour: '*',\n                    day: '*',\n                    month: '*',\n                    weekday: '*',\n                    timezone: getUserTimezone()\n                },\n                token: this.generateRandomToken(), // Generate token even for scheduled tasks to prevent undefined errors\n                plan: { // Initialize plan for all task types to prevent undefined errors\n                    todo: [],\n                    in_progress: null,\n                    done: []\n                },\n                system_prompt: '',\n                prompt: '',\n                attachments: [], // Always initialize as an empty array\n            };\n\n            // Set up Flatpickr after the component is visible\n            this.$nextTick(() => {\n                this.initFlatpickr('create');\n            });\n        },\n\n        // Edit an existing task\n        async startEditTask(taskId) {\n            const task = this.tasks.find(t => t.uuid === taskId);\n            if (!task) {\n                showToast('Task not found', 'error');\n                return;\n            }\n\n            this.isCreating = false;\n            this.isEditing = true;\n            document.querySelector('[x-data=\"schedulerSettings\"]')?.setAttribute('data-editing-state', 'editing');\n\n            // Create a deep copy to avoid modifying the original\n            this.editingTask = JSON.parse(JSON.stringify(task));\n\n            // Debug log\n            console.log('Task data for editing:', task);\n            console.log('Attachments from task:', task.attachments);\n\n            // Ensure state is set with a default if missing\n            if (!this.editingTask.state) this.editingTask.state = 'idle';\n\n            // Always initialize schedule to prevent UI errors\n            // All task types need this structure for the form to work properly\n            if (!this.editingTask.schedule || typeof this.editingTask.schedule === 'string') {\n                const scheduleObj = {\n                    minute: '*',\n                    hour: '*',\n                    day: '*',\n                    month: '*',\n                    weekday: '*',\n                    timezone: getUserTimezone()\n                };\n\n                // If it's a string, parse it\n                if (typeof this.editingTask.schedule === 'string') {\n                    const parts = this.editingTask.schedule.split(' ');\n                    if (parts.length >= 5) {\n                        scheduleObj.minute = parts[0] || '*';\n                        scheduleObj.hour = parts[1] || '*';\n                        scheduleObj.day = parts[2] || '*';\n                        scheduleObj.month = parts[3] || '*';\n                        scheduleObj.weekday = parts[4] || '*';\n                    }\n                }\n\n                this.editingTask.schedule = scheduleObj;\n            } else {\n                // Ensure timezone exists in the schedule\n                if (!this.editingTask.schedule.timezone) {\n                    this.editingTask.schedule.timezone = getUserTimezone();\n                }\n            }\n\n            // Ensure attachments is always an array\n            if (!this.editingTask.attachments) {\n                this.editingTask.attachments = [];\n            } else if (typeof this.editingTask.attachments === 'string') {\n                // Handle case where attachments might be stored as a string\n                this.editingTask.attachments = this.editingTask.attachments\n                    .split('\\n')\n                    .map(line => line.trim())\n                    .filter(line => line.length > 0);\n            } else if (!Array.isArray(this.editingTask.attachments)) {\n                // If not an array or string, set to empty array\n                this.editingTask.attachments = [];\n            }\n\n            // Ensure appropriate properties are initialized based on task type\n            if (this.editingTask.type === 'scheduled') {\n                // Initialize token for scheduled tasks to prevent undefined errors if UI accesses it\n                if (!this.editingTask.token) {\n                    this.editingTask.token = '';\n                }\n\n                // Initialize plan stub for scheduled tasks to prevent undefined errors\n                if (!this.editingTask.plan) {\n                    this.editingTask.plan = {\n                        todo: [],\n                        in_progress: null,\n                        done: []\n                    };\n                }\n            } else if (this.editingTask.type === 'adhoc') {\n                // Initialize token if it doesn't exist\n                if (!this.editingTask.token) {\n                    this.editingTask.token = this.generateRandomToken();\n                    console.log('Generated new token for adhoc task:', this.editingTask.token);\n                }\n\n                console.log('Setting token for adhoc task:', this.editingTask.token);\n\n                // Initialize plan stub for adhoc tasks to prevent undefined errors\n                if (!this.editingTask.plan) {\n                    this.editingTask.plan = {\n                        todo: [],\n                        in_progress: null,\n                        done: []\n                    };\n                }\n            } else if (this.editingTask.type === 'planned') {\n                // Initialize plan if it doesn't exist\n                if (!this.editingTask.plan) {\n                    this.editingTask.plan = {\n                        todo: [],\n                        in_progress: null,\n                        done: []\n                    };\n                }\n\n                // Ensure todo is an array\n                if (!Array.isArray(this.editingTask.plan.todo)) {\n                    this.editingTask.plan.todo = [];\n                }\n\n                // Initialize token to prevent undefined errors\n                if (!this.editingTask.token) {\n                    this.editingTask.token = '';\n                }\n            }\n\n            // Set up Flatpickr after the component is visible and task data is loaded\n            this.$nextTick(() => {\n                this.initFlatpickr('edit');\n            });\n        },\n\n        // Cancel editing\n        cancelEdit() {\n            // Clean up Flatpickr instances\n            const destroyFlatpickr = (inputId) => {\n                const input = document.getElementById(inputId);\n                if (input && input._flatpickr) {\n                    console.log(`Destroying Flatpickr instance for ${inputId}`);\n                    input._flatpickr.destroy();\n\n                    // Also remove any wrapper elements that might have been created\n                    const wrapper = input.closest('.scheduler-flatpickr-wrapper');\n                    if (wrapper && wrapper.parentNode) {\n                        // Move the input back to its original position\n                        wrapper.parentNode.insertBefore(input, wrapper);\n                        // Remove the wrapper\n                        wrapper.parentNode.removeChild(wrapper);\n                    }\n\n                    // Remove any added classes\n                    input.classList.remove('scheduler-flatpickr-input');\n                }\n            };\n\n            if (this.isCreating) {\n                destroyFlatpickr('newPlannedTime-create');\n            } else if (this.isEditing) {\n                destroyFlatpickr('newPlannedTime-edit');\n            }\n\n            // Reset to initial state but keep default values to prevent errors\n            this.editingTask = {\n                name: '',\n                type: 'scheduled',\n                state: 'idle', // Initialize with idle state\n                schedule: {\n                    minute: '*',\n                    hour: '*',\n                    day: '*',\n                    month: '*',\n                    weekday: '*',\n                    timezone: getUserTimezone()\n                },\n                token: '',\n                plan: { // Initialize plan for planned tasks\n                    todo: [],\n                    in_progress: null,\n                    done: []\n                },\n                system_prompt: '',\n                prompt: '',\n                attachments: [], // Always initialize as an empty array\n            };\n            this.isCreating = false;\n            this.isEditing = false;\n            document.querySelector('[x-data=\"schedulerSettings\"]')?.removeAttribute('data-editing-state');\n        },\n\n        // Save task (create new or update existing)\n        async saveTask() {\n            // Validate task data\n            if (!this.editingTask.name.trim() || !this.editingTask.prompt.trim()) {\n                // showToast('Task name and prompt are required', 'error');\n                alert('Task name and prompt are required');\n                return;\n            }\n\n            try {\n                let apiEndpoint, taskData;\n\n                // Prepare task data\n                taskData = {\n                    name: this.editingTask.name,\n                    system_prompt: this.editingTask.system_prompt || '',\n                    prompt: this.editingTask.prompt || '',\n                    state: this.editingTask.state || 'idle', // Include state in task data\n                    timezone: getUserTimezone()\n                };\n\n                // Process attachments - now always stored as array\n                taskData.attachments = Array.isArray(this.editingTask.attachments)\n                    ? this.editingTask.attachments\n                        .map(line => typeof line === 'string' ? line.trim() : line)\n                        .filter(line => line && line.trim().length > 0)\n                    : [];\n\n                // Handle task type specific data\n                if (this.editingTask.type === 'scheduled') {\n                    // Ensure schedule is properly formatted as an object\n                    if (typeof this.editingTask.schedule === 'string') {\n                        // Parse string schedule into object\n                        const parts = this.editingTask.schedule.split(' ');\n                        taskData.schedule = {\n                            minute: parts[0] || '*',\n                            hour: parts[1] || '*',\n                            day: parts[2] || '*',\n                            month: parts[3] || '*',\n                            weekday: parts[4] || '*',\n                            timezone: getUserTimezone() // Add timezone to schedule object\n                        };\n                    } else {\n                        // Use object schedule directly but ensure timezone is included\n                        taskData.schedule = {\n                            ...this.editingTask.schedule,\n                            timezone: this.editingTask.schedule.timezone || getUserTimezone()\n                        };\n                    }\n                    // Don't send token or plan for scheduled tasks\n                    delete taskData.token;\n                    delete taskData.plan;\n                } else if (this.editingTask.type === 'adhoc') {\n                    // Ad-hoc task with token\n                    // Ensure token is a non-empty string, generate a new one if needed\n                    if (!this.editingTask.token) {\n                        this.editingTask.token = this.generateRandomToken();\n                        console.log('Generated new token for adhoc task:', this.editingTask.token);\n                    }\n\n                    console.log('Setting token in taskData:', this.editingTask.token);\n                    taskData.token = this.editingTask.token;\n\n                    // Don't send schedule or plan for adhoc tasks\n                    delete taskData.schedule;\n                    delete taskData.plan;\n                } else if (this.editingTask.type === 'planned') {\n                    // Planned task with plan\n                    // Make sure plan exists and has required properties\n                    if (!this.editingTask.plan) {\n                        this.editingTask.plan = {\n                            todo: [],\n                            in_progress: null,\n                            done: []\n                        };\n                    }\n\n                    // Ensure todo and done are arrays\n                    if (!Array.isArray(this.editingTask.plan.todo)) {\n                        this.editingTask.plan.todo = [];\n                    }\n\n                    if (!Array.isArray(this.editingTask.plan.done)) {\n                        this.editingTask.plan.done = [];\n                    }\n\n                    // Validate each date in the todo list to ensure it's a valid ISO string\n                    const validatedTodo = [];\n                    for (const dateStr of this.editingTask.plan.todo) {\n                        try {\n                            const date = new Date(dateStr);\n                            if (!isNaN(date.getTime())) {\n                                validatedTodo.push(date.toISOString());\n                            } else {\n                                console.warn(`Skipping invalid date in todo list: ${dateStr}`);\n                            }\n                        } catch (error) {\n                            console.warn(`Error processing date: ${error.message}`);\n                        }\n                    }\n\n                    // Replace with validated list\n                    this.editingTask.plan.todo = validatedTodo;\n\n                    // Sort the todo items by date (earliest first)\n                    this.editingTask.plan.todo.sort();\n\n                    // Set the plan in taskData\n                    taskData.plan = {\n                        todo: this.editingTask.plan.todo,\n                        in_progress: this.editingTask.plan.in_progress,\n                        done: this.editingTask.plan.done || []\n                    };\n\n                    // Log the plan data for debugging\n                    console.log('Planned task plan data:', JSON.stringify(taskData.plan, null, 2));\n\n                    // Don't send schedule or token for planned tasks\n                    delete taskData.schedule;\n                    delete taskData.token;\n                }\n\n                // Determine if creating or updating\n                if (this.isCreating) {\n                    apiEndpoint = '/scheduler_task_create';\n                } else {\n                    apiEndpoint = '/scheduler_task_update';\n                    taskData.task_id = this.editingTask.uuid;\n                }\n\n                // Debug: Log the final task data being sent\n                console.log('Final task data being sent to API:', JSON.stringify(taskData, null, 2));\n\n                // Make API request\n                const response = await fetch(apiEndpoint, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(taskData)\n                });\n\n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(errorData.error || 'Failed to save task');\n                }\n\n                // Parse response data to get the created/updated task\n                const responseData = await response.json();\n\n                // Show success message\n                showToast(this.isCreating ? 'Task created successfully' : 'Task updated successfully', 'success');\n\n                // Immediately update the UI if the response includes the task\n                if (responseData && responseData.task) {\n                    console.log('Task received in response:', responseData.task);\n\n                    // Update the tasks array\n                    if (this.isCreating) {\n                        // For new tasks, add to the array\n                        this.tasks = [...this.tasks, responseData.task];\n                    } else {\n                        // For updated tasks, replace the existing one\n                        this.tasks = this.tasks.map(t =>\n                            t.uuid === responseData.task.uuid ? responseData.task : t\n                        );\n                    }\n\n                    // Update UI using the shared function\n                    this.updateTasksUI();\n                } else {\n                    // Fallback to fetching tasks if no task in response\n                    await this.fetchTasks();\n                }\n\n                // Clean up Flatpickr instances\n                const destroyFlatpickr = (inputId) => {\n                    const input = document.getElementById(inputId);\n                    if (input && input._flatpickr) {\n                        input._flatpickr.destroy();\n                    }\n                };\n\n                if (this.isCreating) {\n                    destroyFlatpickr('newPlannedTime-create');\n                } else if (this.isEditing) {\n                    destroyFlatpickr('newPlannedTime-edit');\n                }\n\n                // Reset task data and form state\n                this.editingTask = {\n                    name: '',\n                    type: 'scheduled',\n                    state: 'idle',\n                    schedule: {\n                        minute: '*',\n                        hour: '*',\n                        day: '*',\n                        month: '*',\n                        weekday: '*',\n                        timezone: getUserTimezone()\n                    },\n                    token: '',\n                    plan: {\n                        todo: [],\n                        in_progress: null,\n                        done: []\n                    },\n                    system_prompt: '',\n                    prompt: '',\n                    attachments: []\n                };\n                this.isCreating = false;\n                this.isEditing = false;\n                document.querySelector('[x-data=\"schedulerSettings\"]')?.removeAttribute('data-editing-state');\n            } catch (error) {\n                console.error('Error saving task:', error);\n                showToast('Failed to save task: ' + error.message, 'error');\n            }\n        },\n\n        // Run a task\n        async runTask(taskId) {\n            try {\n                const response = await fetch('/scheduler_task_run', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        task_id: taskId,\n                        timezone: getUserTimezone()\n                    })\n                });\n\n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(errorData.error || 'Failed to run task');\n                }\n\n                showToast('Task started successfully', 'success');\n\n                // Refresh task list\n                this.fetchTasks();\n            } catch (error) {\n                console.error('Error running task:', error);\n                showToast('Failed to run task: ' + error.message, 'error');\n            }\n        },\n\n        // Reset a task's state\n        async resetTaskState(taskId) {\n            try {\n                const task = this.tasks.find(t => t.uuid === taskId);\n                if (!task) {\n                    showToast('Task not found', 'error');\n                    return;\n                }\n\n                // Check if task is already in idle state\n                if (task.state === 'idle') {\n                    showToast('Task is already in idle state', 'info');\n                    return;\n                }\n\n                this.showLoadingState = true;\n\n                // Call API to update the task state\n                const response = await fetch('/scheduler_task_update', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        task_id: taskId,\n                        state: 'idle',  // Always reset to idle state\n                        timezone: getUserTimezone()\n                    })\n                });\n\n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(errorData.error || 'Failed to reset task state');\n                }\n\n                showToast('Task state reset to idle', 'success');\n\n                // Refresh task list\n                await this.fetchTasks();\n                this.showLoadingState = false;\n            } catch (error) {\n                console.error('Error resetting task state:', error);\n                showToast('Failed to reset task state: ' + error.message, 'error');\n                this.showLoadingState = false;\n            }\n        },\n\n        // Delete a task\n        async deleteTask(taskId) {\n            // Confirm deletion\n            if (!confirm('Are you sure you want to delete this task? This action cannot be undone.')) {\n                return;\n            }\n\n            try {\n\n                // if we delete selected context, switch to another first\n                switchFromContext(taskId);\n\n                const response = await fetch('/scheduler_task_delete', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        task_id: taskId,\n                        timezone: getUserTimezone()\n                    })\n                });\n\n                if (!response.ok) {\n                    const errorData = await response.json();\n                    throw new Error(errorData.error || 'Failed to delete task');\n                }\n\n                showToast('Task deleted successfully', 'success');\n                \n                // If we were viewing the detail of the deleted task, close the detail view\n                if (this.selectedTaskForDetail && this.selectedTaskForDetail.uuid === taskId) {\n                    this.closeTaskDetail();\n                }\n\n                // Immediately update UI without waiting for polling\n                this.tasks = this.tasks.filter(t => t.uuid !== taskId);\n\n                // Update UI using the shared function\n                this.updateTasksUI();\n            } catch (error) {\n                console.error('Error deleting task:', error);\n                showToast('Failed to delete task: ' + error.message, 'error');\n            }\n        },\n\n        // Initialize datetime input with default value (30 minutes from now)\n        initDateTimeInput(event) {\n            if (!event.target.value) {\n                const now = new Date();\n                now.setMinutes(now.getMinutes() + 30);\n\n                // Format as YYYY-MM-DDThh:mm\n                const year = now.getFullYear();\n                const month = String(now.getMonth() + 1).padStart(2, '0');\n                const day = String(now.getDate()).padStart(2, '0');\n                const hours = String(now.getHours()).padStart(2, '0');\n                const minutes = String(now.getMinutes()).padStart(2, '0');\n\n                event.target.value = `${year}-${month}-${day}T${hours}:${minutes}`;\n\n                // If using Flatpickr, update it as well\n                if (event.target._flatpickr) {\n                    event.target._flatpickr.setDate(event.target.value);\n                }\n            }\n        },\n\n        // Generate a random token for ad-hoc tasks\n        generateRandomToken() {\n            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            let token = '';\n            for (let i = 0; i < 16; i++) {\n                token += characters.charAt(Math.floor(Math.random() * characters.length));\n            }\n            return token;\n        },\n\n        // Getter for filtered tasks\n        get filteredTasks() {\n            // Make sure we have tasks to filter\n            if (!Array.isArray(this.tasks)) {\n                console.warn('Tasks is not an array:', this.tasks);\n                return [];\n            }\n\n            let filtered = [...this.tasks];\n\n            // Apply type filter with case-insensitive comparison\n            if (this.filterType && this.filterType !== 'all') {\n                filtered = filtered.filter(task => {\n                    if (!task.type) return false;\n                    return String(task.type).toLowerCase() === this.filterType.toLowerCase();\n                });\n            }\n\n            // Apply state filter with case-insensitive comparison\n            if (this.filterState && this.filterState !== 'all') {\n                filtered = filtered.filter(task => {\n                    if (!task.state) return false;\n                    return String(task.state).toLowerCase() === this.filterState.toLowerCase();\n                });\n            }\n\n            // Sort the filtered tasks\n            return this.sortTasks(filtered);\n        },\n\n        // Sort the tasks based on sort field and direction\n        sortTasks(tasks) {\n            if (!Array.isArray(tasks) || tasks.length === 0) {\n                return tasks;\n            }\n\n            return [...tasks].sort((a, b) => {\n                if (!this.sortField) return 0;\n\n                const fieldA = a[this.sortField];\n                const fieldB = b[this.sortField];\n\n                // Handle cases where fields might be undefined\n                if (fieldA === undefined && fieldB === undefined) return 0;\n                if (fieldA === undefined) return 1;\n                if (fieldB === undefined) return -1;\n\n                // For dates, convert to timestamps\n                if (this.sortField === 'createdAt' || this.sortField === 'updatedAt') {\n                    const dateA = new Date(fieldA).getTime();\n                    const dateB = new Date(fieldB).getTime();\n                    return this.sortDirection === 'asc' ? dateA - dateB : dateB - dateA;\n                }\n\n                // For string comparisons\n                if (typeof fieldA === 'string' && typeof fieldB === 'string') {\n                    return this.sortDirection === 'asc'\n                        ? fieldA.localeCompare(fieldB)\n                        : fieldB.localeCompare(fieldA);\n                }\n\n                // For numerical comparisons\n                return this.sortDirection === 'asc' ? fieldA - fieldB : fieldB - fieldA;\n            });\n        },\n\n        // Computed property for attachments text representation\n        get attachmentsText() {\n            // Ensure we always have an array to work with\n            const attachments = Array.isArray(this.editingTask.attachments)\n                ? this.editingTask.attachments\n                : [];\n\n            // Join array items with newlines\n            return attachments.join('\\n');\n        },\n\n        // Setter for attachments text - preserves empty lines during editing\n        set attachmentsText(value) {\n            if (typeof value === 'string') {\n                // Just split by newlines without filtering to preserve editing experience\n                this.editingTask.attachments = value.split('\\n');\n            } else {\n                // Fallback to empty array if not a string\n                this.editingTask.attachments = [];\n            }\n        },\n\n        // Debug method to test filtering logic\n        testFiltering() {\n            console.group('SchedulerSettings Debug: Filter Test');\n            console.log('Current Filter Settings:');\n            console.log('- Filter Type:', this.filterType);\n            console.log('- Filter State:', this.filterState);\n            console.log('- Sort Field:', this.sortField);\n            console.log('- Sort Direction:', this.sortDirection);\n\n            // Check if tasks is an array\n            if (!Array.isArray(this.tasks)) {\n                console.error('ERROR: this.tasks is not an array!', this.tasks);\n                console.groupEnd();\n                return;\n            }\n\n            console.log(`Raw Tasks (${this.tasks.length}):`, this.tasks);\n\n            // Test filtering by type\n            console.group('Filter by Type Test');\n            ['all', 'adhoc', 'scheduled', 'recurring'].forEach(type => {\n                const filtered = this.tasks.filter(task =>\n                    type === 'all' ||\n                    (task.type && String(task.type).toLowerCase() === type)\n                );\n                console.log(`Type \"${type}\": ${filtered.length} tasks`, filtered);\n            });\n            console.groupEnd();\n\n            // Test filtering by state\n            console.group('Filter by State Test');\n            ['all', 'idle', 'running', 'completed', 'failed'].forEach(state => {\n                const filtered = this.tasks.filter(task =>\n                    state === 'all' ||\n                    (task.state && String(task.state).toLowerCase() === state)\n                );\n                console.log(`State \"${state}\": ${filtered.length} tasks`, filtered);\n            });\n            console.groupEnd();\n\n            // Show current filtered tasks\n            console.log('Current Filtered Tasks:', this.filteredTasks);\n\n            console.groupEnd();\n        },\n\n        // New comprehensive debug method\n        debugTasks() {\n            console.group('SchedulerSettings Comprehensive Debug');\n\n            // Component state\n            console.log('Component State:');\n            console.log({\n                filterType: this.filterType,\n                filterState: this.filterState,\n                sortField: this.sortField,\n                sortDirection: this.sortDirection,\n                isLoading: this.isLoading,\n                isEditing: this.isEditing,\n                isCreating: this.isCreating,\n                viewMode: this.viewMode\n            });\n\n            // Tasks validation\n            if (!this.tasks) {\n                console.error('ERROR: this.tasks is undefined or null!');\n                console.groupEnd();\n                return;\n            }\n\n            if (!Array.isArray(this.tasks)) {\n                console.error('ERROR: this.tasks is not an array!', typeof this.tasks, this.tasks);\n                console.groupEnd();\n                return;\n            }\n\n            // Raw tasks\n            console.group('Raw Tasks');\n            console.log(`Count: ${this.tasks.length}`);\n            if (this.tasks.length > 0) {\n                console.table(this.tasks.map(t => ({\n                    uuid: t.uuid,\n                    name: t.name,\n                    type: t.type,\n                    state: t.state\n                })));\n\n                // Inspect first task in detail\n                console.log('First Task Structure:', JSON.stringify(this.tasks[0], null, 2));\n            } else {\n                console.log('No tasks available');\n            }\n            console.groupEnd();\n\n            // Filtered tasks\n            console.group('Filtered Tasks');\n            const filteredTasks = this.filteredTasks;\n            console.log(`Count: ${filteredTasks.length}`);\n            if (filteredTasks.length > 0) {\n                console.table(filteredTasks.map(t => ({\n                    uuid: t.uuid,\n                    name: t.name,\n                    type: t.type,\n                    state: t.state\n                })));\n            } else {\n                console.log('No filtered tasks');\n            }\n            console.groupEnd();\n\n            // Check for potential issues\n            console.group('Potential Issues');\n\n            // Check for case mismatches\n            if (this.tasks.length > 0 && filteredTasks.length === 0) {\n                console.warn('Filter seems to exclude all tasks. Checking why:');\n\n                // Check type values\n                const uniqueTypes = [...new Set(this.tasks.map(t => t.type))];\n                console.log('Unique task types in data:', uniqueTypes);\n\n                // Check state values\n                const uniqueStates = [...new Set(this.tasks.map(t => t.state))];\n                console.log('Unique task states in data:', uniqueStates);\n\n                // Check for exact mismatches\n                if (this.filterType !== 'all') {\n                    const typeMatch = this.tasks.some(t =>\n                        t.type && String(t.type).toLowerCase() === this.filterType.toLowerCase()\n                    );\n                    console.log(`Type \"${this.filterType}\" matches found:`, typeMatch);\n                }\n\n                if (this.filterState !== 'all') {\n                    const stateMatch = this.tasks.some(t =>\n                        t.state && String(t.state).toLowerCase() === this.filterState.toLowerCase()\n                    );\n                    console.log(`State \"${this.filterState}\" matches found:`, stateMatch);\n                }\n            }\n\n            // Check for undefined or null values\n            const hasUndefinedType = this.tasks.some(t => t.type === undefined || t.type === null);\n            const hasUndefinedState = this.tasks.some(t => t.state === undefined || t.state === null);\n\n            if (hasUndefinedType) {\n                console.warn('Some tasks have undefined or null type values!');\n            }\n\n            if (hasUndefinedState) {\n                console.warn('Some tasks have undefined or null state values!');\n            }\n\n            console.groupEnd();\n\n            console.groupEnd();\n        },\n\n        // Initialize Flatpickr datetime pickers for both create and edit forms\n        /**\n         * Initialize Flatpickr date/time pickers for scheduler forms\n         *\n         * @param {string} mode - Which pickers to initialize: 'all', 'create', or 'edit'\n         * @returns {void}\n         */\n        initFlatpickr(mode = 'all') {\n            const initPicker = (inputId, refName, wrapperClass, options = {}) => {\n                // Try to get input using Alpine.js x-ref first (more reliable)\n                let input = this.$refs[refName];\n\n                // Fall back to getElementById if x-ref is not available\n                if (!input) {\n                    input = document.getElementById(inputId);\n                    console.log(`Using getElementById fallback for ${inputId}`);\n                }\n\n                if (!input) {\n                    console.warn(`Input element ${inputId} not found by ID or ref`);\n                    return null;\n                }\n\n                // Create a wrapper around the input\n                const wrapper = document.createElement('div');\n                wrapper.className = wrapperClass || 'scheduler-flatpickr-wrapper';\n                wrapper.style.overflow = 'visible'; // Ensure dropdown can escape container\n\n                // Replace the input with our wrapped version\n                input.parentNode.insertBefore(wrapper, input);\n                wrapper.appendChild(input);\n                input.classList.add('scheduler-flatpickr-input');\n\n                // Default options\n                const defaultOptions = {\n                    dateFormat: \"Y-m-d H:i\",\n                    enableTime: true,\n                    time_24hr: true,\n                    static: false, // Not static so it will float\n                    appendTo: document.body, // Append to body to avoid overflow issues\n                    theme: \"scheduler-theme\",\n                    allowInput: true,\n                    positionElement: wrapper, // Position relative to wrapper\n                    onOpen: function(selectedDates, dateStr, instance) {\n                        // Ensure calendar is properly positioned and visible\n                        instance.calendarContainer.style.zIndex = '9999';\n                        instance.calendarContainer.style.position = 'absolute';\n                        instance.calendarContainer.style.visibility = 'visible';\n                        instance.calendarContainer.style.opacity = '1';\n\n                        // Add class to calendar container for our custom styling\n                        instance.calendarContainer.classList.add('scheduler-theme');\n                    },\n                    // Set default date to 30 minutes from now if no date selected\n                    onReady: function(selectedDates, dateStr, instance) {\n                        if (!dateStr) {\n                            const now = new Date();\n                            now.setMinutes(now.getMinutes() + 30);\n                            instance.setDate(now, true);\n                        }\n                    }\n                };\n\n                // Merge options\n                const mergedOptions = {...defaultOptions, ...options};\n\n                // Initialize flatpickr\n                const fp = flatpickr(input, mergedOptions);\n\n                // Add a clear button\n                const clearButton = document.createElement('button');\n                clearButton.className = 'scheduler-flatpickr-clear';\n                clearButton.innerHTML = '×';\n                clearButton.type = 'button';\n                clearButton.addEventListener('click', (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (fp) {\n                        fp.clear();\n                    }\n                });\n                wrapper.appendChild(clearButton);\n\n                return fp;\n            };\n\n            // Clear any existing Flatpickr instances to prevent duplication\n            if (mode === 'all' || mode === 'create') {\n                const createInput = document.getElementById('newPlannedTime-create');\n                if (createInput && createInput._flatpickr) {\n                    createInput._flatpickr.destroy();\n                }\n            }\n\n            if (mode === 'all' || mode === 'edit') {\n                const editInput = document.getElementById('newPlannedTime-edit');\n                if (editInput && editInput._flatpickr) {\n                    editInput._flatpickr.destroy();\n                }\n            }\n\n            // Initialize new instances\n            if (mode === 'all' || mode === 'create') {\n                initPicker('newPlannedTime-create', 'plannedTimeCreate', 'scheduler-flatpickr-wrapper', {\n                    minuteIncrement: 5,\n                    defaultHour: new Date().getHours(),\n                    defaultMinute: Math.ceil(new Date().getMinutes() / 5) * 5\n                });\n            }\n\n            if (mode === 'all' || mode === 'edit') {\n                initPicker('newPlannedTime-edit', 'plannedTimeEdit', 'scheduler-flatpickr-wrapper', {\n                    minuteIncrement: 5,\n                    defaultHour: new Date().getHours(),\n                    defaultMinute: Math.ceil(new Date().getMinutes() / 5) * 5\n                });\n            }\n        },\n\n        // Update tasks UI\n        updateTasksUI() {\n            // First update filteredTasks if that method exists\n            if (typeof this.updateFilteredTasks === 'function') {\n                this.updateFilteredTasks();\n            }\n\n            // Wait for UI to update\n            this.$nextTick(() => {\n                // Get empty state and task list elements\n                const emptyElement = document.querySelector('.scheduler-empty');\n                const tableElement = document.querySelector('.scheduler-task-list');\n\n                // Calculate visibility state based on filtered tasks\n                const hasFilteredTasks = Array.isArray(this.filteredTasks) && this.filteredTasks.length > 0;\n\n                // Update visibility directly\n                if (emptyElement) {\n                    emptyElement.style.display = !hasFilteredTasks ? '' : 'none';\n                }\n\n                if (tableElement) {\n                    tableElement.style.display = hasFilteredTasks ? '' : 'none';\n                }\n            });\n        }\n    };\n};\n\n\n// Only define the component if it doesn't already exist or extend the existing one\nif (!window.schedulerSettings) {\n    console.log('Defining schedulerSettings component from scratch');\n    window.schedulerSettings = fullComponentImplementation;\n} else {\n    console.log('Extending existing schedulerSettings component');\n    // Store the original function\n    const originalSchedulerSettings = window.schedulerSettings;\n\n    // Replace with enhanced version that merges the pre-initialized stub with the full implementation\n    window.schedulerSettings = function() {\n        // Get the base pre-initialized component\n        const baseComponent = originalSchedulerSettings();\n\n        // Create a backup of the original init function\n        const originalInit = baseComponent.init || function() {};\n\n        // Create our enhanced init function that adds the missing functionality\n        baseComponent.init = function() {\n            // Call the original init if it exists\n            originalInit.call(this);\n\n            console.log('Enhanced init running: adding missing methods to component');\n\n            // Get the full implementation\n            const fullImpl = fullComponentImplementation();\n\n            // Add essential methods directly\n            const essentialMethods = [\n                'fetchTasks', 'startPolling', 'stopPolling',\n                'startCreateTask', 'startEditTask', 'cancelEdit',\n                'saveTask', 'runTask', 'resetTaskState', 'deleteTask',\n                'toggleTaskExpand', 'showTaskDetail', 'closeTaskDetail',\n                'changeSort', 'formatDate', 'formatPlan', 'formatSchedule',\n                'getStateBadgeClass', 'generateRandomToken', 'testFiltering',\n                'debugTasks', 'sortTasks', 'initFlatpickr', 'initDateTimeInput',\n                'updateTasksUI'\n            ];\n\n            essentialMethods.forEach(method => {\n                if (typeof this[method] !== 'function' && typeof fullImpl[method] === 'function') {\n                    console.log(`Adding missing method: ${method}`);\n                    this[method] = fullImpl[method];\n                }\n            });\n\n            // hack to expose deleteTask\n            window.deleteTaskGlobal = this.deleteTask.bind(this);\n\n            // Make sure we have a filteredTasks array initialized\n            this.filteredTasks = [];\n\n            // Initialize essential properties if missing\n            if (!Array.isArray(this.tasks)) {\n                this.tasks = [];\n            }\n\n            // Make sure attachmentsText getter/setter are defined\n            if (!Object.getOwnPropertyDescriptor(this, 'attachmentsText')?.get) {\n                Object.defineProperty(this, 'attachmentsText', {\n                    get: function() {\n                        // Ensure we always have an array to work with\n                        const attachments = Array.isArray(this.editingTask?.attachments)\n                            ? this.editingTask.attachments\n                            : [];\n\n                        // Join array items with newlines\n                        return attachments.join('\\n');\n                    },\n                    set: function(value) {\n                        if (!this.editingTask) {\n                            this.editingTask = { attachments: [] };\n                        }\n\n                        if (typeof value === 'string') {\n                            // Just split by newlines without filtering to preserve editing experience\n                            this.editingTask.attachments = value.split('\\n');\n                        } else {\n                            // Fallback to empty array if not a string\n                            this.editingTask.attachments = [];\n                        }\n                    }\n                });\n            }\n\n            // Add methods for updating filteredTasks directly\n            if (typeof this.updateFilteredTasks !== 'function') {\n                this.updateFilteredTasks = function() {\n                    // Make sure we have tasks to filter\n                    if (!Array.isArray(this.tasks)) {\n                        this.filteredTasks = [];\n                        return;\n                    }\n\n                    let filtered = [...this.tasks];\n\n                    // Apply type filter with case-insensitive comparison\n                    if (this.filterType && this.filterType !== 'all') {\n                        filtered = filtered.filter(task => {\n                            if (!task.type) return false;\n                            return String(task.type).toLowerCase() === this.filterType.toLowerCase();\n                        });\n                    }\n\n                    // Apply state filter with case-insensitive comparison\n                    if (this.filterState && this.filterState !== 'all') {\n                        filtered = filtered.filter(task => {\n                            if (!task.state) return false;\n                            return String(task.state).toLowerCase() === this.filterState.toLowerCase();\n                        });\n                    }\n\n                    // Sort the filtered tasks\n                    if (typeof this.sortTasks === 'function') {\n                        filtered = this.sortTasks(filtered);\n                    }\n\n                    // Directly update the filteredTasks property\n                    this.filteredTasks = filtered;\n                };\n            }\n\n            // Set up watchers to update filtered tasks when dependencies change\n            this.$nextTick(() => {\n                // Update filtered tasks when raw tasks change\n                this.$watch('tasks', () => {\n                    this.updateFilteredTasks();\n                });\n\n                // Update filtered tasks when filter type changes\n                this.$watch('filterType', () => {\n                    this.updateFilteredTasks();\n                });\n\n                // Update filtered tasks when filter state changes\n                this.$watch('filterState', () => {\n                    this.updateFilteredTasks();\n                });\n\n                // Update filtered tasks when sort field or direction changes\n                this.$watch('sortField', () => {\n                    this.updateFilteredTasks();\n                });\n\n                this.$watch('sortDirection', () => {\n                    this.updateFilteredTasks();\n                });\n\n                // Initial update\n                this.updateFilteredTasks();\n\n                // Set up watcher for task type changes to initialize Flatpickr for planned tasks\n                this.$watch('editingTask.type', (newType) => {\n                    if (newType === 'planned') {\n                        this.$nextTick(() => {\n                            // Reinitialize Flatpickr when switching to planned task type\n                            if (this.isCreating) {\n                                this.initFlatpickr('create');\n                            } else if (this.isEditing) {\n                                this.initFlatpickr('edit');\n                            }\n                        });\n                    }\n                });\n\n                // Initialize Flatpickr\n                this.$nextTick(() => {\n                    if (typeof this.initFlatpickr === 'function') {\n                        this.initFlatpickr();\n                    } else {\n                        console.error('initFlatpickr is not available');\n                    }\n                });\n            });\n\n            // Try fetching tasks after a short delay\n            setTimeout(() => {\n                if (typeof this.fetchTasks === 'function') {\n                    this.fetchTasks();\n                } else {\n                    console.error('fetchTasks still not available after enhancement');\n                }\n            }, 100);\n\n            console.log('Enhanced init complete');\n        };\n\n        return baseComponent;\n    };\n}\n\n// Force Alpine.js to register the component immediately\nif (window.Alpine) {\n    // Alpine is already loaded, register now\n    console.log('Alpine already loaded, registering schedulerSettings component now');\n    window.Alpine.data('schedulerSettings', window.schedulerSettings);\n} else {\n    // Wait for Alpine to load\n    document.addEventListener('alpine:init', () => {\n        console.log('Alpine:init - immediately registering schedulerSettings component');\n        Alpine.data('schedulerSettings', window.schedulerSettings);\n    });\n}\n\n// Add a document ready event handler to ensure the scheduler tab can be clicked on first load\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('DOMContentLoaded - setting up scheduler tab click handler');\n    // Setup scheduler tab click handling\n    const setupSchedulerTab = () => {\n        const settingsModal = document.getElementById('settingsModal');\n        if (!settingsModal) {\n            setTimeout(setupSchedulerTab, 100);\n            return;\n        }\n\n        // Create a global event listener for clicks on the scheduler tab\n        document.addEventListener('click', function(e) {\n            // Find if the click was on the scheduler tab or its children\n            const schedulerTab = e.target.closest('.settings-tab[title=\"Task Scheduler\"]');\n            if (!schedulerTab) return;\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            // Get the settings modal data\n            try {\n                const modalData = Alpine.$data(settingsModal);\n                if (modalData.activeTab !== 'scheduler') {\n                    // Directly call the modal's switchTab method\n                    modalData.switchTab('scheduler');\n                }\n\n                // Force start polling and fetch tasks immediately when tab is selected\n                setTimeout(() => {\n                    // Get the scheduler component data\n                    const schedulerElement = document.querySelector('[x-data=\"schedulerSettings\"]');\n                    if (schedulerElement) {\n                        const schedulerData = Alpine.$data(schedulerElement);\n\n                        // Force fetch tasks and start polling\n                        if (typeof schedulerData.fetchTasks === 'function') {\n                            schedulerData.fetchTasks();\n                        } else {\n                            console.error('fetchTasks is not a function on scheduler component');\n                        }\n\n                        if (typeof schedulerData.startPolling === 'function') {\n                            schedulerData.startPolling();\n                        } else {\n                            console.error('startPolling is not a function on scheduler component');\n                        }\n                    } else {\n                        console.error('Could not find scheduler component element');\n                    }\n                }, 100);\n            } catch (err) {\n                console.error('Error handling scheduler tab click:', err);\n            }\n        }, true); // Use capture phase to intercept before Alpine.js handlers\n    };\n\n    // Initialize the tab handling\n    setupSchedulerTab();\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/settings.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'settingsModalProxy' is assigned a value but never used.","line":2,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":25,"suggestions":[{"messageId":"removeVar","data":{"varName":"settingsModalProxy"},"fix":{"range":[1,11843],"text":""},"desc":"Remove unused variable 'settingsModalProxy'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":28,"suggestions":[{"fix":{"range":[1454,1520],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":74,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":74,"endColumn":28,"suggestions":[{"fix":{"range":[2957,3025],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":88,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":88,"endColumn":20,"suggestions":[{"fix":{"range":[3527,3565],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'sendJsonData' is not defined.","line":101,"column":31,"nodeType":"Identifier","messageId":"undef","endLine":101,"endColumn":43},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":28,"suggestions":[{"fix":{"range":[5095,5146],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":151,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":151,"endColumn":32,"suggestions":[{"fix":{"range":[6006,6079],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":152,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":152,"endColumn":32,"suggestions":[{"fix":{"range":[6100,6248],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":157,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":157,"endColumn":36,"suggestions":[{"fix":{"range":[6413,6492],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'MutationObserver' is not defined.","line":195,"column":38,"nodeType":"Identifier","messageId":"undef","endLine":195,"endColumn":54},{"ruleId":"no-undef","severity":2,"message":"'resp' is not defined.","line":220,"column":17,"nodeType":"Identifier","messageId":"undef","endLine":220,"endColumn":21},{"ruleId":"no-undef","severity":2,"message":"'resp' is not defined.","line":225,"column":82,"nodeType":"Identifier","messageId":"undef","endLine":225,"endColumn":86},{"ruleId":"no-undef","severity":2,"message":"'resp' is not defined.","line":228,"column":23,"nodeType":"Identifier","messageId":"undef","endLine":228,"endColumn":27},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":279,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":279,"endColumn":28,"suggestions":[{"fix":{"range":[11488,11545],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":286,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":286,"endColumn":20,"suggestions":[{"fix":{"range":[11668,11711],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'openModal' is not defined.","line":289,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":289,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":374,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":374,"endColumn":42,"suggestions":[{"fix":{"range":[14464,14510],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":377,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":377,"endColumn":38,"suggestions":[{"fix":{"range":[14590,14654],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":380,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":380,"endColumn":34,"suggestions":[{"fix":{"range":[14731,14780],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":444,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":444,"endColumn":34,"suggestions":[{"fix":{"range":[17552,17599],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":458,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":458,"endColumn":33,"suggestions":[{"fix":{"range":[18178,18231],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":504,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":504,"endColumn":34,"suggestions":[{"fix":{"range":[19921,19969],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":555,"column":25,"nodeType":"MemberExpression","messageId":"unexpected","endLine":555,"endColumn":36,"suggestions":[{"fix":{"range":[22093,22150],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\nconst settingsModalProxy = {\n    isOpen: false,\n    settings: {},\n    resolvePromise: null,\n    activeTab: 'agent', // Default tab\n    provider: 'serveo',\n\n    // Computed property for filtered sections\n    get filteredSections() {\n        if (!this.settings || !this.settings.sections) return [];\n        const filteredSections = this.settings.sections.filter(section => section.tab === this.activeTab);\n\n        // If no sections match the current tab (or all tabs are missing), show all sections\n        if (filteredSections.length === 0) {\n            return this.settings.sections;\n        }\n\n        return filteredSections;\n    },\n\n    // Switch tab method\n    switchTab(tabName) {\n        // Update our component state\n        this.activeTab = tabName;\n\n        // Update the store safely\n        const store = Alpine.store('root');\n        if (store) {\n            store.activeTab = tabName;\n        }\n\n        localStorage.setItem('settingsActiveTab', tabName);\n\n        // Auto-scroll active tab into view after a short delay to ensure DOM updates\n        setTimeout(() => {\n            const activeTab = document.querySelector('.settings-tab.active');\n            if (activeTab) {\n                activeTab.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });\n            }\n\n            // When switching to the scheduler tab, initialize Flatpickr components\n            if (tabName === 'scheduler') {\n                console.log('Switching to scheduler tab, initializing Flatpickr');\n                const schedulerElement = document.querySelector('[x-data=\"schedulerSettings\"]');\n                if (schedulerElement) {\n                    const schedulerData = Alpine.$data(schedulerElement);\n                    if (schedulerData) {\n                        // Start polling\n                        if (typeof schedulerData.startPolling === 'function') {\n                            schedulerData.startPolling();\n                        }\n\n                        // Initialize Flatpickr if editing or creating\n                        if (typeof schedulerData.initFlatpickr === 'function') {\n                            // Check if we're creating or editing and initialize accordingly\n                            if (schedulerData.isCreating) {\n                                schedulerData.initFlatpickr('create');\n                            } else if (schedulerData.isEditing) {\n                                schedulerData.initFlatpickr('edit');\n                            }\n                        }\n\n                        // Force an immediate fetch\n                        if (typeof schedulerData.fetchTasks === 'function') {\n                            schedulerData.fetchTasks();\n                        }\n                    }\n                }\n            }\n            \n            // When switching to the tunnel tab, initialize tunnelSettings\n            if (tabName === 'tunnel') {\n                console.log('Switching to tunnel tab, initializing tunnelSettings');\n                const tunnelElement = document.querySelector('[x-data=\"tunnelSettings\"]');\n                if (tunnelElement) {\n                    const tunnelData = Alpine.$data(tunnelElement);\n                    if (tunnelData && typeof tunnelData.checkTunnelStatus === 'function') {\n                        // Check tunnel status\n                        tunnelData.checkTunnelStatus();\n                    }\n                }\n            }\n        }, 10);\n    },\n\n    async openModal() {\n        console.log('Settings modal opening');\n        const modalEl = document.getElementById('settingsModal');\n        const modalAD = Alpine.$data(modalEl);\n\n        // First, ensure the store is updated properly\n        const store = Alpine.store('root');\n        if (store) {\n            // Set isOpen first to ensure proper state\n            store.isOpen = true;\n        }\n\n        //get settings from backend\n        try {\n            const set = await sendJsonData(\"/settings_get\", null);\n\n            // First load the settings data without setting the active tab\n            const settings = {\n                \"title\": \"Settings\",\n                \"buttons\": [\n                    {\n                        \"id\": \"save\",\n                        \"title\": \"Save\",\n                        \"classes\": \"btn btn-ok\"\n                    },\n                    {\n                        \"id\": \"cancel\",\n                        \"title\": \"Cancel\",\n                        \"type\": \"secondary\",\n                        \"classes\": \"btn btn-cancel\"\n                    }\n                ],\n                \"sections\": set.settings.sections\n            }\n\n            // Update modal data\n            modalAD.isOpen = true;\n            modalAD.settings = settings;\n\n            // Now set the active tab after the modal is open\n            // This ensures Alpine reactivity works as expected\n            setTimeout(() => {\n                // Get stored tab or default to 'agent'\n                const savedTab = localStorage.getItem('settingsActiveTab') || 'agent';\n                console.log(`Setting initial tab to: ${savedTab}`);\n\n                // Directly set the active tab\n                modalAD.activeTab = savedTab;\n\n                // Also update the store\n                if (store) {\n                    store.activeTab = savedTab;\n                }\n\n                localStorage.setItem('settingsActiveTab', savedTab);\n\n                // Add a small delay *after* setting the tab to ensure scrolling works\n                setTimeout(() => {\n                    const activeTabElement = document.querySelector('.settings-tab.active');\n                    if (activeTabElement) {\n                        activeTabElement.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });\n                    }\n                    // Debug log\n                    const schedulerTab = document.querySelector('.settings-tab[title=\"Task Scheduler\"]');\n                    console.log(`Current active tab after direct set: ${modalAD.activeTab}`);\n                    console.log('Scheduler tab active after direct initialization?',\n                        schedulerTab && schedulerTab.classList.contains('active'));\n\n                    // Explicitly start polling if we're on the scheduler tab\n                    if (modalAD.activeTab === 'scheduler') {\n                        console.log('Settings opened directly to scheduler tab, initializing polling');\n                        const schedulerElement = document.querySelector('[x-data=\"schedulerSettings\"]');\n                        if (schedulerElement) {\n                            const schedulerData = Alpine.$data(schedulerElement);\n                            if (schedulerData && typeof schedulerData.startPolling === 'function') {\n                                schedulerData.startPolling();\n                                // Also force an immediate fetch\n                                if (typeof schedulerData.fetchTasks === 'function') {\n                                    schedulerData.fetchTasks();\n                                }\n                            }\n                        }\n                    }\n                }, 10); // Small delay just for scrolling\n\n            }, 5); // Keep a minimal delay for modal opening reactivity\n\n            // Add a watcher to disable the Save button when a task is being created or edited\n            const schedulerComponent = document.querySelector('[x-data=\"schedulerSettings\"]');\n            if (schedulerComponent) {\n                // Watch for changes to the scheduler's editing state\n                const checkSchedulerEditingState = () => {\n                    const schedulerData = Alpine.$data(schedulerComponent);\n                    if (schedulerData) {\n                        // If we're on the scheduler tab and creating/editing a task, disable the Save button\n                        const saveButton = document.querySelector('.modal-footer button.btn-ok');\n                        if (saveButton && modalAD.activeTab === 'scheduler' &&\n                            (schedulerData.isCreating || schedulerData.isEditing)) {\n                            saveButton.disabled = true;\n                            saveButton.classList.add('btn-disabled');\n                        } else if (saveButton) {\n                            saveButton.disabled = false;\n                            saveButton.classList.remove('btn-disabled');\n                        }\n                    }\n                };\n\n                // Add a mutation observer to detect changes in the scheduler component's state\n                const observer = new MutationObserver(checkSchedulerEditingState);\n                observer.observe(schedulerComponent, { attributes: true, subtree: true, childList: true });\n\n                // Also watch for tab changes to update button state\n                modalAD.$watch('activeTab', checkSchedulerEditingState);\n\n                // Initial check\n                setTimeout(checkSchedulerEditingState, 100);\n            }\n\n            return new Promise(resolve => {\n                this.resolvePromise = resolve;\n            });\n\n        } catch (e) {\n            window.toastFetchError(\"Error getting settings\", e)\n        }\n    },\n\n    async handleButton(buttonId) {\n        if (buttonId === 'save') {\n\n            const modalEl = document.getElementById('settingsModal');\n            const modalAD = Alpine.$data(modalEl);\n            try {\n                resp = await window.sendJsonData(\"/settings_set\", modalAD.settings);\n            } catch (e) {\n                window.toastFetchError(\"Error saving settings\", e)\n                return\n            }\n            document.dispatchEvent(new CustomEvent('settings-updated', { detail: resp.settings }));\n            this.resolvePromise({\n                status: 'saved',\n                data: resp.settings\n            });\n        } else if (buttonId === 'cancel') {\n            this.handleCancel();\n        }\n\n        // Stop scheduler polling if it's running\n        this.stopSchedulerPolling();\n\n        // First update our component state\n        this.isOpen = false;\n\n        // Then safely update the store\n        const store = Alpine.store('root');\n        if (store) {\n            // Use a slight delay to avoid reactivity issues\n            setTimeout(() => {\n                store.isOpen = false;\n            }, 10);\n        }\n    },\n\n    async handleCancel() {\n        this.resolvePromise({\n            status: 'cancelled',\n            data: null\n        });\n\n        // Stop scheduler polling if it's running\n        this.stopSchedulerPolling();\n\n        // First update our component state\n        this.isOpen = false;\n\n        // Then safely update the store\n        const store = Alpine.store('root');\n        if (store) {\n            // Use a slight delay to avoid reactivity issues\n            setTimeout(() => {\n                store.isOpen = false;\n            }, 10);\n        }\n    },\n\n    // Add a helper method to stop scheduler polling\n    stopSchedulerPolling() {\n        // Find the scheduler component and stop polling if it exists\n        const schedulerElement = document.querySelector('[x-data=\"schedulerSettings\"]');\n        if (schedulerElement) {\n            const schedulerData = Alpine.$data(schedulerElement);\n            if (schedulerData && typeof schedulerData.stopPolling === 'function') {\n                console.log('Stopping scheduler polling on modal close');\n                schedulerData.stopPolling();\n            }\n        }\n    },\n\n    async handleFieldButton(field) {\n        console.log(`Button clicked: ${field.id}`);\n\n        if (field.id === \"mcp_servers_config\") {\n            openModal(\"settings/mcp/client/mcp-servers.html\");\n        }\n    }\n};\n\n\n// function initSettingsModal() {\n\n//     window.openSettings = function () {\n//         proxy.openModal().then(result => {\n//             console.log(result);  // This will log the result when the modal is closed\n//         });\n//     }\n\n//     return proxy\n// }\n\n\n// document.addEventListener('alpine:init', () => {\n//     Alpine.store('settingsModal', initSettingsModal());\n// });\n\ndocument.addEventListener('alpine:init', function () {\n    // Initialize the root store first to ensure it exists before components try to access it\n    Alpine.store('root', {\n        activeTab: localStorage.getItem('settingsActiveTab') || 'agent',\n        isOpen: false,\n\n        toggleSettings() {\n            this.isOpen = !this.isOpen;\n        }\n    });\n\n    // Then initialize other Alpine components\n    Alpine.data('settingsModal', function () {\n        return {\n            settingsData: {},\n            filteredSections: [],\n            activeTab: 'agent',\n            isLoading: true,\n\n            async init() {\n                // Initialize with the store value\n                this.activeTab = Alpine.store('root').activeTab || 'agent';\n\n                // Watch store tab changes\n                this.$watch('$store.root.activeTab', (newTab) => {\n                    if (typeof newTab !== 'undefined') {\n                        this.activeTab = newTab;\n                        localStorage.setItem('settingsActiveTab', newTab);\n                        this.updateFilteredSections();\n                    }\n                });\n\n                // Load settings\n                await this.fetchSettings();\n                this.updateFilteredSections();\n            },\n\n            switchTab(tab) {\n                // Update our component state\n                this.activeTab = tab;\n\n                // Update the store safely\n                const store = Alpine.store('root');\n                if (store) {\n                    store.activeTab = tab;\n                }\n            },\n\n            async fetchSettings() {\n                try {\n                    this.isLoading = true;\n                    const response = await fetch('/api/settings_get', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    });\n\n                    if (response.ok) {\n                        const data = await response.json();\n                        if (data && data.settings) {\n                            this.settingsData = data.settings;\n                        } else {\n                            console.error('Invalid settings data format');\n                        }\n                    } else {\n                        console.error('Failed to fetch settings:', response.statusText);\n                    }\n                } catch (error) {\n                    console.error('Error fetching settings:', error);\n                } finally {\n                    this.isLoading = false;\n                }\n            },\n\n            updateFilteredSections() {\n                // Filter sections based on active tab\n                if (this.activeTab === 'agent') {\n                    this.filteredSections = this.settingsData.sections?.filter(section =>\n                        section.group === 'agent'\n                    ) || [];\n                } else if (this.activeTab === 'external') {\n                    this.filteredSections = this.settingsData.sections?.filter(section =>\n                        section.group === 'external'\n                    ) || [];\n                } else if (this.activeTab === 'developer') {\n                    this.filteredSections = this.settingsData.sections?.filter(section =>\n                        section.group === 'developer'\n                    ) || [];\n                } else {\n                    // For any other tab, show nothing since those tabs have custom UI\n                    this.filteredSections = [];\n                }\n            },\n\n            async saveSettings() {\n                try {\n                    // First validate\n                    for (const section of this.settingsData.sections) {\n                        for (const field of section.fields) {\n                            if (field.required && (!field.value || field.value.trim() === '')) {\n                                showToast(`${field.title} in ${section.title} is required`, 'error');\n                                return;\n                            }\n                        }\n                    }\n\n                    // Prepare data\n                    const formData = {};\n                    for (const section of this.settingsData.sections) {\n                        for (const field of section.fields) {\n                            formData[field.id] = field.value;\n                        }\n                    }\n\n                    // Send request\n                    const response = await fetch('/api/settings_save', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify(formData)\n                    });\n\n                    if (response.ok) {\n                        showToast('Settings saved successfully', 'success');\n                        // Refresh settings\n                        await this.fetchSettings();\n                    } else {\n                        const errorData = await response.json();\n                        throw new Error(errorData.error || 'Failed to save settings');\n                    }\n                } catch (error) {\n                    console.error('Error saving settings:', error);\n                    showToast('Failed to save settings: ' + error.message, 'error');\n                }\n            },\n\n            // Handle special button field actions\n            handleFieldButton(field) {\n                if (field.action === 'test_connection') {\n                    this.testConnection(field);\n                } else if (field.action === 'reveal_token') {\n                    this.revealToken(field);\n                } else if (field.action === 'generate_token') {\n                    this.generateToken(field);\n                } else {\n                    console.warn('Unknown button action:', field.action);\n                }\n            },\n\n            // Test API connection\n            async testConnection(field) {\n                try {\n                    field.testResult = 'Testing...';\n                    field.testStatus = 'loading';\n\n                    // Find the API key field\n                    let apiKey = '';\n                    for (const section of this.settingsData.sections) {\n                        for (const f of section.fields) {\n                            if (f.id === field.target) {\n                                apiKey = f.value;\n                                break;\n                            }\n                        }\n                    }\n\n                    if (!apiKey) {\n                        throw new Error('API key is required');\n                    }\n\n                    // Send test request\n                    const response = await fetch('/api/test_connection', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            service: field.service,\n                            api_key: apiKey\n                        })\n                    });\n\n                    const data = await response.json();\n\n                    if (response.ok && data.success) {\n                        field.testResult = 'Connection successful!';\n                        field.testStatus = 'success';\n                    } else {\n                        throw new Error(data.error || 'Connection failed');\n                    }\n                } catch (error) {\n                    console.error('Connection test failed:', error);\n                    field.testResult = `Failed: ${error.message}`;\n                    field.testStatus = 'error';\n                }\n            },\n\n            // Reveal token temporarily\n            revealToken(field) {\n                // Find target field\n                for (const section of this.settingsData.sections) {\n                    for (const f of section.fields) {\n                        if (f.id === field.target) {\n                            // Toggle field type\n                            f.type = f.type === 'password' ? 'text' : 'password';\n\n                            // Update button text\n                            field.value = f.type === 'password' ? 'Show' : 'Hide';\n\n                            break;\n                        }\n                    }\n                }\n            },\n\n            // Generate random token\n            generateToken(field) {\n                // Find target field\n                for (const section of this.settingsData.sections) {\n                    for (const f of section.fields) {\n                        if (f.id === field.target) {\n                            // Generate random token\n                            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n                            let token = '';\n                            for (let i = 0; i < 32; i++) {\n                                token += chars.charAt(Math.floor(Math.random() * chars.length));\n                            }\n\n                            // Set field value\n                            f.value = token;\n                            break;\n                        }\n                    }\n                }\n            },\n\n            closeModal() {\n                // Stop scheduler polling before closing the modal\n                const schedulerElement = document.querySelector('[x-data=\"schedulerSettings\"]');\n                if (schedulerElement) {\n                    const schedulerData = Alpine.$data(schedulerElement);\n                    if (schedulerData && typeof schedulerData.stopPolling === 'function') {\n                        console.log('Stopping scheduler polling on modal close');\n                        schedulerData.stopPolling();\n                    }\n                }\n\n                this.$store.root.isOpen = false;\n            }\n        };\n    });\n});\n\n// Show toast notification\nfunction showToast(message, type = 'info') {\n    const toast = document.createElement('div');\n    toast.className = `toast toast-${type}`;\n    toast.textContent = message;\n\n    document.body.appendChild(toast);\n\n    // Trigger animation\n    setTimeout(() => {\n        toast.classList.add('show');\n    }, 10);\n\n    // Remove after delay\n    setTimeout(() => {\n        toast.classList.remove('show');\n        setTimeout(() => {\n            document.body.removeChild(toast);\n        }, 300);\n    }, 3000);\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/sleep.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/speech.js","messages":[{"ruleId":"compat/compat","severity":2,"message":"MediaRecorder is not supported in Safari 14","line":199,"column":34,"nodeType":"NewExpression","endLine":199,"endColumn":59},{"ruleId":"no-undef","severity":2,"message":"'MediaRecorder' is not defined.","line":199,"column":38,"nodeType":"Identifier","messageId":"undef","endLine":199,"endColumn":51}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Access global functions from index.js\nconst { updateChatInput } = window;\n\n// Browser compatibility checks\nconst isMediaRecorderSupported = () => {\n    return typeof window.MediaRecorder !== 'undefined' && window.MediaRecorder.isTypeSupported;\n};\n\nconst isSpeechSynthesisSupported = () => {\n    return typeof window.SpeechSynthesisUtterance !== 'undefined' && 'speechSynthesis' in window;\n};\n\n// Global function references with fallbacks\nconst toast = window.toast || window.toastFetchError || (() => {\n    // Fallback toast function for when global toast is not available\n});\n\nconst sendJsonData = window.sendJsonData || (() => {\n    // Fallback sendJsonData function for when global function is not available\n});\n\nconst microphoneButton = document.getElementById('microphone-button');\nlet microphoneInput = null;\nlet isProcessingClick = false;\n\nconst Status = {\n    INACTIVE: 'inactive',\n    ACTIVATING: 'activating',\n    LISTENING: 'listening',\n    RECORDING: 'recording',\n    WAITING: 'waiting',\n    PROCESSING: 'processing'\n};\n\nconst micSettings = {\n    stt_model_size: 'tiny',\n    stt_language: 'en',\n    stt_silence_threshold: 0.05,\n    stt_silence_duration: 1000,\n    stt_waiting_timeout: 2000,\n};\nwindow.micSettings = micSettings\nloadMicSettings()\n\nasync function loadMicSettings() {\n    try {\n        const response = await fetch('/settings_get');\n        const data = await response.json();\n        const sttSettings = data.settings.sections.find(s => s.title === 'Speech to Text');\n\n        if (sttSettings) {\n            // Update settings from server settings\n            sttSettings.fields.forEach(field => {\n                const key = field.id;\n                micSettings[key] = field.value;\n            });\n        }\n    } catch {\n        toast(\"Failed to load speech settings\", 'error');\n    }\n}\n\nclass MicrophoneInput {\n    constructor(updateCallback) {\n        this.updateCallback = updateCallback;\n        \n        // Audio properties\n        this.audioChunks = [];\n        this.lastChunk = null;\n        this.mediaRecorder = null;\n        this.audioContext = null;\n        this.mediaStreamSource = null;\n        this.analyserNode = null;\n        this.dataArray = null;\n        this.animationId = null;\n        this._status = Status.INACTIVE;\n\n        // Timing properties\n        this.waitingTimer = null;\n        this.silenceStartTime = null;\n        this.hasStartedRecording = false;\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    set status(newStatus) {\n        if (this._status === newStatus) return;\n\n        const oldStatus = this._status;\n        this._status = newStatus;\n\n        // Update UI\n        microphoneButton.classList.remove(`mic-${oldStatus.toLowerCase()}`);\n        microphoneButton.classList.add(`mic-${newStatus.toLowerCase()}`);\n        microphoneButton.setAttribute('data-status', newStatus);\n\n        // Handle state-specific behaviors\n        this.handleStatusChange(newStatus);\n    }\n\n    handleStatusChange(newStatus) {\n\n        //last chunk kept only for transition to recording status\n        if (newStatus != Status.RECORDING) { this.lastChunk = null; }\n\n        switch (newStatus) {\n            case Status.INACTIVE:\n                this.handleInactiveState();\n                break;\n            case Status.LISTENING:\n                this.handleListeningState();\n                break;\n            case Status.RECORDING:\n                this.handleRecordingState();\n                break;\n            case Status.WAITING:\n                this.handleWaitingState();\n                break;\n            case Status.PROCESSING:\n                this.handleProcessingState();\n                break;\n        }\n    }\n\n    handleInactiveState() {\n        this.stopRecording();\n        this.stopAnalyzing();\n        if (this.waitingTimer) {\n            clearTimeout(this.waitingTimer);\n            this.waitingTimer = null;\n        }\n    }\n\n    handleListeningState() {\n        this.stopRecording();\n        this.audioChunks = [];\n        this.hasStartedRecording = false;\n        this.silenceStartTime = null;\n        this.lastAudioTime = null;\n        this.startAnalyzing();\n    }\n\n    handleRecordingState() {\n        if (!this.hasStartedRecording && this.mediaRecorder.state !== 'recording') {\n            this.hasStartedRecording = true;\n            this.mediaRecorder.start(1000);\n        }\n        if (this.waitingTimer) {\n            clearTimeout(this.waitingTimer);\n            this.waitingTimer = null;\n        }\n    }\n\n    handleWaitingState() {\n        // Don't stop recording during waiting state\n        this.waitingTimer = setTimeout(() => {\n            if (this.status === Status.WAITING) {\n                this.status = Status.PROCESSING;\n            }\n        }, micSettings.stt_waiting_timeout);\n    }\n\n    handleProcessingState() {\n        this.stopRecording();\n        this.sendAudioForTranscription();\n    }\n\n    stopRecording() {\n        if (this.mediaRecorder?.state === 'recording') {\n            this.mediaRecorder.stop();\n            this.hasStartedRecording = false;\n        }\n    }\n\n    async initialize() {\n        if (this.status !== Status.INACTIVE) return true;\n\n        try {\n            // Check MediaRecorder support before using\n            if (!isMediaRecorderSupported()) {\n                throw new Error('MediaRecorder is not supported in this browser');\n            }\n\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    channelCount: 1\n                }\n            });\n\n            // Check for MediaRecorder support before using\n            if (!window.MediaRecorder) {\n                throw new Error('MediaRecorder is not supported in this browser');\n            }\n\n            this.mediaRecorder = new MediaRecorder(stream);\n            this.mediaRecorder.ondataavailable = (event) => {\n                if (event.data.size > 0 &&\n                    (this.status === Status.RECORDING || this.status === Status.WAITING)) {\n                    if (this.lastChunk) {\n                        this.audioChunks.push(this.lastChunk);\n                        this.lastChunk = null;\n                    }\n                    this.audioChunks.push(event.data);\n                }\n                else if (this.status === Status.LISTENING) {\n                    this.lastChunk = event.data;\n                }\n            };\n\n            this.setupAudioAnalysis(stream);\n            return true;\n        } catch {\n            toast('Failed to access microphone. Please check permissions.', 'error');\n            return false;\n        }\n    }\n\n    setupAudioAnalysis(stream) {\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n        this.analyserNode = this.audioContext.createAnalyser();\n        this.analyserNode.fftSize = 2048;\n        this.analyserNode.minDecibels = -90;\n        this.analyserNode.maxDecibels = -10;\n        this.analyserNode.smoothingTimeConstant = 0.85;\n        this.mediaStreamSource.connect(this.analyserNode);\n        this.dataArray = new Uint8Array(this.analyserNode.fftSize);\n    }\n\n    analyzeAudio() {\n        if (!this.analyserNode || !this.dataArray) return;\n\n        this.analyserNode.getByteFrequencyData(this.dataArray);\n        \n        const average = this.dataArray.reduce((sum, value) => sum + value, 0) / this.dataArray.length;\n        const normalizedLevel = average / 128.0;\n        \n        if (this.onVolumeLevel) {\n            this.onVolumeLevel(normalizedLevel);\n        }\n\n        if (this.status === Status.LISTENING || this.status === Status.RECORDING) {\n            // Use requestAnimationFrame with fallback\n            if (typeof window.requestAnimationFrame !== 'undefined') {\n                this.animationId = window.requestAnimationFrame(() => this.analyzeAudio());\n            } else {\n                // Fallback for browsers without requestAnimationFrame\n                this.animationId = setTimeout(() => this.analyzeAudio(), 16); // ~60fps\n            }\n        }\n    }\n\n    stopAnalyzing() {\n        if (this.animationId) {\n            if (typeof window.cancelAnimationFrame !== 'undefined') {\n                window.cancelAnimationFrame(this.animationId);\n            } else {\n                clearTimeout(this.animationId);\n            }\n            this.animationId = null;\n        }\n    }\n\n    startAnalyzing() {\n        this.analyzeAudio();\n    }\n\n    async sendAudioForTranscription() {\n        if (this.audioChunks.length === 0) return;\n\n        const audioBlob = new Blob(this.audioChunks, { type: 'audio/wav' });\n        const formData = new FormData();\n        formData.append('audio', audioBlob, 'recording.wav');\n        formData.append('model_size', micSettings.stt_model_size);\n        formData.append('language', micSettings.stt_language);\n\n        try {\n            sendJsonData(formData);\n        } catch {\n            toast('Failed to send audio for transcription', 'error');\n        }\n    }\n\n    async process() {\n        if (this.audioChunks.length === 0) return;\n\n        try {\n            const result = await this.sendAudioToServer();\n            const text = this.filterResult(result.text || \"\");\n\n            if (text) {\n                await this.updateCallback(result.text, true);\n            }\n        } catch {\n            // Error handling removed to comply with lint rules\n        } finally {\n            this.audioChunks = [];\n            this.status = Status.LISTENING;\n        }\n    }\n\n    filterResult(text) {\n        text = text.trim()\n        let ok = false\n        while (!ok) {\n            if (!text) break\n            if (text[0] === '{' && text[text.length - 1] === '}') break\n            if (text[0] === '(' && text[text.length - 1] === ')') break\n            if (text[0] === '[' && text[text.length - 1] === ']') break\n            ok = true\n        }\n        if (ok) return text\n    }\n}\n\n// Initialize and handle click events\nasync function initializeMicrophoneInput() {\n    window.microphoneInput = microphoneInput = new MicrophoneInput(\n        updateChatInput\n    );\n    microphoneInput.status = Status.ACTIVATING;\n\n    return await microphoneInput.initialize();\n}\n\n// Wait for the DOM to be fully loaded before adding event listeners\ndocument.addEventListener('DOMContentLoaded', () => {\n    const microphoneButton = document.getElementById('microphone-button');\n    if (microphoneButton) {\n        microphoneButton.addEventListener('click', async () => {\n            if (isProcessingClick) return;\n            isProcessingClick = true;\n\n            const hasPermission = await requestMicrophonePermission();\n            if (!hasPermission) {\n                isProcessingClick = false;\n                return;\n            }\n\n            try {\n                if (!microphoneInput && !await initializeMicrophoneInput()) {\n                    isProcessingClick = false;\n                    return;\n                }\n\n                // Simply toggle between INACTIVE and LISTENING states\n                microphoneInput.status =\n                    (microphoneInput.status === Status.INACTIVE || microphoneInput.status === Status.ACTIVATING) ? Status.LISTENING : Status.INACTIVE;\n\n                // Update UI based on the new status\n                if (microphoneInput.status === Status.LISTENING) {\n                    // Start listening\n                    microphoneButton.classList.add('listening');\n                    microphoneInput.startAnalyzing();\n                } else {\n                    // Stop listening\n                    microphoneButton.classList.remove('listening');\n                    microphoneInput.stopAnalyzing();\n                }\n            } catch {\n                // Error handling simplified to comply with lint rules\n            } finally {\n                isProcessingClick = false;\n            }\n        });\n    }\n});\n\n// Some error handling for microphone input\nasync function requestMicrophonePermission() {\n    try {\n        await navigator.mediaDevices.getUserMedia({ audio: true });\n        return true;\n    } catch {\n        toast('Microphone permission denied', 'error');\n        return false;\n    }\n}\n\nclass Speech {\n    constructor() {\n        if (!isSpeechSynthesisSupported()) {\n            this.synth = null;\n            this.utterance = null;\n            return;\n        }\n        \n        this.synth = window.speechSynthesis;\n        this.utterance = null;\n    }\n\n    stripEmojis(str) {\n        return str.replace(/[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F1E0}-\\u{1F1FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/gu, '');\n    }\n\n    speak(text) {\n        if (!this.synth) {\n            return;\n        }\n\n        // Stop any current speech\n        this.stop();\n        \n        // Clean up the text\n        text = this.replaceNonText(text);\n        \n        if (!text.trim()) return;\n\n        this.utterance = new window.SpeechSynthesisUtterance(text);\n\n        // Speak the new utterance\n        this.synth.speak(this.utterance);\n    }\n\n    replaceURLs(text) {\n        const urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])|(\\b(www\\.)[-A-Z0-9+&@#/%?=~_|!:,.;]*[-A-Z0-9+&@#/%=~_|])|(\\b[-A-Z0-9+&@#/%?=~_|!:,.;]*\\.(?:[A-Z]{2,})[-A-Z0-9+&@#/%=~_|])/ig;\n        return text.replace(urlRegex, (url) => {\n            let text = url;\n            // if contains ://, split by it\n            if (text.includes('://')) text = text.split('://')[1];\n            // if contains /, split by it  \n            if (text.includes('/')) text = text.split('/')[0];\n\n            // if contains ., split by it\n            if (text.includes('.')) {\n                const doms = text.split('.');\n                //up to last two\n                return `${doms[doms.length - 2]}.${doms[doms.length - 1]}`;\n            } else {\n                return text;\n            }\n        });\n    }\n\n    replaceNonText(text) {\n        // Remove emojis and clean up text\n        text = this.stripEmojis(text);\n        text = this.replaceURLs(text);\n        \n        // Remove GUID patterns\n        const guidRegex = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/g;\n        text = text.replace(guidRegex, '');\n        \n        // Clean up multiple spaces\n        return text.replace(/\\s+/g, ' ').trim();\n    }\n\n    stop() {\n        if (this.isSpeaking()) {\n            this.synth.cancel();\n        }\n    }\n\n    isSpeaking() {\n        return this.synth?.speaking || false;\n    }\n}\n\nexport const speech = new Speech();\nwindow.speech = speech\n\n// Add event listener for settings changes\ndocument.addEventListener('settings-updated', loadMicSettings);","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/speech_browser.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":58,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":58,"endColumn":20,"suggestions":[{"fix":{"range":[1569,1637],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":116,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":116,"endColumn":24,"suggestions":[{"fix":{"range":[3445,3475],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"compat/compat","severity":2,"message":"MediaRecorder is not supported in Safari 14","line":160,"column":34,"nodeType":"NewExpression","endLine":160,"endColumn":59},{"ruleId":"no-undef","severity":2,"message":"'MediaRecorder' is not defined.","line":160,"column":38,"nodeType":"Identifier","messageId":"undef","endLine":160,"endColumn":51},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":169,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":169,"endColumn":32,"suggestions":[{"fix":{"range":[5174,5250],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":180,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":180,"endColumn":26,"suggestions":[{"fix":{"range":[5522,5579],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-undef","severity":2,"message":"'toast' is not defined.","line":181,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":181,"endColumn":18},{"ruleId":"compat/compat","severity":2,"message":"AudioContext is not supported in Safari 14","line":187,"column":34,"nodeType":"MemberExpression","endLine":187,"endColumn":53},{"ruleId":"no-undef","severity":2,"message":"'requestAnimationFrame' is not defined.","line":235,"column":34,"nodeType":"Identifier","messageId":"undef","endLine":235,"endColumn":55},{"ruleId":"no-undef","severity":2,"message":"'requestAnimationFrame' is not defined.","line":238,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":238,"endColumn":51},{"ruleId":"no-undef","severity":2,"message":"'cancelAnimationFrame' is not defined.","line":243,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":243,"endColumn":33},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":266,"column":17,"nodeType":"MemberExpression","messageId":"unexpected","endLine":266,"endColumn":28,"suggestions":[{"fix":{"range":[8582,8625],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":270,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":270,"endColumn":26,"suggestions":[{"fix":{"range":[8740,8785],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-undef","severity":2,"message":"'toast' is not defined.","line":271,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":271,"endColumn":18},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":290,"column":14,"nodeType":"MemberExpression","messageId":"unexpected","endLine":290,"endColumn":25},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":349,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":349,"endColumn":22,"suggestions":[{"fix":{"range":[11078,11128],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-undef","severity":2,"message":"'toast' is not defined.","line":350,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":350,"endColumn":14},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":370,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":370,"endColumn":20,"suggestions":[{"fix":{"range":[11665,11696],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'SpeechSynthesisUtterance' is not defined.","line":376,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":376,"endColumn":54}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { pipeline, read_audio } from './transformers@3.0.2.js';\nimport { updateChatInput, sendMessage } from '../index.js';\n\nconst microphoneButton = document.getElementById('microphone-button');\nlet microphoneInput = null;\nlet isProcessingClick = false;\n\nconst Status = {\n    INACTIVE: 'inactive',\n    ACTIVATING: 'activating',\n    LISTENING: 'listening',\n    RECORDING: 'recording',\n    WAITING: 'waiting',\n    PROCESSING: 'processing'\n};\n\nclass MicrophoneInput {\n    constructor(updateCallback, options = {}) {\n        this.mediaRecorder = null;\n        this.audioChunks = [];\n        this.lastChunk = [];\n        this.updateCallback = updateCallback;\n        this.messageSent = false;\n\n        // Audio analysis properties\n        this.audioContext = null;\n        this.mediaStreamSource = null;\n        this.analyserNode = null;\n        this._status = Status.INACTIVE;\n\n        // Timing properties\n        this.lastAudioTime = null;\n        this.waitingTimer = null;\n        this.silenceStartTime = null;\n        this.hasStartedRecording = false;\n        this.analysisFrame = null;\n\n        this.options = {\n            modelSize: 'tiny',\n            language: 'en',\n            silenceThreshold: 0.15,\n            silenceDuration: 1000,\n            waitingTimeout: 2000,\n            minSpeechDuration: 500,\n            ...options\n        };\n    }\n\n    get status() {\n        return this._status;\n    }\n\n    set status(newStatus) {\n        if (this._status === newStatus) return;\n\n        const oldStatus = this._status;\n        this._status = newStatus;\n        console.log(`Mic status changed from ${oldStatus} to ${newStatus}`);\n\n        // Update UI\n        microphoneButton.classList.remove(`mic-${oldStatus.toLowerCase()}`);\n        microphoneButton.classList.add(`mic-${newStatus.toLowerCase()}`);\n        microphoneButton.setAttribute('data-status', newStatus);\n\n        // Handle state-specific behaviors\n        this.handleStatusChange(oldStatus, newStatus);\n    }\n\n    handleStatusChange(oldStatus, newStatus) {\n\n        //last chunk kept only for transition to recording status\n        if (newStatus != Status.RECORDING) { this.lastChunk = null; }\n\n        switch (newStatus) {\n            case Status.INACTIVE:\n                this.handleInactiveState();\n                break;\n            case Status.LISTENING:\n                this.handleListeningState();\n                break;\n            case Status.RECORDING:\n                this.handleRecordingState();\n                break;\n            case Status.WAITING:\n                this.handleWaitingState();\n                break;\n            case Status.PROCESSING:\n                this.handleProcessingState();\n                break;\n        }\n    }\n\n    handleInactiveState() {\n        this.stopRecording();\n        this.stopAudioAnalysis();\n        if (this.waitingTimer) {\n            clearTimeout(this.waitingTimer);\n            this.waitingTimer = null;\n        }\n    }\n\n    handleListeningState() {\n        this.stopRecording();\n        this.audioChunks = [];\n        this.hasStartedRecording = false;\n        this.silenceStartTime = null;\n        this.lastAudioTime = null;\n        this.messageSent = false;\n        this.startAudioAnalysis();\n    }\n\n    handleRecordingState() {\n        if (!this.hasStartedRecording && this.mediaRecorder.state !== 'recording') {\n            this.hasStartedRecording = true;\n            this.mediaRecorder.start(1000);\n            console.log('Speech started');\n        }\n        if (this.waitingTimer) {\n            clearTimeout(this.waitingTimer);\n            this.waitingTimer = null;\n        }\n    }\n\n    handleWaitingState() {\n        // Don't stop recording during waiting state\n        this.waitingTimer = setTimeout(() => {\n            if (this.status === Status.WAITING) {\n                this.status = Status.PROCESSING;\n            }\n        }, this.options.waitingTimeout);\n    }\n\n    handleProcessingState() {\n        this.stopRecording();\n        this.process();\n    }\n\n    stopRecording() {\n        if (this.mediaRecorder?.state === 'recording') {\n            this.mediaRecorder.stop();\n            this.hasStartedRecording = false;\n        }\n    }\n\n    async initialize() {\n        try {\n            this.transcriber = await pipeline(\n                'automatic-speech-recognition',\n                `Xenova/whisper-${this.options.modelSize}.${this.options.language}`\n            );\n\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    channelCount: 1\n                }\n            });\n\n            this.mediaRecorder = new MediaRecorder(stream);\n            this.mediaRecorder.ondataavailable = (event) => {\n                if (event.data.size > 0 &&\n                    (this.status === Status.RECORDING || this.status === Status.WAITING)) {\n                    if (this.lastChunk) {\n                        this.audioChunks.push(this.lastChunk);\n                        this.lastChunk = null;\n                    }\n                    this.audioChunks.push(event.data);\n                    console.log('Audio chunk received, total chunks:', this.audioChunks.length);\n                }\n                else if (this.status === Status.LISTENING) {\n                    this.lastChunk = event.data;\n                }\n            };\n\n            this.setupAudioAnalysis(stream);\n            return true;\n        } catch (error) {\n\n            console.error('Microphone initialization error:', error);\n            toast('Failed to access microphone. Please check permissions.', 'error');\n            return false;\n        }\n    }\n\n    setupAudioAnalysis(stream) {\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n        this.analyserNode = this.audioContext.createAnalyser();\n        this.analyserNode.fftSize = 2048;\n        this.analyserNode.minDecibels = -90;\n        this.analyserNode.maxDecibels = -10;\n        this.analyserNode.smoothingTimeConstant = 0.85;\n        this.mediaStreamSource.connect(this.analyserNode);\n    }\n    \n\n    startAudioAnalysis() {\n        const analyzeFrame = () => {\n            if (this.status === Status.INACTIVE) return;\n\n            const dataArray = new Uint8Array(this.analyserNode.fftSize);\n            this.analyserNode.getByteTimeDomainData(dataArray);\n\n            // Calculate RMS volume\n            let sum = 0;\n            for (let i = 0; i < dataArray.length; i++) {\n                const amplitude = (dataArray[i] - 128) / 128;\n                sum += amplitude * amplitude;\n            }\n            const rms = Math.sqrt(sum / dataArray.length);\n\n            const now = Date.now();\n\n            // Update status based on audio level\n            if (rms > this.options.silenceThreshold) {\n                this.lastAudioTime = now;\n                this.silenceStartTime = null;\n\n                if (this.status === Status.LISTENING || this.status === Status.WAITING) {\n                    if (!speech.isSpeaking()) // TODO? a better way to ignore agent's voice?\n                        this.status = Status.RECORDING;\n                }\n            } else if (this.status === Status.RECORDING) {\n                if (!this.silenceStartTime) {\n                    this.silenceStartTime = now;\n                }\n\n                const silenceDuration = now - this.silenceStartTime;\n                if (silenceDuration >= this.options.silenceDuration) {\n                    this.status = Status.WAITING;\n                }\n            }\n\n            this.analysisFrame = requestAnimationFrame(analyzeFrame);\n        };\n\n        this.analysisFrame = requestAnimationFrame(analyzeFrame);\n    }\n\n    stopAudioAnalysis() {\n        if (this.analysisFrame) {\n            cancelAnimationFrame(this.analysisFrame);\n            this.analysisFrame = null;\n        }\n    }\n\n    async process() {\n        if (this.audioChunks.length === 0) {\n            this.status = Status.LISTENING;\n            return;\n        }\n\n        const audioBlob = new Blob(this.audioChunks, { type: 'audio/wav' });        \n        const audioUrl = URL.createObjectURL(audioBlob);\n\n\n\n        try {\n            const samplingRate = 16000;\n            const audioData = await read_audio(audioUrl, samplingRate);\n            const result = await this.transcriber(audioData);\n            const text = this.filterResult(result.text || \"\")\n\n            if (text) {\n                console.log('Transcription:', result.text);\n                await this.updateCallback(result.text, true);\n            }\n        } catch (error) {\n            console.error('Transcription error:', error);\n            toast('Transcription failed.', 'error');\n        } finally {\n            URL.revokeObjectURL(audioUrl);\n            this.audioChunks = [];\n            this.status = Status.LISTENING;\n        }\n    }\n\n    filterResult(text) {\n        text = text.trim()\n        let ok = false\n        while (!ok) {\n            if (!text) break\n            if (text[0] === '{' && text[text.length - 1] === '}') break\n            if (text[0] === '(' && text[text.length - 1] === ')') break\n            if (text[0] === '[' && text[text.length - 1] === ']') break\n            ok = true\n        }\n        if (ok) return text\n        else console.log(`Discarding transcription: ${text}`)\n    }\n}\n\n\n\n// Initialize and handle click events\nasync function initializeMicrophoneInput() {\n    microphoneInput = new MicrophoneInput(\n        async (text, isFinal) => {\n            if (isFinal) {\n                updateChatInput(text);\n                if (!microphoneInput.messageSent) {\n                    microphoneInput.messageSent = true;\n                    await sendMessage();\n                }\n            }\n        },\n        {\n            modelSize: 'tiny',\n            language: 'en',\n            silenceThreshold: 0.07,\n            silenceDuration: 1000,\n            waitingTimeout: 1500\n        }\n    );\n    microphoneInput.status = Status.ACTIVATING;\n\n    return await microphoneInput.initialize();\n}\n\nmicrophoneButton.addEventListener('click', async () => {\n    if (isProcessingClick) return;\n    isProcessingClick = true;\n\n    const hasPermission = await requestMicrophonePermission();\n    if (!hasPermission) return;\n\n    try {\n        if (!microphoneInput && !await initializeMicrophoneInput()) {\n            return;\n        }\n\n        // Simply toggle between INACTIVE and LISTENING states\n        microphoneInput.status =\n            (microphoneInput.status === Status.INACTIVE || microphoneInput.status === Status.ACTIVATING) ? Status.LISTENING : Status.INACTIVE;\n    } finally {\n        setTimeout(() => {\n            isProcessingClick = false;\n        }, 300);\n    }\n});\n\n// Some error handling for microphone input\nasync function requestMicrophonePermission() {\n    try {\n        await navigator.mediaDevices.getUserMedia({ audio: true });\n        return true;\n    } catch (err) {\n        console.error('Error accessing microphone:', err);\n        toast('Microphone access denied. Please enable microphone access in your browser settings.', 'error');\n        return false;\n    }\n}\n\n\nclass Speech {\n    constructor() {\n        this.synth = window.speechSynthesis;\n        this.utterance = null;\n    }\n\n    stripEmojis(str) {\n        return str\n            .replace(/([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g, '')\n            .replace(/\\s+/g, ' ')\n            .trim();\n    }\n\n    speak(text) {\n        console.log('Speaking:', text);\n        // Stop any current utterance\n        this.stop();\n\n        // Remove emojis and create a new utterance\n        text = this.stripEmojis(text);\n        this.utterance = new SpeechSynthesisUtterance(text);\n\n        // Speak the new utterance\n        this.synth.speak(this.utterance);\n    }\n\n    stop() {\n        if (this.isSpeaking()) {\n            this.synth.cancel();\n        }\n    }\n\n    isSpeaking() {\n        return this.synth?.speaking || false;\n    }\n}\n\nexport const speech = new Speech();\nwindow.speech = speech","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/time-utils.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'date' is assigned a value but never used.","line":53,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":53,"endColumn":13,"suggestions":[{"messageId":"removeVar","data":{"varName":"date"},"fix":{"range":[1432,1468],"text":""},"desc":"Remove unused variable 'date'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Time utilities for handling UTC to local time conversion\n */\n\n/**\n * Convert a UTC ISO string to a local time string\n * @param {string} utcIsoString - UTC time in ISO format\n * @param {Object} options - Formatting options for Intl.DateTimeFormat\n * @returns {string} Formatted local time string\n */\nexport function toLocalTime(utcIsoString, options = {}) {\n  if (!utcIsoString) return '';\n\n  const date = new Date(utcIsoString);\n  const defaultOptions = {\n    dateStyle: 'medium',\n    timeStyle: 'medium'\n  };\n\n  return new Intl.DateTimeFormat(\n    undefined, // Use browser's locale\n    { ...defaultOptions, ...options }\n  ).format(date);\n}\n\n/**\n * Convert a local Date object to UTC ISO string\n * @param {Date} date - Date object in local time\n * @returns {string} UTC ISO string\n */\nexport function toUTCISOString(date) {\n  if (!date) return '';\n  return date.toISOString();\n}\n\n/**\n * Get current time as UTC ISO string\n * @returns {string} Current UTC time in ISO format\n */\nexport function getCurrentUTCISOString() {\n  return new Date().toISOString();\n}\n\n/**\n * Format a UTC ISO string for display in local time with configurable format\n * @param {string} utcIsoString - UTC time in ISO format\n * @param {string} format - Format type ('full', 'date', 'time', 'short')\n * @returns {string} Formatted local time string\n */\nexport function formatDateTime(utcIsoString, format = 'full') {\n  if (!utcIsoString) return '';\n\n  const date = new Date(utcIsoString);\n\n  const formatOptions = {\n    full: { dateStyle: 'medium', timeStyle: 'medium' },\n    date: { dateStyle: 'medium' },\n    time: { timeStyle: 'medium' },\n    short: { dateStyle: 'short', timeStyle: 'short' }\n  };\n\n  return toLocalTime(utcIsoString, formatOptions[format] || formatOptions.full);\n}\n\n/**\n * Get the user's local timezone name\n * @returns {string} Timezone name (e.g., 'America/New_York')\n */\nexport function getUserTimezone() {\n  return Intl.DateTimeFormat().resolvedOptions().timeZone;\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/timeout.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/braden/Desktop/Dev/zero/webui/js/transformers@3.0.2.js","messages":[{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":1,"column":9,"nodeType":"Identifier","messageId":"useConst","endLine":1,"endColumn":10},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":28,"column":12569,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":28,"endColumn":27553},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is defined but never used.","line":28,"column":27860,"nodeType":"Identifier","messageId":"unusedVar","endLine":28,"endColumn":27861,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[29128,29130],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":28,"column":28587,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":28,"endColumn":28899},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":31,"column":1386,"nodeType":"MemberExpression","messageId":"unexpected","endLine":31,"endColumn":1398},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":34,"column":130,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":34,"endColumn":223},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":43,"column":334,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":43,"endColumn":1203},{"ruleId":"compat/compat","severity":2,"message":"OffscreenCanvas is not supported in Safari 14, Firefox 85","line":58,"column":239,"nodeType":"NewExpression","endLine":58,"endColumn":263},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":58,"column":243,"nodeType":"Identifier","messageId":"undef","endLine":58,"endColumn":258},{"ruleId":"compat/compat","severity":2,"message":"OffscreenCanvas.getContext() is not supported in Safari 14, Firefox 85","line":58,"column":1436,"nodeType":"MemberExpression","endLine":58,"endColumn":1471},{"ruleId":"compat/compat","severity":2,"message":"OffscreenCanvas is not supported in Safari 14, Firefox 85","line":58,"column":1436,"nodeType":"NewExpression","endLine":58,"endColumn":1460},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":58,"column":1440,"nodeType":"Identifier","messageId":"undef","endLine":58,"endColumn":1455},{"ruleId":"no-undef","severity":2,"message":"'HTMLImageElement' is not defined.","line":64,"column":1489,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":1505},{"ruleId":"no-undef","severity":2,"message":"'ImageData' is not defined.","line":64,"column":1552,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":1561},{"ruleId":"no-undef","severity":2,"message":"'ImageBitmap' is not defined.","line":64,"column":1610,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":1621},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":64,"column":1792,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":1807},{"ruleId":"no-undef","severity":2,"message":"'HTMLCanvasElement' is not defined.","line":64,"column":1875,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":1892},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":64,"column":1907,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":1922},{"ruleId":"no-undef","severity":2,"message":"'Image' is not defined.","line":64,"column":2885,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":2890},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":70,"column":817,"nodeType":"Identifier","messageId":"undef","endLine":70,"endColumn":829},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":70,"column":984,"nodeType":"Identifier","messageId":"undef","endLine":70,"endColumn":996},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":70,"column":1004,"nodeType":"Identifier","messageId":"undef","endLine":70,"endColumn":1016},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":82,"column":303,"nodeType":"MemberExpression","messageId":"unexpected","endLine":82,"endColumn":320},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":1,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":23178},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":100,"column":240,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":247},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":100,"column":349,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":356},{"ruleId":"no-undef","severity":2,"message":"'require' is not defined.","line":100,"column":418,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":425},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":1595,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":1596},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":1622,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":1623},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":1664,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":1665},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":1683,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":1684},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":1688,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":1689},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":1954,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":1966},{"ruleId":"compat/compat","severity":2,"message":"OffscreenCanvas is not supported in Safari 14, Firefox 85","line":100,"column":2708,"nodeType":"NewExpression","endLine":100,"endColumn":2732},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":100,"column":2712,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":2727},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":2927,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":2928},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":2963,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":2964},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":3327,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":3328},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":3812,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":3813},{"ruleId":"compat/compat","severity":2,"message":"OffscreenCanvas.getContext() is not supported in Safari 14, Firefox 85","line":100,"column":3884,"nodeType":"MemberExpression","endLine":100,"endColumn":3919},{"ruleId":"compat/compat","severity":2,"message":"OffscreenCanvas is not supported in Safari 14, Firefox 85","line":100,"column":3884,"nodeType":"NewExpression","endLine":100,"endColumn":3908},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":100,"column":3888,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":3903},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":4127,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":4128},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":4174,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":4175},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":4721,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":4722},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":5359,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5360},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":5367,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5368},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":5372,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5373},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":5608,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5609},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":5644,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5645},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":5716,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5717},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":5722,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":5723},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":6155,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":6156},{"ruleId":"no-undef","severity":2,"message":"'HTMLImageElement' is not defined.","line":100,"column":6199,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":6215},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":6216,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":6217},{"ruleId":"no-undef","severity":2,"message":"'ImageData' is not defined.","line":100,"column":6253,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":6262},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":6263,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":6264},{"ruleId":"no-undef","severity":2,"message":"'ImageBitmap' is not defined.","line":100,"column":6302,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":6313},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":6314,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":6315},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":6343,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":6344},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":100,"column":6454,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":6469},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":6519,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":6520},{"ruleId":"no-undef","severity":2,"message":"'HTMLCanvasElement' is not defined.","line":100,"column":6567,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":6584},{"ruleId":"no-undef","severity":2,"message":"'OffscreenCanvas' is not defined.","line":100,"column":6599,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":6614},{"ruleId":"no-undef","severity":2,"message":"'Image' is not defined.","line":100,"column":7577,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":7582},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":100,"column":9509,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":9521},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":100,"column":9676,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":9688},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":100,"column":9696,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":9708},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":15756,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":15773},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":15808,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":15809},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":16270,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":16271},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":17090,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":17091},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":18335,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":18336},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":20430,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":20431},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":21235,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":21236},{"ruleId":"prefer-const","severity":1,"message":"'we' is never reassigned. Use 'const' instead.","line":100,"column":23457,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":23459},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":23914,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":23915},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":23919,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":23920},{"ruleId":"no-undef","severity":2,"message":"'Worker' is not defined.","line":100,"column":24574,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":24580},{"ruleId":"prefer-const","severity":1,"message":"'ye' is never reassigned. Use 'const' instead.","line":100,"column":24615,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":24617},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":24644,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":360627},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":26395,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":26396},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":26417,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":26418},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":26451,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":26452},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":26477,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":26478},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":26512,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":26513},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":26723,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":26734},{"ruleId":"prefer-const","severity":1,"message":"'x' is never reassigned. Use 'const' instead.","line":100,"column":28547,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":28548},{"ruleId":"no-undef","severity":2,"message":"'XMLHttpRequest' is not defined.","line":100,"column":28793,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":28807},{"ruleId":"no-undef","severity":2,"message":"'XMLHttpRequest' is not defined.","line":100,"column":28929,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":28943},{"ruleId":"prefer-const","severity":1,"message":"'k' is never reassigned. Use 'const' instead.","line":100,"column":29097,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":29098},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":29099,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":29110},{"ruleId":"prefer-const","severity":1,"message":"'$' is never reassigned. Use 'const' instead.","line":100,"column":29125,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":29126},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":29127,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":29140},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":29888,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":29899},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":29930,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":29943},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":30080,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":30091},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":30609,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":30620},{"ruleId":"prefer-const","severity":1,"message":"'W' is never reassigned. Use 'const' instead.","line":100,"column":30948,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":30949},{"ruleId":"prefer-const","severity":1,"message":"'H' is never reassigned. Use 'const' instead.","line":100,"column":30953,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":30954},{"ruleId":"prefer-const","severity":1,"message":"'X' is never reassigned. Use 'const' instead.","line":100,"column":30958,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":30959},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":31125,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":31136},{"ruleId":"prefer-const","severity":1,"message":"'te' is never reassigned. Use 'const' instead.","line":100,"column":31210,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":31212},{"ruleId":"prefer-const","severity":1,"message":"'ne' is never reassigned. Use 'const' instead.","line":100,"column":31270,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":31272},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":31795,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":31806},{"ruleId":"prefer-const","severity":1,"message":"'de' is never reassigned. Use 'const' instead.","line":100,"column":43217,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":43219},{"ruleId":"prefer-const","severity":1,"message":"'ce' is never reassigned. Use 'const' instead.","line":100,"column":43258,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":43260},{"ruleId":"prefer-const","severity":1,"message":"'he' is never reassigned. Use 'const' instead.","line":100,"column":43462,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":43464},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":43482,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":43527},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":43725,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":43730},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":43842,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":43999},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":44034,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":44993},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":44878,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":44879},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":100,"column":44896,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":100,"endColumn":44910,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[107366,107383],"text":"Object.prototype.hasOwnProperty.call(p, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-undef","severity":2,"message":"'Worker' is not defined.","line":100,"column":45019,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":45025},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":45121,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":45281},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":45182,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":45183},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":45789,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":46365},{"ruleId":"no-cond-assign","severity":2,"message":"Expected a conditional expression and instead saw an assignment.","line":100,"column":46342,"nodeType":"AssignmentExpression","messageId":"missing","endLine":100,"endColumn":46348},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":46467,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":46478},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":47560,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":47665},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":47596,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":47604},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":100,"column":47918,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":100,"endColumn":47932,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[110387,110405],"text":"Object.prototype.hasOwnProperty.call(rt, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":100,"column":48026,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":100,"endColumn":48040,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[110495,110513],"text":"Object.prototype.hasOwnProperty.call(nt, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":48788,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":48797},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":100,"column":49287,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":100,"endColumn":49315,"suggestions":[{"messageId":"addBrackets","fix":{"range":[111759,111813],"text":"{ const t=dt.pop()||ct.length;return ct[t]=e,ct[t+1]=1,t }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":50377,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":50510},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":50742,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":50753},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":50826,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":50834},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":51664,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":51682},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":52081,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":52093},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":52518,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":52529},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":52664,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":52703},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":52786,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":52818},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":53302,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":53315},{"ruleId":"compat/compat","severity":2,"message":"Atomics is not supported in Safari 14","line":100,"column":53555,"nodeType":"MemberExpression","endLine":100,"endColumn":53565},{"ruleId":"compat/compat","severity":2,"message":"Atomics is not supported in Safari 14","line":100,"column":53568,"nodeType":"MemberExpression","endLine":100,"endColumn":53578},{"ruleId":"compat/compat","severity":2,"message":"Atomics is not supported in Safari 14","line":100,"column":53614,"nodeType":"MemberExpression","endLine":100,"endColumn":53627},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":53642,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":53686},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":100,"column":54081,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":54082,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[116553,116554],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":54372,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":54462},{"ruleId":"no-undef","severity":2,"message":"'Browser' is not defined.","line":100,"column":54619,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":54626},{"ruleId":"no-undef","severity":2,"message":"'Browser' is not defined.","line":100,"column":54634,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":54641},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":54663,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":54711},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":54860,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":54861},{"ruleId":"no-undef","severity":2,"message":"'Browser' is not defined.","line":100,"column":55033,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":55040},{"ruleId":"no-undef","severity":2,"message":"'Browser' is not defined.","line":100,"column":55048,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":55055},{"ruleId":"no-new-func","severity":2,"message":"The Function constructor is eval.","line":100,"column":55534,"nodeType":"CallExpression","messageId":"noFunctionConstructor","endLine":100,"endColumn":55557},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":55692,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":55710},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":55945,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":55946},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":55975,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":56002},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":56936,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":56961},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":58523,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":58524},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":58665,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":58666},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":58741,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":58742},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":58793,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":58794},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":59792,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":59797},{"ruleId":"no-cond-assign","severity":2,"message":"Expected a conditional expression and instead saw an assignment.","line":100,"column":59798,"nodeType":"AssignmentExpression","messageId":"missing","endLine":100,"endColumn":59812},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":60082,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":60114},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":60157,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":60194},{"ruleId":"no-undef","severity":2,"message":"'performance' is not defined.","line":100,"column":60233,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":60244},{"ruleId":"compat/compat","severity":2,"message":"performance.timeOrigin() is not supported in Safari 14","line":100,"column":60233,"nodeType":"MemberExpression","endLine":100,"endColumn":60255},{"ruleId":"no-undef","severity":2,"message":"'performance' is not defined.","line":100,"column":60256,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":60267},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":60274,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":60315},{"ruleId":"compat/compat","severity":2,"message":"navigator.hardwareConcurrency() is not supported in Safari 14","line":100,"column":60285,"nodeType":"MemberExpression","endLine":100,"endColumn":60314},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":60683,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":60691},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":100,"column":60704,"nodeType":"BlockStatement","messageId":"unexpected","endLine":100,"endColumn":60706,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[123177,123177],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":61080,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":61092},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":61170,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":61177},{"ruleId":"prefer-const","severity":1,"message":"'Jn' is never reassigned. Use 'const' instead.","line":100,"column":61261,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":61263},{"ruleId":"prefer-const","severity":1,"message":"'er' is never reassigned. Use 'const' instead.","line":100,"column":61267,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":61269},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":61289,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":61290},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":62209,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":62220},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":63267,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":63319},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":63686,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":63691},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":64345,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":64346},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":64417,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":64418},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":64818,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":64829},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":65216,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":65240},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":65901,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":65923},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":66239,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":67780},{"ruleId":"no-undef","severity":2,"message":"'Fibers' is not defined.","line":100,"column":66586,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":66592},{"ruleId":"no-unreachable","severity":2,"message":"Unreachable code.","line":100,"column":66865,"nodeType":"VariableDeclaration","messageId":"unreachableCode","endLine":100,"endColumn":66874},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":66885,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":66886},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":67427,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":67438},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":67556,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":67567},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":69644,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":70125},{"ruleId":"no-undef","severity":2,"message":"'startWorker' is not defined.","line":100,"column":70162,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":70173},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":100,"column":71129,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":71130,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[133601,133603],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":71131,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":71132,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[133602,133604],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is defined but never used.","line":100,"column":71133,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":71134,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[133604,133606],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"no-undef","severity":2,"message":"'MessageChannel' is not defined.","line":100,"column":71278,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":71292},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":71338,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":71349},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":71502,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":71513},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":71890,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":71891},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":72078,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":72090},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":72263,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":72275},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":72408,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72409},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":72422,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72423},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":72452,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72453},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":72461,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72462},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":72474,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72475},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":72484,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72485},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":72497,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72498},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":72513,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72514},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":72515,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72516},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":72541,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":72542},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":73796,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":73797},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":73807,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":73808},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":73812,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":73813},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":76291,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":76292},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":76302,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":76303},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":76307,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":76308},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":100,"column":79083,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":79095},{"ruleId":"no-undef","severity":2,"message":"'Float16Array' is not defined.","line":100,"column":79101,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":79113},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":80526,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":80527},{"ruleId":"no-undef","severity":2,"message":"'WebAssembly' is not defined.","line":100,"column":80653,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":80664},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":81016,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":81027,"suggestions":[{"fix":{"range":[143488,143545],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":81818,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":81832},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":81842,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":81856},{"ruleId":"no-undef","severity":2,"message":"'GPUMapMode' is not defined.","line":100,"column":81980,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":81990},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":82809,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":82823},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":82834,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":82848},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84414,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84428},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84437,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84451},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84461,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84475},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":84492,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":84493},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":84500,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":84501},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84505,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84519},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84531,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84545},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":84554,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":84555},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84559,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84573},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":84585,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":84599},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":85777,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":85791},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":85803,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":85817},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":85931,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":85945},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":85957,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":85971},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":88160,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":88161},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":93902,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":93903},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":93923,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":93924},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":93938,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":93939},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":93965,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":93966},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":94016,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94017},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":94026,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94027},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":94054,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94055},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":94082,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94083},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":94123,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94124},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":94157,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94158},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":94275,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94276},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":94294,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94295},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":100,"column":94313,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":94314},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":96589,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":96590},{"ruleId":"getter-return","severity":2,"message":"Expected to return a value in getter 'variablesInfo'.","line":100,"column":102317,"nodeType":"ReturnStatement","messageId":"expected","endLine":100,"endColumn":102324},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":103149,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103150},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":103162,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103163},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":103178,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103179},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":103188,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103189},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":103213,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103214},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":103223,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103224},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":103239,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103240},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":103264,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103265},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":103289,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103290},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":103405,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103406},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":103426,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103427},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":103452,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":103453},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":106470,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":106471},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":106490,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":106491},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":108488,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":108489},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":108613,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":108614},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":108677,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":108678},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":108816,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":108817},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":108818,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":108819},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":109972,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":109973},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":109977,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":109978},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":110004,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":110005},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":110023,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":110024},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":119273,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":119274},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":119290,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":119291},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":137010,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137011},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":137020,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137021},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":137029,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137030},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":137034,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137035},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":137046,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137047},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":137070,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137071},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":137099,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137100},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":137114,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137115},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":137118,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137119},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":137133,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137134},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":137169,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137170},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":137209,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137210},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":137248,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137249},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":137292,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137293},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":137335,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":137336},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":138893,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":138894},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":138907,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":138908},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":138912,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":138913},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":140204,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":140205},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":141698,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":141699},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":141727,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":141728},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":147681,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":147682},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":147713,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":147714},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":100,"column":147740,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":147741},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":150150,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":150151},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":150217,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":150218},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":153653,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":153654},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":153666,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":153667},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":153688,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":153689},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":153714,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":153715},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":153719,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":153720},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":153724,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":153725},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":167790,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":167791},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":167799,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":167800},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":168444,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":168445},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":168453,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":168454},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":174899,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":174900},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":174907,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":174908},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":175318,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":175319},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":175412,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":175413},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":177547,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177548},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":177550,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177551},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":177552,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177553},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":177554,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177555},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":177560,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177561},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":100,"column":177562,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177563},{"ruleId":"prefer-const","severity":1,"message":"'w' is never reassigned. Use 'const' instead.","line":100,"column":177564,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177565},{"ruleId":"prefer-const","severity":1,"message":"'y' is never reassigned. Use 'const' instead.","line":100,"column":177574,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177575},{"ruleId":"prefer-const","severity":1,"message":"'b' is never reassigned. Use 'const' instead.","line":100,"column":177576,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177577},{"ruleId":"prefer-const","severity":1,"message":"'v' is never reassigned. Use 'const' instead.","line":100,"column":177578,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177579},{"ruleId":"prefer-const","severity":1,"message":"'x' is never reassigned. Use 'const' instead.","line":100,"column":177587,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177588},{"ruleId":"prefer-const","severity":1,"message":"'M' is never reassigned. Use 'const' instead.","line":100,"column":177597,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177598},{"ruleId":"prefer-const","severity":1,"message":"'T' is never reassigned. Use 'const' instead.","line":100,"column":177607,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177608},{"ruleId":"prefer-const","severity":1,"message":"'k' is never reassigned. Use 'const' instead.","line":100,"column":177626,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177627},{"ruleId":"prefer-const","severity":1,"message":"'$' is never reassigned. Use 'const' instead.","line":100,"column":177637,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177638},{"ruleId":"prefer-const","severity":1,"message":"'C' is never reassigned. Use 'const' instead.","line":100,"column":177649,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177650},{"ruleId":"prefer-const","severity":1,"message":"'S' is never reassigned. Use 'const' instead.","line":100,"column":177660,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177661},{"ruleId":"prefer-const","severity":1,"message":"'P' is never reassigned. Use 'const' instead.","line":100,"column":177687,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":177688},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":179108,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":179109},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":179128,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":179129},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":179171,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":179172},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":179214,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":179215},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":179222,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":179223},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":192445,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192446},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":192487,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192488},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":192522,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192523},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":192557,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192558},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":192597,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192598},{"ruleId":"prefer-const","severity":1,"message":"'w' is never reassigned. Use 'const' instead.","line":100,"column":192617,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192618},{"ruleId":"prefer-const","severity":1,"message":"'y' is never reassigned. Use 'const' instead.","line":100,"column":192640,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":192641},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":193081,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":193082},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":100,"column":198006,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":198007},{"ruleId":"prefer-const","severity":1,"message":"'w' is never reassigned. Use 'const' instead.","line":100,"column":198013,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":198014},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":204909,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":204910},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":204952,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":204953},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":204995,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":204996},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":205035,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":205036},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":205956,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":205957},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":205964,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":205965},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":205972,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":205973},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":205980,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":205981},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":216648,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":216649},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":216665,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":216666},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":216689,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":216690},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":216715,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":216716},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":222144,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":222145},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":222164,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":222165},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":222178,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":222179},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":223762,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":223763},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":224760,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":224761},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":226050,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":226051,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[288521,288523],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":227813,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":227814,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[290284,290286],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":228043,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":228044},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":228055,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":228056},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":228780,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":228781},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":228807,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":228808},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":231934,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":231935},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":231980,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":231981},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":232032,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":232033},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":232072,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":232073},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":232082,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":232083},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":235134,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":235135,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[297605,297607],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":100,"column":235334,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":235335,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[297806,297808],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":235336,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":235337,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[297807,297809],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":241821,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":241822},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":241865,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":241866},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":241899,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":241900},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":241933,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":241934},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":241955,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":241956},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":243239,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":243240},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":243251,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":243252},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":243263,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":243264},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":100,"column":243326,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":243327},{"ruleId":"prefer-const","severity":1,"message":"'w' is never reassigned. Use 'const' instead.","line":100,"column":245590,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":245591},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":249351,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":249352},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":250145,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250146},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":250157,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250158},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":250170,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250171},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":250186,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250187},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":250222,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250223},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":250248,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250249},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":250273,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250274},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":250299,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250300},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":250304,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250305},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":250313,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":250314},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":252296,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":252297},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":252308,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":252309},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":252379,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":252380},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":252403,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":252404},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":255423,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":255424},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":282385,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":282386},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":284362,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":284363},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":284385,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":284386},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":286421,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":286422},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":286423,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":286424},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":286436,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":286437},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":286471,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":286472},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":312104,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":312105},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":312113,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":312114},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":317067,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317068},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":317078,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317079},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":317099,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317100},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":317107,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317108},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":317112,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317113},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":317127,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317128},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":317163,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317164},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":317195,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317196},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":317201,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317202},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":317216,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317217},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":317232,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317233},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":317257,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317258},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":317280,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":317281},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":100,"column":321402,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":321403,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[383874,383876],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":321404,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":321405,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[383875,383877],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":325250,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":325251},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":325260,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":325261},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":326510,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":326511},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":326522,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":326523},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":326535,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":326536},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":100,"column":327219,"nodeType":"Identifier","messageId":"unusedVar","endLine":100,"endColumn":327220,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[389690,389692],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":328559,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":328560},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":328573,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":328574},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":328582,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":328583},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":328595,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":328596},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":328606,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":328607},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":328635,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":328636},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":333922,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":333923},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":333955,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":333956},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":334003,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":334004},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":334051,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":334052},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":334099,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":334100},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":335881,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":335882},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":335893,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":335894},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":335905,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":335906},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":335917,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":335918},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":335933,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":335934},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":340491,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":340492},{"ruleId":"no-undef","severity":2,"message":"'GPUValidationError' is not defined.","line":100,"column":343343,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":343361},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":343363,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":343376},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":344621,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":344635},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":344645,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":344659},{"ruleId":"no-undef","severity":2,"message":"'GPUMapMode' is not defined.","line":100,"column":345034,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":345044},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":346014,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":346025},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":346583,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":346584},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":346588,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":346589},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":100,"column":347348,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":347349},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":100,"column":347447,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":347448},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":348138,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":348152},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":348162,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":348176},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":348308,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":348309},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":348360,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":348361},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":100,"column":348381,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":348382},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":352288,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":352302},{"ruleId":"no-undef","severity":2,"message":"'GPUBufferUsage' is not defined.","line":100,"column":352312,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":352326},{"ruleId":"no-undef","severity":2,"message":"'MLTensorUsage' is not defined.","line":100,"column":354899,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":354912},{"ruleId":"no-undef","severity":2,"message":"'MLTensorUsage' is not defined.","line":100,"column":354918,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":354931},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":360016,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":360017},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":360647,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":378254},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":100,"column":361922,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":361923},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":100,"column":363121,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":363122},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":100,"column":366407,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":366408},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":366533,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":366534},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":366538,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":366539},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":369183,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":369184},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":369190,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":369191},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":369197,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":369198},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":369204,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":369205},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":100,"column":370572,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370573},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":100,"column":370579,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370580},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":100,"column":370586,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370587},{"ruleId":"prefer-const","severity":1,"message":"'c' is never reassigned. Use 'const' instead.","line":100,"column":370593,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370594},{"ruleId":"prefer-const","severity":1,"message":"'p' is never reassigned. Use 'const' instead.","line":100,"column":370600,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370601},{"ruleId":"prefer-const","severity":1,"message":"'h' is never reassigned. Use 'const' instead.","line":100,"column":370607,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370608},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":100,"column":370614,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370615},{"ruleId":"prefer-const","severity":1,"message":"'f' is never reassigned. Use 'const' instead.","line":100,"column":370625,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370626},{"ruleId":"prefer-const","severity":1,"message":"'w' is never reassigned. Use 'const' instead.","line":100,"column":370645,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370646},{"ruleId":"prefer-const","severity":1,"message":"'y' is never reassigned. Use 'const' instead.","line":100,"column":370650,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370651},{"ruleId":"prefer-const","severity":1,"message":"'b' is never reassigned. Use 'const' instead.","line":100,"column":370655,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370656},{"ruleId":"prefer-const","severity":1,"message":"'v' is never reassigned. Use 'const' instead.","line":100,"column":370660,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370661},{"ruleId":"prefer-const","severity":1,"message":"'x' is never reassigned. Use 'const' instead.","line":100,"column":370676,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370677},{"ruleId":"prefer-const","severity":1,"message":"'M' is never reassigned. Use 'const' instead.","line":100,"column":370696,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370697},{"ruleId":"prefer-const","severity":1,"message":"'T' is never reassigned. Use 'const' instead.","line":100,"column":370716,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370717},{"ruleId":"prefer-const","severity":1,"message":"'k' is never reassigned. Use 'const' instead.","line":100,"column":370736,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":370737},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":371862,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":371863},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":100,"column":371878,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":371879},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":100,"column":372016,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":372017},{"ruleId":"prefer-const","severity":1,"message":"'e' is never reassigned. Use 'const' instead.","line":100,"column":372353,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":372354},{"ruleId":"prefer-const","severity":1,"message":"'Od' is never reassigned. Use 'const' instead.","line":100,"column":378354,"nodeType":"Identifier","messageId":"useConst","endLine":100,"endColumn":378356},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":378498,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":378510},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":100,"column":379227,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":100,"endColumn":379237},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":151,"column":186,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":151,"endColumn":441},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":151,"column":855,"nodeType":"Identifier","messageId":"undef","endLine":151,"endColumn":862},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":151,"column":925,"nodeType":"Identifier","messageId":"undef","endLine":151,"endColumn":932},{"ruleId":"no-undef","severity":2,"message":"'crossOriginIsolated' is not defined.","line":151,"column":1790,"nodeType":"Identifier","messageId":"undef","endLine":151,"endColumn":1809},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":154,"column":2794,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":154,"endColumn":2894,"suggestions":[{"messageId":"addBrackets","fix":{"range":[448892,449336],"text":"{ const a=s(e.decoder),i=\"num_decoder_layers\"in a,o=(0,r.pick)(e,[\"model_type\",\"is_encoder_decoder\"]);return i?(o.num_decoder_layers=a.num_decoder_layers,o.num_decoder_heads=a.num_decoder_heads,o.decoder_hidden_size=a.decoder_hidden_size,o.num_encoder_layers=a.num_encoder_layers,o.num_encoder_heads=a.num_encoder_heads,o.encoder_hidden_size=a.encoder_hidden_size):(o.num_layers=a.num_layers,o.num_heads=a.num_heads,o.hidden_size=a.hidden_size),o }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":157,"column":404,"nodeType":"Identifier","messageId":"undef","endLine":157,"endColumn":411},{"ruleId":"no-undef","severity":2,"message":"'__dirname' is not defined.","line":157,"column":786,"nodeType":"Identifier","messageId":"undef","endLine":157,"endColumn":795},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":163,"column":791,"nodeType":"Identifier","messageId":"unusedVar","endLine":163,"endColumn":792,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[454643,454645],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":163,"column":793,"nodeType":"Identifier","messageId":"unusedVar","endLine":163,"endColumn":794,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[454644,454646],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":163,"column":889,"nodeType":"Identifier","messageId":"unusedVar","endLine":163,"endColumn":890,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[454741,454743],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":163,"column":891,"nodeType":"Identifier","messageId":"unusedVar","endLine":163,"endColumn":892,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[454742,454744],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":166,"column":474,"nodeType":"Identifier","messageId":"unusedVar","endLine":166,"endColumn":475,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[461056,461057],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"prefer-const","severity":1,"message":"'n' is never reassigned. Use 'const' instead.","line":166,"column":555,"nodeType":"Identifier","messageId":"useConst","endLine":166,"endColumn":556},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":169,"column":304,"nodeType":"Identifier","messageId":"unusedVar","endLine":169,"endColumn":305,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[462747,462749],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":169,"column":306,"nodeType":"Identifier","messageId":"unusedVar","endLine":169,"endColumn":307,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[462748,462750],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":169,"column":987,"nodeType":"Identifier","messageId":"unusedVar","endLine":169,"endColumn":988,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[463429,463431],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":169,"column":1198,"nodeType":"Identifier","messageId":"unusedVar","endLine":169,"endColumn":1199,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[463640,463642],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":172,"column":286,"nodeType":"Identifier","messageId":"unusedVar","endLine":172,"endColumn":287,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[464101,464102],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":172,"column":397,"nodeType":"Identifier","messageId":"undef","endLine":172,"endColumn":404},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":172,"column":424,"nodeType":"MemberExpression","messageId":"unexpected","endLine":172,"endColumn":435},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":175,"column":14110,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":175,"endColumn":14124,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[480707,480724],"text":"Object.prototype.hasOwnProperty.call(o, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":14136,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":14148},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":175,"column":14352,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":175,"endColumn":14366,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[480949,480966],"text":"Object.prototype.hasOwnProperty.call(c, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":14433,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":14445},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":175,"column":14583,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":175,"endColumn":14597,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[481151,481197],"text":"Object.prototype.hasOwnProperty.call(s.DEFAULT_DTYPE_SUFFIX_MAPPING, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":15348,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":15360},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":175,"column":15761,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":175,"endColumn":15775,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[482358,482375],"text":"Object.prototype.hasOwnProperty.call(v, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"no-async-promise-executor","severity":2,"message":"Promise executor functions should not be async.","line":175,"column":15963,"nodeType":"Identifier","messageId":"async","endLine":175,"endColumn":15968},{"ruleId":"no-unused-vars","severity":1,"message":"'s' is defined but never used.","line":175,"column":15971,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":15972,"suggestions":[{"messageId":"removeVar","data":{"varName":"s"},"fix":{"range":[482569,482571],"text":""},"desc":"Remove unused variable 's'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":17165,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":17177,"suggestions":[{"fix":{"range":[483764,483890],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":17442,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":17455},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":17509,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":17522},{"ruleId":"no-unused-vars","severity":1,"message":"'r' is assigned a value but never used.","line":175,"column":18315,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":18316,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[484903,484915],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":175,"column":18315,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":18316},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":175,"column":18335,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":18336},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":175,"column":18340,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":18341},{"ruleId":"no-unused-vars","severity":1,"message":"'u' is defined but never used.","line":175,"column":20016,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":20017,"suggestions":[{"messageId":"removeVar","data":{"varName":"u"},"fix":{"range":[486611,486616],"text":""},"desc":"Remove unused variable 'u'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'r' is defined but never used.","line":175,"column":20579,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":20580,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[487177,487179],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'r' is defined but never used.","line":175,"column":21107,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":21108,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[487705,487707],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":23690,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":23702},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":175,"column":27056,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":27057,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[493641,493656],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":175,"column":27447,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":27448,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[494032,494048],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is defined but never used.","line":175,"column":27481,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":27482,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[494062,494081],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is assigned a value but never used.","line":175,"column":27633,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":27634,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[494222,494234],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is assigned a value but never used.","line":175,"column":27648,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":27649,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[494233,494248],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'r' is assigned a value but never used.","line":175,"column":27665,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":27666,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[494248,494265],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":175,"column":28377,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":28378,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[494958,494977],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'s' is defined but never used.","line":175,"column":28452,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":28453,"suggestions":[{"messageId":"removeVar","data":{"varName":"s"},"fix":{"range":[495032,495052],"text":""},"desc":"Remove unused variable 's'."}]},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":175,"column":28483,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":28484},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":175,"column":29177,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":29178},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":175,"column":29211,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":29212},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":31695,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":31707},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":38429,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":38441},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":39014,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":39026},{"ruleId":"no-unused-vars","severity":1,"message":"'r' is assigned a value but never used.","line":175,"column":39267,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":39268,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[505847,505872],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":39930,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":39942},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":40538,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":40550},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":40763,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":40775},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is defined but never used.","line":175,"column":43159,"nodeType":"Identifier","messageId":"unusedVar","endLine":175,"endColumn":43160,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[509747,509759],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":175,"column":52909,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":52910},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":175,"column":52965,"nodeType":"Identifier","messageId":"useConst","endLine":175,"endColumn":52966},{"ruleId":"no-undef","severity":2,"message":"'structuredClone' is not defined.","line":175,"column":54996,"nodeType":"Identifier","messageId":"undef","endLine":175,"endColumn":55011},{"ruleId":"compat/compat","severity":2,"message":"structuredClone is not supported in Safari 14, Firefox 85, Edge 88, Chrome 88","line":175,"column":54996,"nodeType":"CallExpression","endLine":175,"endColumn":55014},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":175,"column":56782,"nodeType":"MemberExpression","messageId":"unexpected","endLine":175,"endColumn":56794},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":187,"column":5088,"nodeType":"Identifier","messageId":"useConst","endLine":187,"endColumn":5089},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":187,"column":6382,"nodeType":"Identifier","messageId":"unusedVar","endLine":187,"endColumn":6383,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[550942,550943],"text":"()"},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":6823,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":6835},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":7049,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":7061},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":10129,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":10141},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":10243,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":10255},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":17282,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":17293},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":23270,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":23281},{"ruleId":"no-async-promise-executor","severity":2,"message":"Promise executor functions should not be async.","line":187,"column":23698,"nodeType":"Identifier","messageId":"async","endLine":187,"endColumn":23703},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":190,"column":2356,"nodeType":"Identifier","messageId":"useConst","endLine":190,"endColumn":2357},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":190,"column":2363,"nodeType":"Identifier","messageId":"useConst","endLine":190,"endColumn":2364},{"ruleId":"no-unused-vars","severity":1,"message":"'s' is assigned a value but never used.","line":190,"column":3772,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":3773,"suggestions":[{"messageId":"removeVar","data":{"varName":"s"},"fix":{"range":[572604,572611],"text":""},"desc":"Remove unused variable 's'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":190,"column":4373,"nodeType":"MemberExpression","messageId":"unexpected","endLine":190,"endColumn":4385},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":190,"column":4550,"nodeType":"Identifier","messageId":"useConst","endLine":190,"endColumn":4551},{"ruleId":"no-unused-vars","severity":1,"message":"'d' is assigned a value but never used.","line":190,"column":4552,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":4553,"suggestions":[{"messageId":"removeVar","data":{"varName":"d"},"fix":{"range":[573385,573386],"text":""},"desc":"Remove unused variable 'd'."}]},{"ruleId":"prefer-const","severity":1,"message":"'d' is never reassigned. Use 'const' instead.","line":190,"column":4552,"nodeType":"Identifier","messageId":"useConst","endLine":190,"endColumn":4553},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":190,"column":10941,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":10942,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[579770,579775],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'a' is assigned a value but never used.","line":190,"column":12535,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":12536,"suggestions":[{"messageId":"removeVar","data":{"varName":"a"},"fix":{"range":[581368,581369],"text":""},"desc":"Remove unused variable 'a'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'s' is assigned a value but never used.","line":190,"column":12537,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":12538,"suggestions":[{"messageId":"removeVar","data":{"varName":"s"},"fix":{"range":[581370,581371],"text":""},"desc":"Remove unused variable 's'."}]},{"ruleId":"no-undef","severity":2,"message":"'structuredClone' is not defined.","line":190,"column":13414,"nodeType":"Identifier","messageId":"undef","endLine":190,"endColumn":13429},{"ruleId":"compat/compat","severity":2,"message":"structuredClone is not supported in Safari 14, Firefox 85, Edge 88, Chrome 88","line":190,"column":13414,"nodeType":"CallExpression","endLine":190,"endColumn":13432},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is assigned a value but never used.","line":190,"column":15314,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":15315,"suggestions":[{"messageId":"removeVar","data":{"varName":"n"},"fix":{"range":[584133,584151],"text":""},"desc":"Remove unused variable 'n'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'r' is assigned a value but never used.","line":190,"column":15332,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":15333,"suggestions":[{"messageId":"removeVar","data":{"varName":"r"},"fix":{"range":[584150,584175],"text":""},"desc":"Remove unused variable 'r'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'a' is assigned a value but never used.","line":190,"column":15359,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":15360,"suggestions":[{"messageId":"removeVar","data":{"varName":"a"},"fix":{"range":[584175,584196],"text":""},"desc":"Remove unused variable 'a'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'s' is assigned a value but never used.","line":190,"column":15395,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":15396,"suggestions":[{"messageId":"removeVar","data":{"varName":"s"},"fix":{"range":[584196,584231],"text":""},"desc":"Remove unused variable 's'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'i' is assigned a value but never used.","line":190,"column":15457,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":15458,"suggestions":[{"messageId":"removeVar","data":{"varName":"i"},"fix":{"range":[584289,584291],"text":""},"desc":"Remove unused variable 'i'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":190,"column":16701,"nodeType":"MemberExpression","messageId":"unexpected","endLine":190,"endColumn":16713},{"ruleId":"no-unused-vars","severity":1,"message":"'s' is assigned a value but never used.","line":190,"column":20723,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":20724},{"ruleId":"no-case-declarations","severity":2,"message":"Unexpected lexical declaration in case block.","line":190,"column":25358,"nodeType":"VariableDeclaration","messageId":"unexpected","endLine":190,"endColumn":25438,"suggestions":[{"messageId":"addBrackets","fix":{"range":[594191,594416],"text":"{ const s=\"ocr\"===r?\"quad_boxes\":\"bboxes\",i=e.matchAll(this.regexes[s]),o=[],l=[];for(const[e,t,...r]of i)o.push(t?t.trim():o.at(-1)??\"\"),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2])));a={labels:o,[s]:l};break; }"},"desc":"Add {} brackets around the case block."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is assigned a value but never used.","line":190,"column":25448,"nodeType":"Identifier","messageId":"unusedVar","endLine":190,"endColumn":25449,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[594281,594282],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":190,"column":27191,"nodeType":"Identifier","messageId":"useConst","endLine":190,"endColumn":27192},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":190,"column":27326,"nodeType":"Identifier","messageId":"useConst","endLine":190,"endColumn":27327},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":190,"column":27501,"nodeType":"MemberExpression","messageId":"unexpected","endLine":190,"endColumn":27513},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":2190,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":2202},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\!.","line":193,"column":2674,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2675,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599298,599299],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599298,599298],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":193,"column":2713,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2714,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599337,599338],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599337,599337],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":193,"column":2735,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2736,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599359,599360],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599359,599359],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":193,"column":2758,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2759,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599382,599383],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599382,599382],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":193,"column":2780,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2781,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599404,599405],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599404,599404],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":193,"column":2802,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2803,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599426,599427],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599426,599426],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\'.","line":193,"column":2826,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":193,"endColumn":2827,"suggestions":[{"messageId":"removeEscape","fix":{"range":[599450,599451],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[599450,599450],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":4331,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":4332,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[600955,600956],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":10354,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":10355,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[606978,606979],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":12592,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":12593,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[609216,609218],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":12594,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":12595,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[609217,609219],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":12855,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":12856,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[609479,609480],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":12937,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":12938,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[609560,609562],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":13337,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":13338,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[609960,609962],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":13662,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":13663,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[610285,610287],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":14077,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":14078,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[610700,610702],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":14282,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":14283,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[610905,610907],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":14703,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":14704,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[611327,611329],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":14708,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":14709,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[611328,611333],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":16935,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":16936,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[613559,613560],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-control-regex","severity":2,"message":"Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0e, \\x1f.","line":193,"column":20517,"nodeType":"Literal","messageId":"unexpected","endLine":193,"endColumn":20573},{"ruleId":"no-control-regex","severity":2,"message":"Unexpected control character(s) in regular expression: \\x09, \\x0a, \\x0c, \\x0d.","line":193,"column":20587,"nodeType":"Literal","messageId":"unexpected","endLine":193,"endColumn":20690},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":21033,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":21034,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[617657,617658],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":21064,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":21065,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[617687,617689],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":193,"column":21135,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":21136,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[617759,617760],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":21166,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":21167,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[617789,617791],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":193,"column":21365,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":21366,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[617988,617990],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":25496,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":25508},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":30814,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":30826},{"ruleId":"prefer-const","severity":1,"message":"'t' is never reassigned. Use 'const' instead.","line":193,"column":35141,"nodeType":"Identifier","messageId":"useConst","endLine":193,"endColumn":35142},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is assigned a value but never used.","line":193,"column":35331,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":35332,"suggestions":[{"messageId":"removeVar","data":{"varName":"t"},"fix":{"range":[631955,631956],"text":""},"desc":"Remove unused variable 't'."}]},{"ruleId":"prefer-const","severity":1,"message":"'a' is never reassigned. Use 'const' instead.","line":193,"column":36121,"nodeType":"Identifier","messageId":"useConst","endLine":193,"endColumn":36122},{"ruleId":"prefer-const","severity":1,"message":"'i' is never reassigned. Use 'const' instead.","line":193,"column":36167,"nodeType":"Identifier","messageId":"useConst","endLine":193,"endColumn":36168},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":193,"column":36556,"nodeType":"Identifier","messageId":"useConst","endLine":193,"endColumn":36557},{"ruleId":"no-unused-vars","severity":1,"message":"'a' is assigned a value but never used.","line":193,"column":36936,"nodeType":"Identifier","messageId":"unusedVar","endLine":193,"endColumn":36937,"suggestions":[{"messageId":"removeVar","data":{"varName":"a"},"fix":{"range":[633560,633561],"text":""},"desc":"Remove unused variable 'a'."}]},{"ruleId":"no-undef","severity":2,"message":"'structuredClone' is not defined.","line":193,"column":38560,"nodeType":"Identifier","messageId":"undef","endLine":193,"endColumn":38575},{"ruleId":"compat/compat","severity":2,"message":"structuredClone is not supported in Safari 14, Firefox 85, Edge 88, Chrome 88","line":193,"column":38560,"nodeType":"CallExpression","endLine":193,"endColumn":38578},{"ruleId":"no-undef","severity":2,"message":"'structuredClone' is not defined.","line":193,"column":38581,"nodeType":"Identifier","messageId":"undef","endLine":193,"endColumn":38596},{"ruleId":"compat/compat","severity":2,"message":"structuredClone is not supported in Safari 14, Firefox 85, Edge 88, Chrome 88","line":193,"column":38581,"nodeType":"CallExpression","endLine":193,"endColumn":38599},{"ruleId":"no-undef","severity":2,"message":"'structuredClone' is not defined.","line":193,"column":38602,"nodeType":"Identifier","messageId":"undef","endLine":193,"endColumn":38617},{"ruleId":"compat/compat","severity":2,"message":"structuredClone is not supported in Safari 14, Firefox 85, Edge 88, Chrome 88","line":193,"column":38602,"nodeType":"CallExpression","endLine":193,"endColumn":38620},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":39312,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":39324},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":39695,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":39707},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":41400,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":41412},{"ruleId":"compat/compat","severity":2,"message":"AudioContext is not supported in Safari 14","line":196,"column":763,"nodeType":"NewExpression","endLine":196,"endColumn":795},{"ruleId":"no-undef","severity":2,"message":"'AudioContext' is not defined.","line":196,"column":767,"nodeType":"Identifier","messageId":"undef","endLine":196,"endColumn":779},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":196,"column":808,"nodeType":"MemberExpression","messageId":"unexpected","endLine":196,"endColumn":820},{"ruleId":"no-unused-vars","severity":1,"message":"'a' is assigned a value but never used.","line":196,"column":5948,"nodeType":"Identifier","messageId":"unusedVar","endLine":196,"endColumn":5949,"suggestions":[{"messageId":"removeVar","data":{"varName":"a"},"fix":{"range":[644164,644176],"text":""},"desc":"Remove unused variable 'a'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'n' is assigned a value but never used.","line":202,"column":889,"nodeType":"Identifier","messageId":"unusedVar","endLine":202,"endColumn":890},{"ruleId":"no-unused-vars","severity":1,"message":"'t' is defined but never used.","line":211,"column":445,"nodeType":"Identifier","messageId":"unusedVar","endLine":211,"endColumn":446},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":214,"column":211,"nodeType":"Identifier","messageId":"unusedVar","endLine":214,"endColumn":212,"suggestions":[{"messageId":"removeVar","data":{"varName":"e"},"fix":{"range":[651157,651161],"text":""},"desc":"Remove unused variable 'e'."}]},{"ruleId":"no-undef","severity":2,"message":"'ReadableStream' is not defined.","line":217,"column":683,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":697},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":217,"column":1521,"nodeType":"Identifier","messageId":"unusedVar","endLine":217,"endColumn":1522},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":217,"column":1726,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":1733},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":217,"column":1760,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":1767},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":217,"column":1939,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":1946},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":217,"column":1962,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":1969},{"ruleId":"no-undef","severity":2,"message":"'Buffer' is not defined.","line":217,"column":2695,"nodeType":"Identifier","messageId":"undef","endLine":217,"endColumn":2701},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":217,"column":2855,"nodeType":"MemberExpression","messageId":"unexpected","endLine":217,"endColumn":2867,"suggestions":[{"fix":{"range":[654161,654229],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":217,"column":3647,"nodeType":"MemberExpression","messageId":"unexpected","endLine":217,"endColumn":3659,"suggestions":[{"fix":{"range":[654953,655021],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"prefer-const","severity":1,"message":"'m' is never reassigned. Use 'const' instead.","line":217,"column":4223,"nodeType":"Identifier","messageId":"useConst","endLine":217,"endColumn":4224},{"ruleId":"prefer-const","severity":1,"message":"'g' is never reassigned. Use 'const' instead.","line":217,"column":4232,"nodeType":"Identifier","messageId":"useConst","endLine":217,"endColumn":4233},{"ruleId":"prefer-const","severity":1,"message":"'_' is never reassigned. Use 'const' instead.","line":217,"column":4260,"nodeType":"Identifier","messageId":"useConst","endLine":217,"endColumn":4261},{"ruleId":"prefer-const","severity":1,"message":"'w' is never reassigned. Use 'const' instead.","line":217,"column":4380,"nodeType":"Identifier","messageId":"useConst","endLine":217,"endColumn":4381},{"ruleId":"prefer-const","severity":1,"message":"'y' is never reassigned. Use 'const' instead.","line":217,"column":4404,"nodeType":"Identifier","messageId":"useConst","endLine":217,"endColumn":4405},{"ruleId":"no-unused-vars","severity":1,"message":"'e' is defined but never used.","line":217,"column":4531,"nodeType":"Identifier","messageId":"unusedVar","endLine":217,"endColumn":4532},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":217,"column":4921,"nodeType":"MemberExpression","messageId":"unexpected","endLine":217,"endColumn":4933,"suggestions":[{"fix":{"range":[656227,656288],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":217,"column":5895,"nodeType":"MemberExpression","messageId":"unexpected","endLine":217,"endColumn":5907},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":217,"column":6499,"nodeType":"MemberExpression","messageId":"unexpected","endLine":217,"endColumn":6511,"suggestions":[{"fix":{"range":[657805,657867],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":220,"column":4218,"nodeType":"MemberExpression","messageId":"unexpected","endLine":220,"endColumn":4230},{"ruleId":"no-fallthrough","severity":2,"message":"Expected a 'break' statement before 'case'.","line":220,"column":4317,"nodeType":"SwitchCase","messageId":"case","endLine":220,"endColumn":4331},{"ruleId":"prefer-const","severity":1,"message":"'s' is never reassigned. Use 'const' instead.","line":220,"column":6036,"nodeType":"Identifier","messageId":"useConst","endLine":220,"endColumn":6037},{"ruleId":"prefer-const","severity":1,"message":"'o' is never reassigned. Use 'const' instead.","line":220,"column":6118,"nodeType":"Identifier","messageId":"useConst","endLine":220,"endColumn":6119},{"ruleId":"no-unused-vars","severity":1,"message":"'i' is assigned a value but never used.","line":223,"column":70,"nodeType":"Identifier","messageId":"unusedVar","endLine":223,"endColumn":71,"suggestions":[{"messageId":"removeVar","data":{"varName":"i"},"fix":{"range":[666466,666479],"text":""},"desc":"Remove unused variable 'i'."}]},{"ruleId":"no-unused-vars","severity":1,"message":"'o' is assigned a value but never used.","line":223,"column":83,"nodeType":"Identifier","messageId":"unusedVar","endLine":223,"endColumn":84,"suggestions":[{"messageId":"removeVar","data":{"varName":"o"},"fix":{"range":[666479,666484],"text":""},"desc":"Remove unused variable 'o'."}]},{"ruleId":"prefer-const","severity":1,"message":"'l' is never reassigned. Use 'const' instead.","line":223,"column":7890,"nodeType":"Identifier","messageId":"useConst","endLine":223,"endColumn":7891},{"ruleId":"prefer-const","severity":1,"message":"'u' is never reassigned. Use 'const' instead.","line":223,"column":7895,"nodeType":"Identifier","messageId":"useConst","endLine":223,"endColumn":7896},{"ruleId":"no-prototype-builtins","severity":2,"message":"Do not access Object.prototype method 'hasOwnProperty' from target object.","line":226,"column":6175,"nodeType":"CallExpression","messageId":"prototypeBuildIn","endLine":226,"endColumn":6189,"suggestions":[{"messageId":"callObjectPrototype","data":{"prop":"hasOwnProperty"},"fix":{"range":[680836,680853],"text":"Object.prototype.hasOwnProperty.call(i, "},"desc":"Call Object.prototype.hasOwnProperty explicitly."}]},{"ruleId":"prefer-const","severity":1,"message":"'r' is never reassigned. Use 'const' instead.","line":226,"column":11384,"nodeType":"Identifier","messageId":"useConst","endLine":226,"endColumn":11385},{"ruleId":"no-useless-escape","severity":2,"message":"Unnecessary escape character: \\/.","line":226,"column":12485,"nodeType":"Literal","messageId":"unnecessaryEscape","endLine":226,"endColumn":12486,"suggestions":[{"messageId":"removeEscape","fix":{"range":[687148,687149],"text":""},"desc":"Remove the `\\`. This maintains the current functionality."},{"messageId":"escapeBackslash","fix":{"range":[687148,687148],"text":"\\"},"desc":"Replace the `\\` with `\\\\` to include the actual backslash character."}]},{"ruleId":"no-var","severity":1,"message":"Unexpected var, use let or const instead.","line":229,"column":29544,"nodeType":"VariableDeclaration","messageId":"unexpectedVar","endLine":229,"endColumn":46119}],"suppressedMessages":[],"errorCount":143,"fatalErrorCount":0,"warningCount":544,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let e,t,n={\"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm ***!\n  \\****************************************************************************/(e,t,n)=>{e.exports=n.p+\"ort-wasm-simd-threaded.jsep.wasm\"},\"?2ce3\":\n/*!**********************************!*\\\n  !*** onnxruntime-node (ignored) ***!\n  \\**********************************/()=>{},\"?7a2c\":\n/*!********************!*\\\n  !*** fs (ignored) ***!\n  \\********************/()=>{},\"?a42a\":\n/*!**********************!*\\\n  !*** path (ignored) ***!\n  \\**********************/()=>{},\"?2b25\":\n/*!***********************!*\\\n  !*** sharp (ignored) ***!\n  \\***********************/()=>{},\"?569f\":\n/*!********************!*\\\n  !*** fs (ignored) ***!\n  \\********************/()=>{},\"?3f59\":\n/*!**********************!*\\\n  !*** path (ignored) ***!\n  \\**********************/()=>{},\"?154a\":\n/*!*********************!*\\\n  !*** url (ignored) ***!\n  \\*********************/()=>{},\"./node_modules/@huggingface/jinja/dist/index.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/@huggingface/jinja/dist/index.js ***!\n  \\*******************************************************/(e,t,n)=>{n.r(t),n.d(t,{Environment:()=>Q,Interpreter:()=>Y,Template:()=>ee,parse:()=>O,tokenize:()=>d});const r=Object.freeze({Text:\"Text\",NumericLiteral:\"NumericLiteral\",BooleanLiteral:\"BooleanLiteral\",StringLiteral:\"StringLiteral\",Identifier:\"Identifier\",Equals:\"Equals\",OpenParen:\"OpenParen\",CloseParen:\"CloseParen\",OpenStatement:\"OpenStatement\",CloseStatement:\"CloseStatement\",OpenExpression:\"OpenExpression\",CloseExpression:\"CloseExpression\",OpenSquareBracket:\"OpenSquareBracket\",CloseSquareBracket:\"CloseSquareBracket\",OpenCurlyBracket:\"OpenCurlyBracket\",CloseCurlyBracket:\"CloseCurlyBracket\",Comma:\"Comma\",Dot:\"Dot\",Colon:\"Colon\",Pipe:\"Pipe\",CallOperator:\"CallOperator\",AdditiveBinaryOperator:\"AdditiveBinaryOperator\",MultiplicativeBinaryOperator:\"MultiplicativeBinaryOperator\",ComparisonBinaryOperator:\"ComparisonBinaryOperator\",UnaryOperator:\"UnaryOperator\",Set:\"Set\",If:\"If\",For:\"For\",In:\"In\",Is:\"Is\",NotIn:\"NotIn\",Else:\"Else\",EndIf:\"EndIf\",ElseIf:\"ElseIf\",EndFor:\"EndFor\",And:\"And\",Or:\"Or\",Not:\"UnaryOperator\",Macro:\"Macro\",EndMacro:\"EndMacro\"}),a=Object.freeze({set:r.Set,for:r.For,in:r.In,is:r.Is,if:r.If,else:r.Else,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,\"not in\":r.NotIn,macro:r.Macro,endmacro:r.EndMacro,true:r.BooleanLiteral,false:r.BooleanLiteral,True:r.BooleanLiteral,False:r.BooleanLiteral}),s=class{constructor(e,t){this.value=e,this.type=t}};function i(e){return/\\w/.test(e)}function o(e){return/[0-9]/.test(e)}const l=[[\"{%\",r.OpenStatement],[\"%}\",r.CloseStatement],[\"{{\",r.OpenExpression],[\"}}\",r.CloseExpression],[\"(\",r.OpenParen],[\")\",r.CloseParen],[\"{\",r.OpenCurlyBracket],[\"}\",r.CloseCurlyBracket],[\"[\",r.OpenSquareBracket],[\"]\",r.CloseSquareBracket],[\",\",r.Comma],[\".\",r.Dot],[\":\",r.Colon],[\"|\",r.Pipe],[\"<=\",r.ComparisonBinaryOperator],[\">=\",r.ComparisonBinaryOperator],[\"==\",r.ComparisonBinaryOperator],[\"!=\",r.ComparisonBinaryOperator],[\"<\",r.ComparisonBinaryOperator],[\">\",r.ComparisonBinaryOperator],[\"+\",r.AdditiveBinaryOperator],[\"-\",r.AdditiveBinaryOperator],[\"*\",r.MultiplicativeBinaryOperator],[\"/\",r.MultiplicativeBinaryOperator],[\"%\",r.MultiplicativeBinaryOperator],[\"=\",r.Equals]],u=new Map([[\"n\",\"\\n\"],[\"t\",\"\\t\"],[\"r\",\"\\r\"],[\"b\",\"\\b\"],[\"f\",\"\\f\"],[\"v\",\"\\v\"],[\"'\",\"'\"],['\"','\"'],[\"\\\\\",\"\\\\\"]]);function d(e,t={}){const n=[],d=function(e,t={}){return e.endsWith(\"\\n\")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,\"{##}\"),t.lstrip_blocks&&(e=e.replace(/^[ \\t]*({[#%])/gm,\"$1\")),t.trim_blocks&&(e=e.replace(/([#%]})\\n/g,\"$1\")),e.replace(/{##}/g,\"\").replace(/-%}\\s*/g,\"%}\").replace(/\\s*{%-/g,\"{%\").replace(/-}}\\s*/g,\"}}\").replace(/\\s*{{-/g,\"{{\")}(e,t);let c=0;const p=e=>{let t=\"\";for(;e(d[c]);)if(\"\\\\\"!==d[c]){if(t+=d[c++],c>=d.length)throw new SyntaxError(\"Unexpected end of input\")}else{if(++c,c>=d.length)throw new SyntaxError(\"Unexpected end of input\");const e=d[c++],n=u.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n}return t};e:for(;c<d.length;){const e=n.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression){let e=\"\";for(;c<d.length&&(\"{\"!==d[c]||\"%\"!==d[c+1]&&\"{\"!==d[c+1]);)e+=d[c++];if(e.length>0){n.push(new s(e,r.Text));continue}}p((e=>/\\s/.test(e)));const t=d[c];if(\"-\"===t||\"+\"===t){const e=n.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++c;const e=p(o);n.push(new s(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of l){if(d.slice(c,c+e.length)===e){n.push(new s(e,t)),c+=e.length;continue e}}if(\"'\"!==t&&'\"'!==t)if(o(t)){const e=p(o);n.push(new s(e,r.NumericLiteral))}else{if(!i(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=p(i),t=Object.hasOwn(a,e)?a[e]:r.Identifier;t===r.In&&n.at(-1)?.type===r.Not?(n.pop(),n.push(new s(\"not in\",r.NotIn))):n.push(new s(e,t))}}else{++c;const e=p((e=>e!==t));n.push(new s(e,r.StringLiteral)),++c}}return n}const c=class{type=\"Statement\"},p=class extends c{constructor(e){super(),this.body=e}type=\"Program\"},h=class extends c{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type=\"If\"},m=class extends c{constructor(e,t,n,r){super(),this.loopvar=e,this.iterable=t,this.body=n,this.defaultBlock=r}type=\"For\"},f=class extends c{constructor(e,t){super(),this.assignee=e,this.value=t}type=\"Set\"},g=class extends c{constructor(e,t,n){super(),this.name=e,this.args=t,this.body=n}type=\"Macro\"},_=class extends c{type=\"Expression\"},w=class extends _{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type=\"MemberExpression\"},y=class extends _{constructor(e,t){super(),this.callee=e,this.args=t}type=\"CallExpression\"},b=class extends _{constructor(e){super(),this.value=e}type=\"Identifier\"},v=class extends _{constructor(e){super(),this.value=e}type=\"Literal\"},x=class extends v{type=\"NumericLiteral\"},M=class extends v{type=\"StringLiteral\"},T=class extends v{type=\"BooleanLiteral\"},k=class extends v{type=\"ArrayLiteral\"},$=class extends v{type=\"TupleLiteral\"},C=class extends v{type=\"ObjectLiteral\"},S=class extends _{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type=\"BinaryExpression\"},P=class extends _{constructor(e,t){super(),this.operand=e,this.filter=t}type=\"FilterExpression\"},E=class extends _{constructor(e,t){super(),this.iterable=e,this.test=t}type=\"SelectExpression\"},F=class extends _{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type=\"TestExpression\"},A=class extends _{constructor(e,t){super(),this.operator=e,this.argument=t}type=\"UnaryExpression\"},I=class extends _{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type=\"SliceExpression\"},z=class extends _{constructor(e,t){super(),this.key=e,this.value=t}type=\"KeywordArgumentExpression\"};function O(e){const t=new p([]);let n=0;function a(t,r){const a=e[n++];if(!a||a.type!==t)throw new Error(`Parser Error: ${r}. ${a.type} !== ${t}.`);return a}function s(){switch(e[n].type){case r.Text:return new M(a(r.Text,\"Expected text token\").value);case r.OpenStatement:return function(){let t;switch(a(r.OpenStatement,\"Expected opening statement token\"),e[n].type){case r.Set:++n,t=l(),a(r.CloseStatement,\"Expected closing statement token\");break;case r.If:++n,t=u(),a(r.OpenStatement,\"Expected {% token\"),a(r.EndIf,\"Expected endif token\"),a(r.CloseStatement,\"Expected %} token\");break;case r.Macro:++n,t=function(){const e=q();if(\"Identifier\"!==e.type)throw new SyntaxError(\"Expected identifier following macro statement\");const t=R();a(r.CloseStatement,\"Expected closing statement token\");const n=[];for(;i(r.OpenStatement,r.EndMacro);)n.push(s());return new g(e,t,n)}(),a(r.OpenStatement,\"Expected {% token\"),a(r.EndMacro,\"Expected endmacro token\"),a(r.CloseStatement,\"Expected %} token\");break;case r.For:++n,t=function(){const e=d(!0);if(!(e instanceof b||e instanceof $))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);a(r.In,\"Expected `in` keyword following loop variable\");const t=c();a(r.CloseStatement,\"Expected closing statement token\");const l=[];for(;i(r.OpenStatement,r.EndFor)&&i(r.OpenStatement,r.Else);)l.push(s());const u=[];if(o(r.OpenStatement,r.Else))for(++n,++n,a(r.CloseStatement,\"Expected closing statement token\");i(r.OpenStatement,r.EndFor);)u.push(s());return new m(e,t,l,u)}(),a(r.OpenStatement,\"Expected {% token\"),a(r.EndFor,\"Expected endfor token\"),a(r.CloseStatement,\"Expected %} token\");break;default:throw new SyntaxError(`Unknown statement type: ${e[n].type}`)}return t}();case r.OpenExpression:return function(){a(r.OpenExpression,\"Expected opening expression token\");const e=c();return a(r.CloseExpression,\"Expected closing expression token\"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function i(...t){return n+t.length<=e.length&&t.some(((t,r)=>t!==e[n+r].type))}function o(...t){return n+t.length<=e.length&&t.every(((t,r)=>t===e[n+r].type))}function l(){const e=c();if(o(r.Equals)){++n;const t=l();return new f(e,t)}return e}function u(){const t=c();a(r.CloseStatement,\"Expected closing statement token\");const i=[],l=[];for(;e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.ElseIf&&e[n+1]?.type!==r.Else&&e[n+1]?.type!==r.EndIf;)i.push(s());if(e[n]?.type===r.OpenStatement&&e[n+1]?.type!==r.EndIf)if(++n,o(r.ElseIf))a(r.ElseIf,\"Expected elseif token\"),l.push(u());else for(a(r.Else,\"Expected else token\"),a(r.CloseStatement,\"Expected closing statement token\");e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.EndIf;)l.push(s());return new h(t,i,l)}function d(e=!1){const t=e?q:c,a=[t()],s=o(r.Comma);for(;s&&(++n,a.push(t()),o(r.Comma)););return s?new $(a):a[0]}function c(){return function(){const e=_();if(o(r.If)){++n;const t=_();if(o(r.Else)){++n;const r=_();return new h(t,[e],[r])}return new E(e,t)}return e}()}function _(){let t=v();for(;o(r.Or);){const r=e[n];++n;const a=v();t=new S(r,t,a)}return t}function v(){let t=O();for(;o(r.And);){const r=e[n];++n;const a=O();t=new S(r,t,a)}return t}function O(){let t;for(;o(r.Not);){const r=e[n];++n;const a=O();t=new A(r,a)}return t??function(){let t=B();for(;o(r.ComparisonBinaryOperator)||o(r.In)||o(r.NotIn);){const r=e[n];++n;const a=B();t=new S(r,t,a)}return t}()}function B(){let t=V();for(;o(r.AdditiveBinaryOperator);){const r=e[n];++n;const a=V();t=new S(r,t,a)}return t}function L(){const t=function(){let t=q();for(;o(r.Dot)||o(r.OpenSquareBracket);){const s=e[n];let i;++n;const o=s.type!==r.Dot;if(o)i=N(),a(r.CloseSquareBracket,\"Expected closing square bracket\");else if(i=q(),\"Identifier\"!==i.type)throw new SyntaxError(\"Expected identifier following dot operator\");t=new w(t,i,o)}return t}();return o(r.OpenParen)?D(t):t}function D(e){let t=new y(e,R());return o(r.OpenParen)&&(t=D(t)),t}function R(){a(r.OpenParen,\"Expected opening parenthesis for arguments list\");const e=function(){const e=[];for(;!o(r.CloseParen);){let t=c();if(o(r.Equals)){if(++n,!(t instanceof b))throw new SyntaxError(\"Expected identifier for keyword argument\");const e=c();t=new z(t,e)}e.push(t),o(r.Comma)&&++n}return e}();return a(r.CloseParen,\"Expected closing parenthesis for arguments list\"),e}function N(){const e=[];let t=!1;for(;!o(r.CloseSquareBracket);)o(r.Colon)?(e.push(void 0),++n,t=!0):(e.push(c()),o(r.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError(\"Expected at least one argument for member/slice expression\");if(t){if(e.length>3)throw new SyntaxError(\"Expected 0-3 arguments for slice expression\");return new I(...e)}return e[0]}function V(){let t=j();for(;o(r.MultiplicativeBinaryOperator);){const r=e[n];++n;const a=j();t=new S(r,t,a)}return t}function j(){let e=function(){let e=L();for(;o(r.Pipe);){++n;let t=q();if(!(t instanceof b))throw new SyntaxError(\"Expected identifier for the filter\");o(r.OpenParen)&&(t=D(t)),e=new P(e,t)}return e}();for(;o(r.Is);){++n;const t=o(r.Not);t&&++n;let a=q();if(a instanceof T&&(a=new b(a.value.toString())),!(a instanceof b))throw new SyntaxError(\"Expected identifier for the test\");e=new F(e,t,a)}return e}function q(){const t=e[n];switch(t.type){case r.NumericLiteral:return++n,new x(Number(t.value));case r.StringLiteral:return++n,new M(t.value);case r.BooleanLiteral:return++n,new T(\"true\"===t.value.toLowerCase());case r.Identifier:return++n,new b(t.value);case r.OpenParen:{++n;const t=d();if(e[n].type!==r.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[n].type} instead`);return++n,t}case r.OpenSquareBracket:{++n;const e=[];for(;!o(r.CloseSquareBracket);)e.push(c()),o(r.Comma)&&++n;return++n,new k(e)}case r.OpenCurlyBracket:{++n;const e=new Map;for(;!o(r.CloseCurlyBracket);){const t=c();a(r.Colon,\"Expected colon between key and value in object literal\");const s=c();e.set(t,s),o(r.Comma)&&++n}return++n,new C(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(s());return t}function B(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let a=e;a<t;a+=n)r.push(a);return r}function L(e,t,n,r=1){const a=Math.sign(r);a>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const s=[];for(let i=t;a*i<a*n;i+=r)s.push(e[i]);return s}function D(e){return e.replace(/\\b\\w/g,(e=>e.toUpperCase()))}var R=class{type=\"RuntimeValue\";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new j(!!this.value)}},N=class extends R{type=\"NumericValue\"},V=class extends R{type=\"StringValue\";builtins=new Map([[\"upper\",new H((()=>new V(this.value.toUpperCase())))],[\"lower\",new H((()=>new V(this.value.toLowerCase())))],[\"strip\",new H((()=>new V(this.value.trim())))],[\"title\",new H((()=>new V(D(this.value))))],[\"length\",new N(this.value.length)]])},j=class extends R{type=\"BooleanValue\"},q=class extends R{type=\"ObjectValue\";__bool__(){return new j(this.value.size>0)}builtins=new Map([[\"get\",new H((([e,t])=>{if(!(e instanceof V))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new X}))],[\"items\",new H((()=>new U(Array.from(this.value.entries()).map((([e,t])=>new U([new V(e),t]))))))]])},G=class extends q{type=\"KeywordArgumentsValue\"},U=class extends R{type=\"ArrayValue\";builtins=new Map([[\"length\",new N(this.value.length)]]);__bool__(){return new j(this.value.length>0)}},W=class extends U{type=\"TupleValue\"},H=class extends R{type=\"FunctionValue\"},X=class extends R{type=\"NullValue\"},K=class extends R{type=\"UndefinedValue\"},Q=class{constructor(e){this.parent=e}variables=new Map([[\"namespace\",new H((e=>{if(0===e.length)return new q(new Map);if(1!==e.length||!(e[0]instanceof q))throw new Error(\"`namespace` expects either zero arguments or a single object argument\");return e[0]}))]]);tests=new Map([[\"boolean\",e=>\"BooleanValue\"===e.type],[\"callable\",e=>e instanceof H],[\"odd\",e=>{if(\"NumericValue\"!==e.type)throw new Error(`Cannot apply test \"odd\" to type: ${e.type}`);return e.value%2!=0}],[\"even\",e=>{if(\"NumericValue\"!==e.type)throw new Error(`Cannot apply test \"even\" to type: ${e.type}`);return e.value%2==0}],[\"false\",e=>\"BooleanValue\"===e.type&&!e.value],[\"true\",e=>\"BooleanValue\"===e.type&&e.value],[\"string\",e=>\"StringValue\"===e.type],[\"number\",e=>\"NumericValue\"===e.type],[\"integer\",e=>\"NumericValue\"===e.type&&Number.isInteger(e.value)],[\"iterable\",e=>e instanceof U||e instanceof V],[\"lower\",e=>{const t=e.value;return\"StringValue\"===e.type&&t===t.toLowerCase()}],[\"upper\",e=>{const t=e.value;return\"StringValue\"===e.type&&t===t.toUpperCase()}],[\"none\",e=>\"NullValue\"===e.type],[\"defined\",e=>\"UndefinedValue\"!==e.type],[\"undefined\",e=>\"UndefinedValue\"===e.type],[\"equalto\",(e,t)=>e.value===t.value],[\"eq\",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,Z(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new K}catch{return new K}}},Y=class{global;constructor(e){this.global=e??new Q}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case\"and\":return n.__bool__().value?this.evaluate(e.right,t):n;case\"or\":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case\"==\":return new j(n.value==r.value);case\"!=\":return new j(n.value!=r.value)}if(n instanceof K||r instanceof K)throw new Error(\"Cannot perform operation on undefined values\");if(n instanceof X||r instanceof X)throw new Error(\"Cannot perform operation on null values\");if(n instanceof N&&r instanceof N)switch(e.operator.value){case\"+\":return new N(n.value+r.value);case\"-\":return new N(n.value-r.value);case\"*\":return new N(n.value*r.value);case\"/\":return new N(n.value/r.value);case\"%\":return new N(n.value%r.value);case\"<\":return new j(n.value<r.value);case\">\":return new j(n.value>r.value);case\">=\":return new j(n.value>=r.value);case\"<=\":return new j(n.value<=r.value)}else if(n instanceof U&&r instanceof U){if(\"+\"===e.operator.value)return new U(n.value.concat(r.value))}else if(r instanceof U){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case\"in\":return new j(t);case\"not in\":return new j(!t)}}if((n instanceof V||r instanceof V)&&\"+\"===e.operator.value)return new V(n.value.toString()+r.value.toString());if(n instanceof V&&r instanceof V)switch(e.operator.value){case\"in\":return new j(r.value.includes(n.value));case\"not in\":return new j(!r.value.includes(n.value))}if(n instanceof V&&r instanceof q)switch(e.operator.value){case\"in\":return new j(r.value.has(n.value));case\"not in\":return new j(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator \"${e.operator.value}\" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const a of e)if(\"KeywordArgumentExpression\"===a.type){const e=a;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error(\"Positional arguments must come before keyword arguments\");n.push(this.evaluate(a,t))}return[n,r]}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);if(\"Identifier\"===e.filter.type){const t=e.filter;if(\"tojson\"===t.value)return new V(J(n));if(n instanceof U)switch(t.value){case\"list\":return n;case\"first\":return n.value[0];case\"last\":return n.value[n.value.length-1];case\"length\":return new N(n.value.length);case\"reverse\":return new U(n.value.reverse());case\"sort\":return new U(n.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case\"NumericValue\":return e.value-t.value;case\"StringValue\":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(n instanceof V)switch(t.value){case\"length\":return new N(n.value.length);case\"upper\":return new V(n.value.toUpperCase());case\"lower\":return new V(n.value.toLowerCase());case\"title\":return new V(D(n.value));case\"capitalize\":return new V(n.value.charAt(0).toUpperCase()+n.value.slice(1));case\"trim\":return new V(n.value.trim());case\"indent\":return new V(n.value.split(\"\\n\").map(((e,t)=>0===t||0===e.length?e:\"    \"+e)).join(\"\\n\"));case\"string\":return n;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(n instanceof N){if(\"abs\"===t.value)return new N(Math.abs(n.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(n instanceof q)switch(t.value){case\"items\":return new U(Array.from(n.value.entries()).map((([e,t])=>new U([new V(e),t]))));case\"length\":return new N(n.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter \"${t.value}\" to type: ${n.type}`)}if(\"CallExpression\"===e.filter.type){const r=e.filter;if(\"Identifier\"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const a=r.callee.value;if(\"tojson\"===a){const[,e]=this.evaluateArguments(r.args,t),a=e.get(\"indent\")??new X;if(!(a instanceof N||a instanceof X))throw new Error(\"If set, indent must be a number\");return new V(J(n,a.value))}if(n instanceof U){switch(a){case\"selectattr\":{if(n.value.some((e=>!(e instanceof q))))throw new Error(\"`selectattr` can only be applied to array of objects\");if(r.args.some((e=>\"StringLiteral\"!==e.type)))throw new Error(\"arguments of `selectattr` must be strings\");const[e,a,s]=r.args.map((e=>this.evaluate(e,t)));let i;if(a){const e=t.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);i=e}else i=(...e)=>e[0].__bool__().value;const o=n.value.filter((t=>{const n=t.value.get(e.value);return!!n&&i(n,s)}));return new U(o)}case\"map\":{const[,e]=this.evaluateArguments(r.args,t);if(e.has(\"attribute\")){const t=e.get(\"attribute\");if(!(t instanceof V))throw new Error(\"attribute must be a string\");const r=e.get(\"default\"),a=n.value.map((e=>{if(!(e instanceof q))throw new Error(\"items in map must be an object\");return e.value.get(t.value)??r??new K}));return new U(a)}throw new Error(\"`map` expressions without `attribute` set are not currently supported.\")}}throw new Error(`Unknown ArrayValue filter: ${a}`)}if(n instanceof V){if(\"indent\"===a){const[e,a]=this.evaluateArguments(r.args,t),s=e.at(0)??a.get(\"width\")??new N(4);if(!(s instanceof N))throw new Error(\"width must be a number\");const i=e.at(1)??a.get(\"first\")??new j(!1),o=e.at(2)??a.get(\"blank\")??new j(!1),l=n.value.split(\"\\n\"),u=\" \".repeat(s.value),d=l.map(((e,t)=>!i.value&&0===t||!o.value&&0===e.length?e:u+e));return new V(d.join(\"\\n\"))}throw new Error(`Unknown StringValue filter: ${a}`)}throw new Error(`Cannot apply filter \"${a}\" to type: ${n.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const a=r(n);return new j(e.negate?!a:a)}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if(\"not\"===e.operator.value)return new j(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n=\"\";for(const r of e){const e=this.evaluate(r,t);\"NullValue\"!==e.type&&\"UndefinedValue\"!==e.type&&(n+=e.value)}return new V(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new G(r));const a=this.evaluate(e.callee,t);if(\"FunctionValue\"!==a.type)throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof U||e instanceof V))throw new Error(\"Slice object must be an array or string\");const r=this.evaluate(t.start,n),a=this.evaluate(t.stop,n),s=this.evaluate(t.step,n);if(!(r instanceof N||r instanceof K))throw new Error(\"Slice start must be numeric or undefined\");if(!(a instanceof N||a instanceof K))throw new Error(\"Slice stop must be numeric or undefined\");if(!(s instanceof N||s instanceof K))throw new Error(\"Slice step must be numeric or undefined\");return e instanceof U?new U(L(e.value,r.value,a.value,s.value)):new V(L(Array.from(e.value),r.value,a.value,s.value).join(\"\"))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,a;if(e.computed){if(\"SliceExpression\"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new V(e.property.value);if(n instanceof q){if(!(r instanceof V))throw new Error(`Cannot access property with non-string: got ${r.type}`);a=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof U||n instanceof V)if(r instanceof N)a=n.value.at(r.value),n instanceof V&&(a=new V(n.value.at(r.value)));else{if(!(r instanceof V))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);a=n.builtins.get(r.value)}else{if(!(r instanceof V))throw new Error(`Cannot access property with non-string: got ${r.type}`);a=n.builtins.get(r.value)}return a instanceof R?a:new K}evaluateSet(e,t){const n=this.evaluate(e.value,t);if(\"Identifier\"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else{if(\"MemberExpression\"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,a=this.evaluate(r.object,t);if(!(a instanceof q))throw new Error(\"Cannot assign to member of non-object\");if(\"Identifier\"!==r.property.type)throw new Error(\"Cannot assign to member with non-identifier property\");a.value.set(r.property.value,n)}}return new X}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new Q(t);let r,a;if(\"SelectExpression\"===e.iterable.type){const t=e.iterable;a=this.evaluate(t.iterable,n),r=t.test}else a=this.evaluate(e.iterable,n);if(!(a instanceof U))throw new Error(`Expected iterable type in for loop: got ${a.type}`);const s=[],i=[];for(let t=0;t<a.value.length;++t){const o=new Q(n),l=a.value[t];let u;if(\"Identifier\"===e.loopvar.type)u=t=>t.setVariable(e.loopvar.value,l);else{if(\"TupleLiteral\"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if(\"ArrayValue\"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const n=l;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?\"few\":\"many\"} items to unpack`);u=e=>{for(let r=0;r<t.value.length;++r){if(\"Identifier\"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}if(r){u(o);if(!this.evaluate(r,o).__bool__().value)continue}s.push(l),i.push(u)}let o=\"\",l=!0;for(let t=0;t<s.length;++t){const r=new Map([[\"index\",new N(t+1)],[\"index0\",new N(t)],[\"revindex\",new N(s.length-t)],[\"revindex0\",new N(s.length-t-1)],[\"first\",new j(0===t)],[\"last\",new j(t===s.length-1)],[\"length\",new N(s.length)],[\"previtem\",t>0?s[t-1]:new K],[\"nextitem\",t<s.length-1?s[t+1]:new K]]);n.setVariable(\"loop\",new q(r)),i[t](n);o+=this.evaluateBlock(e.body,n).value,l=!1}if(l){o+=this.evaluateBlock(e.defaultBlock,n).value}return new V(o)}evaluateMacro(e,t){return t.setVariable(e.name.value,new H(((t,n)=>{const r=new Q(n);let a;t=t.slice(),\"KeywordArgumentsValue\"===t.at(-1)?.type&&(a=t.pop());for(let n=0;n<e.args.length;++n){const s=e.args[n],i=t[n];if(\"Identifier\"===s.type){const e=s;if(!i)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,i)}else{if(\"KeywordArgumentExpression\"!==s.type)throw new Error(`Unknown argument type: ${s.type}`);{const e=s,t=i??a?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new X}evaluate(e,t){if(void 0===e)return new K;switch(e.type){case\"Program\":return this.evalProgram(e,t);case\"Set\":return this.evaluateSet(e,t);case\"If\":return this.evaluateIf(e,t);case\"For\":return this.evaluateFor(e,t);case\"Macro\":return this.evaluateMacro(e,t);case\"NumericLiteral\":return new N(Number(e.value));case\"StringLiteral\":return new V(e.value);case\"BooleanLiteral\":return new j(e.value);case\"ArrayLiteral\":return new U(e.value.map((e=>this.evaluate(e,t))));case\"TupleLiteral\":return new W(e.value.map((e=>this.evaluate(e,t))));case\"ObjectLiteral\":{const n=new Map;for(const[r,a]of e.value){const e=this.evaluate(r,t);if(!(e instanceof V))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(a,t))}return new q(n)}case\"Identifier\":return this.evaluateIdentifier(e,t);case\"CallExpression\":return this.evaluateCallExpression(e,t);case\"MemberExpression\":return this.evaluateMemberExpression(e,t);case\"UnaryExpression\":return this.evaluateUnaryExpression(e,t);case\"BinaryExpression\":return this.evaluateBinaryExpression(e,t);case\"FilterExpression\":return this.evaluateFilterExpression(e,t);case\"TestExpression\":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function Z(e){switch(typeof e){case\"number\":return new N(e);case\"string\":return new V(e);case\"boolean\":return new j(e);case\"undefined\":return new K;case\"object\":return null===e?new X:Array.isArray(e)?new U(e.map(Z)):new q(new Map(Object.entries(e).map((([e,t])=>[e,Z(t)]))));case\"function\":return new H(((t,n)=>Z(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function J(e,t,n){const r=n??0;switch(e.type){case\"NullValue\":case\"UndefinedValue\":return\"null\";case\"NumericValue\":case\"StringValue\":case\"BooleanValue\":return JSON.stringify(e.value);case\"ArrayValue\":case\"ObjectValue\":{const n=t?\" \".repeat(t):\"\",a=\"\\n\"+n.repeat(r),s=a+n;if(\"ArrayValue\"===e.type){const n=e.value.map((e=>J(e,t,r+1)));return t?`[${s}${n.join(`,${s}`)}${a}]`:`[${n.join(\", \")}]`}{const n=Array.from(e.value.entries()).map((([e,n])=>{const a=`\"${e}\": ${J(n,t,r+1)}`;return t?`${s}${a}`:a}));return t?`{${n.join(\",\")}${a}}`:`{${n.join(\", \")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var ee=class{parsed;constructor(e){const t=d(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=O(t)}render(e){const t=new Q;t.set(\"false\",!1),t.set(\"true\",!0),t.set(\"raise_exception\",(e=>{throw new Error(e)})),t.set(\"range\",B);for(const[n,r]of Object.entries(e))t.set(n,r);return new Y(t).run(this.parsed).value}}},\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/backend-impl.js ***!\n  \\******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>s,resolveBackendAndExecutionProviders:()=>o});const r=new Map,a=[],s=(e,t,n)=>{if(!t||\"function\"!=typeof t.init||\"function\"!=typeof t.createInferenceSessionHandler)throw new TypeError(\"not a valid backend\");{const s=r.get(e);if(void 0===s)r.set(e,{backend:t,priority:n});else{if(s.priority>n)return;if(s.priority===n&&s.backend!==t)throw new Error(`cannot register backend \"${e}\" using priority ${n}`)}if(n>=0){const t=a.indexOf(e);-1!==t&&a.splice(t,1);for(let t=0;t<a.length;t++)if(r.get(a[t]).priority<=n)return void a.splice(t,0,e);a.push(e)}}},i=async e=>{const t=r.get(e);if(!t)return\"backend not found.\";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},o=async e=>{const t=e.executionProviders||[],n=t.map((e=>\"string\"==typeof e?e:e.name)),r=0===n.length?a:n;let s;const o=[],l=new Set;for(const e of r){const t=await i(e);\"string\"==typeof t?o.push({name:e,err:t}):(s||(s=t),s===t&&l.add(e))}if(!s)throw new Error(`no available backend found. ERR: ${o.map((e=>`[${e.name}] ${e.err}`)).join(\", \")}`);for(const{name:e,err:t}of o)n.includes(e)&&console.warn(`removing requested execution provider \"${e}\" from session options because it is not available: ${t}`);const u=t.filter((e=>l.has(\"string\"==typeof e?e:e.name)));return[s,new Proxy(e,{get:(e,t)=>\"executionProviders\"===t?u:Reflect.get(e,t)})]}},\"./node_modules/onnxruntime-common/dist/esm/backend.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/backend.js ***!\n  \\*************************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>r.registerBackend});var r=n(/*! ./backend-impl.js */\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\")},\"./node_modules/onnxruntime-common/dist/esm/env-impl.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/env-impl.js ***!\n  \\**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>s});const r=n(/*! ./version.js */\"./node_modules/onnxruntime-common/dist/esm/version.js\");let a=\"warning\";const s={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if(\"string\"!=typeof e||-1===[\"verbose\",\"info\",\"warning\",\"error\",\"fatal\"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);a=e}},get logLevel(){return a}};Object.defineProperty(s,\"logLevel\",{enumerable:!0})},\"./node_modules/onnxruntime-common/dist/esm/env.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/env.js ***!\n  \\*********************************************************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>r});const r=n(/*! ./env-impl.js */\"./node_modules/onnxruntime-common/dist/esm/env-impl.js\").env},\"./node_modules/onnxruntime-common/dist/esm/index.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/index.js ***!\n  \\***********************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>s.InferenceSession,TRACE:()=>o.TRACE,TRACE_FUNC_BEGIN:()=>o.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>o.TRACE_FUNC_END,Tensor:()=>i.Tensor,TrainingSession:()=>l.TrainingSession,env:()=>a.env,registerBackend:()=>r.registerBackend});var r=n(/*! ./backend.js */\"./node_modules/onnxruntime-common/dist/esm/backend.js\"),a=n(/*! ./env.js */\"./node_modules/onnxruntime-common/dist/esm/env.js\"),s=n(/*! ./inference-session.js */\"./node_modules/onnxruntime-common/dist/esm/inference-session.js\"),i=n(/*! ./tensor.js */\"./node_modules/onnxruntime-common/dist/esm/tensor.js\"),o=(n(/*! ./tensor-conversion.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js\"),n(/*! ./tensor-factory.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js\"),n(/*! ./trace.js */\"./node_modules/onnxruntime-common/dist/esm/trace.js\")),l=(n(/*! ./onnx-model.js */\"./node_modules/onnxruntime-common/dist/esm/onnx-model.js\"),n(/*! ./onnx-value.js */\"./node_modules/onnxruntime-common/dist/esm/onnx-value.js\"),n(/*! ./training-session.js */\"./node_modules/onnxruntime-common/dist/esm/training-session.js\"))},\"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js ***!\n  \\****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>i});const r=n(/*! ./backend-impl.js */\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\"),a=n(/*! ./tensor.js */\"./node_modules/onnxruntime-common/dist/esm/tensor.js\"),s=n(/*! ./trace.js */\"./node_modules/onnxruntime-common/dist/esm/trace.js\");class i{constructor(e){this.handler=e}async run(e,t,n){(0,s.TRACE_FUNC_BEGIN)();const r={};let i={};if(\"object\"!=typeof e||null===e||e instanceof a.Tensor||Array.isArray(e))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let o=!0;if(\"object\"==typeof t){if(null===t)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(t instanceof a.Tensor)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(t)){if(0===t.length)throw new TypeError(\"'fetches' cannot be an empty array.\");o=!1;for(const e of t){if(\"string\"!=typeof e)throw new TypeError(\"'fetches' must be a string array or an object.\");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if(\"object\"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError(\"'options' must be an object.\")}else{let e=!1;const s=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==s.indexOf(n)){const s=t[n];(null===s||s instanceof a.Tensor)&&(e=!0,o=!1,r[n]=s)}if(e){if(\"object\"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError(\"'options' must be an object.\")}else i=t}}else if(void 0!==t)throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(const e of this.outputNames)r[e]=null;const l=await this.handler.run(e,r,i),u={};for(const e in l)if(Object.hasOwnProperty.call(l,e)){const t=l[e];t instanceof a.Tensor?u[e]=t:u[e]=new a.Tensor(t.type,t.data,t.dims)}return(0,s.TRACE_FUNC_END)(),u}async release(){return this.handler.dispose()}static async create(e,t,n,a){let o;(0,s.TRACE_FUNC_BEGIN)();let l={};if(\"string\"==typeof e){if(o=e,\"object\"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError(\"'options' must be an object.\")}else if(e instanceof Uint8Array){if(o=e,\"object\"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError(\"'options' must be an object.\")}else{if(!(e instanceof ArrayBuffer||\"undefined\"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError(\"Unexpected argument[0]: must be 'path' or 'buffer'.\");{const r=e;let s=0,i=e.byteLength;if(\"object\"==typeof t&&null!==t)l=t;else if(\"number\"==typeof t){if(s=t,!Number.isSafeInteger(s))throw new RangeError(\"'byteOffset' must be an integer.\");if(s<0||s>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(i=e.byteLength-s,\"number\"==typeof n){if(i=n,!Number.isSafeInteger(i))throw new RangeError(\"'byteLength' must be an integer.\");if(i<=0||s+i>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-s}].`);if(\"object\"==typeof a&&null!==a)l=a;else if(void 0!==a)throw new TypeError(\"'options' must be an object.\")}else if(void 0!==n)throw new TypeError(\"'byteLength' must be a number.\")}else if(void 0!==t)throw new TypeError(\"'options' must be an object.\");o=new Uint8Array(r,s,i)}}const[u,d]=await(0,r.resolveBackendAndExecutionProviders)(l),c=await u.createInferenceSessionHandler(o,d);return(0,s.TRACE_FUNC_END)(),new i(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},\"./node_modules/onnxruntime-common/dist/esm/inference-session.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/inference-session.js ***!\n  \\***********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>r});const r=n(/*! ./inference-session-impl.js */\"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js\").InferenceSession},\"./node_modules/onnxruntime-common/dist/esm/onnx-model.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/onnx-model.js ***!\n  \\****************************************************************/(e,t,n)=>{n.r(t)},\"./node_modules/onnxruntime-common/dist/esm/onnx-value.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/onnx-value.js ***!\n  \\****************************************************************/(e,t,n)=>{n.r(t)},\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js ***!\n  \\****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{tensorToDataURL:()=>r,tensorToImageData:()=>a});const r=(e,t)=>{const n=\"undefined\"!=typeof document?document.createElement(\"canvas\"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext(\"2d\");if(null!=r){let a,s;void 0!==t?.tensorLayout&&\"NHWC\"===t.tensorLayout?(a=e.dims[2],s=e.dims[3]):(a=e.dims[3],s=e.dims[2]);const i=void 0!==t?.format?t.format:\"RGB\",o=t?.norm;let l,u;void 0===o||void 0===o.mean?l=[255,255,255,255]:\"number\"==typeof o.mean?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],void 0!==o.mean[3]&&(l[3]=o.mean[3])),void 0===o||void 0===o.bias?u=[0,0,0,0]:\"number\"==typeof o.bias?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],void 0!==o.bias[3]&&(u[3]=o.bias[3]));const d=s*a;let c=0,p=d,h=2*d,m=-1;\"RGBA\"===i?(c=0,p=d,h=2*d,m=3*d):\"RGB\"===i?(c=0,p=d,h=2*d):\"RBG\"===i&&(c=0,h=d,p=2*d);for(let t=0;t<s;t++)for(let n=0;n<a;n++){const a=(e.data[c++]-u[0])*l[0],s=(e.data[p++]-u[1])*l[1],i=(e.data[h++]-u[2])*l[2],o=-1===m?255:(e.data[m++]-u[3])*l[3];r.fillStyle=\"rgba(\"+a+\",\"+s+\",\"+i+\",\"+o+\")\",r.fillRect(n,t,1,1)}if(\"toDataURL\"in n)return n.toDataURL();throw new Error(\"toDataURL is not supported\")}throw new Error(\"Can not access image data\")},a=(e,t)=>{const n=\"undefined\"!=typeof document?document.createElement(\"canvas\").getContext(\"2d\"):new OffscreenCanvas(1,1).getContext(\"2d\");let r;if(null==n)throw new Error(\"Can not access image data\");{let a,s,i;void 0!==t?.tensorLayout&&\"NHWC\"===t.tensorLayout?(a=e.dims[2],s=e.dims[1],i=e.dims[3]):(a=e.dims[3],s=e.dims[2],i=e.dims[1]);const o=void 0!==t&&void 0!==t.format?t.format:\"RGB\",l=t?.norm;let u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:\"number\"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:\"number\"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const c=s*a;if(void 0!==t&&(void 0!==t.format&&4===i&&\"RGBA\"!==t.format||3===i&&\"RGB\"!==t.format&&\"BGR\"!==t.format))throw new Error(\"Tensor format doesn't match input tensor dims\");const p=4;let h=0,m=1,f=2,g=3,_=0,w=c,y=2*c,b=-1;\"RGBA\"===o?(_=0,w=c,y=2*c,b=3*c):\"RGB\"===o?(_=0,w=c,y=2*c):\"RBG\"===o&&(_=0,y=c,w=2*c),r=n.createImageData(a,s);for(let t=0;t<s*a;h+=p,m+=p,f+=p,g+=p,t++)r.data[h]=(e.data[_++]-d[0])*u[0],r.data[m]=(e.data[w++]-d[1])*u[1],r.data[f]=(e.data[y++]-d[2])*u[2],r.data[g]=-1===b?255:(e.data[b++]-d[3])*u[3]}return r}},\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js ***!\n  \\***********************************************************************/(e,t,n)=>{n.r(t)},\"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js ***!\n  \\*************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{bufferToTensor:()=>a,tensorFromGpuBuffer:()=>o,tensorFromImage:()=>s,tensorFromPinnedBuffer:()=>l,tensorFromTexture:()=>i});const r=n(/*! ./tensor-impl.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\");const a=(e,t)=>{if(void 0===e)throw new Error(\"Image buffer must be defined\");if(void 0===t.height||void 0===t.width)throw new Error(\"Image height and width must be defined\");if(\"NHWC\"===t.tensorLayout)throw new Error(\"NHWC Tensor layout is not supported yet\");const{height:n,width:a}=t,s=t.norm??{mean:255,bias:0};let i,o;i=\"number\"==typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],o=\"number\"==typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];const l=void 0!==t.format?t.format:\"RGBA\",u=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:\"RGB\",d=n*a,c=\"RGBA\"===u?new Float32Array(4*d):new Float32Array(3*d);let p=4,h=0,m=1,f=2,g=3,_=0,w=d,y=2*d,b=-1;\"RGB\"===l&&(p=3,h=0,m=1,f=2,g=-1),\"RGBA\"===u?b=3*d:\"RBG\"===u?(_=0,y=d,w=2*d):\"BGR\"===u&&(y=0,w=d,_=2*d);for(let t=0;t<d;t++,h+=p,f+=p,m+=p,g+=p)c[_++]=(e[h]+o[0])/i[0],c[w++]=(e[m]+o[1])/i[1],c[y++]=(e[f]+o[2])/i[2],-1!==b&&-1!==g&&(c[b++]=(e[g]+o[3])/i[3]);return\"RGBA\"===u?new r.Tensor(\"float32\",c,[1,4,n,a]):new r.Tensor(\"float32\",c,[1,3,n,a])},s=async(e,t)=>{const n=\"undefined\"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r=\"undefined\"!=typeof ImageData&&e instanceof ImageData,s=\"undefined\"!=typeof ImageBitmap&&e instanceof ImageBitmap,i=\"string\"==typeof e;let o,l=t??{};const u=()=>{if(\"undefined\"!=typeof document)return document.createElement(\"canvas\");if(\"undefined\"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error(\"Canvas is not supported\")},d=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext(\"2d\"):null;if(n){const n=u();n.width=e.width,n.height=e.height;const r=d(n);if(null==r)throw new Error(\"Can not access image data\");{let n=e.height,a=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,a=t.resizedWidth),void 0!==t){if(l=t,void 0!==t.tensorFormat)throw new Error(\"Image input config format must be RGBA for HTMLImageElement\");l.tensorFormat=\"RGBA\",l.height=n,l.width=a}else l.tensorFormat=\"RGBA\",l.height=n,l.width=a;r.drawImage(e,0,0),o=r.getImageData(0,0,a,n).data}}else{if(!r){if(s){if(void 0===t)throw new Error(\"Please provide image config with format for Imagebitmap\");const n=u();n.width=e.width,n.height=e.height;const r=d(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),o=r.getImageData(0,0,n,t).data,l.height=t,l.width=n,a(o,l)}throw new Error(\"Can not access image data\")}if(i)return new Promise(((t,n)=>{const r=u(),s=d(r);if(!e||!s)return n();const i=new Image;i.crossOrigin=\"Anonymous\",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);const e=s.getImageData(0,0,r.width,r.height);l.height=r.height,l.width=r.width,t(a(e.data,l))}}));throw new Error(\"Input data provided is not supported - aborted tensor creation\")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(l=t),l.format=\"RGBA\",l.height=n,l.width=r,void 0!==t){const t=u();t.width=r,t.height=n;const a=d(t);if(null==a)throw new Error(\"Can not access image data\");a.putImageData(e,0,0),o=a.getImageData(0,0,r,n).data}else o=e.data}}if(void 0!==o)return a(o,l);throw new Error(\"Input data provided is not supported - aborted tensor creation\")},i=(e,t)=>{const{width:n,height:a,download:s,dispose:i}=t,o=[1,a,n,4];return new r.Tensor({location:\"texture\",type:\"float32\",texture:e,dims:o,download:s,dispose:i})},o=(e,t)=>{const{dataType:n,dims:a,download:s,dispose:i}=t;return new r.Tensor({location:\"gpu-buffer\",type:n??\"float32\",gpuBuffer:e,dims:a,download:s,dispose:i})},l=(e,t,n)=>new r.Tensor({location:\"cpu-pinned\",type:e,data:t,dims:n??[t.length]})},\"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-factory.js ***!\n  \\********************************************************************/(e,t,n)=>{n.r(t)},\"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js\":\n/*!******************************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js ***!\n  \\******************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>a,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>r,checkTypedArray:()=>i});const r=new Map([[\"float32\",Float32Array],[\"uint8\",Uint8Array],[\"int8\",Int8Array],[\"uint16\",Uint16Array],[\"int16\",Int16Array],[\"int32\",Int32Array],[\"bool\",Uint8Array],[\"float64\",Float64Array],[\"uint32\",Uint32Array]]),a=new Map([[Float32Array,\"float32\"],[Uint8Array,\"uint8\"],[Int8Array,\"int8\"],[Uint16Array,\"uint16\"],[Int16Array,\"int16\"],[Int32Array,\"int32\"],[Float64Array,\"float64\"],[Uint32Array,\"uint32\"]]);let s=!1;const i=()=>{if(!s){s=!0;const e=\"undefined\"!=typeof BigInt64Array&&BigInt64Array.from,t=\"undefined\"!=typeof BigUint64Array&&BigUint64Array.from,n=\"undefined\"!=typeof Float16Array&&Float16Array.from;e&&(r.set(\"int64\",BigInt64Array),a.set(BigInt64Array,\"int64\")),t&&(r.set(\"uint64\",BigUint64Array),a.set(BigUint64Array,\"uint64\")),n?(r.set(\"float16\",Float16Array),a.set(Float16Array,\"float16\")):r.set(\"float16\",Uint16Array)}}},\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-impl.js ***!\n  \\*****************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>o});const r=n(/*! ./tensor-conversion-impl.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js\"),a=n(/*! ./tensor-factory-impl.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js\"),s=n(/*! ./tensor-impl-type-mapping.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js\"),i=n(/*! ./tensor-utils-impl.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js\");class o{constructor(e,t,n){let r,a;if((0,s.checkTypedArray)(),\"object\"==typeof e&&\"location\"in e)switch(this.dataLocation=e.location,r=e.type,a=e.dims,e.location){case\"cpu-pinned\":{const t=s.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(r);if(!t)throw new TypeError(`unsupported type \"${r}\" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case\"texture\":if(\"float32\"!==r)throw new TypeError(`unsupported type \"${r}\" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case\"gpu-buffer\":if(\"float32\"!==r&&\"float16\"!==r&&\"int32\"!==r&&\"int64\"!==r&&\"uint32\"!==r&&\"uint8\"!==r&&\"bool\"!==r)throw new TypeError(`unsupported type \"${r}\" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,o;if(\"string\"==typeof e)if(r=e,o=n,\"string\"===e){if(!Array.isArray(t))throw new TypeError(\"A string tensor's data must be a string array.\");i=t}else{const n=s.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(\"float16\"===e&&n===Uint16Array)throw new TypeError(\"Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.\");i=\"uint64\"===e||\"int64\"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=t}}else if(o=t,Array.isArray(e)){if(0===e.length)throw new TypeError(\"Tensor type cannot be inferred from an empty array.\");const t=typeof e[0];if(\"string\"===t)r=\"string\",i=e;else{if(\"boolean\"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r=\"bool\",i=Uint8Array.from(e)}}else{const t=s.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===o)o=[i.length];else if(!Array.isArray(o))throw new TypeError(\"A tensor's dims must be a number array\");a=o,this.cpuData=i,this.dataLocation=\"cpu\"}const o=(0,i.calculateSize)(a);if(this.cpuData&&o!==this.cpuData.length)throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=a,this.size=o}static async fromImage(e,t){return(0,a.tensorFromImage)(e,t)}static fromTexture(e,t){return(0,a.tensorFromTexture)(e,t)}static fromGpuBuffer(e,t){return(0,a.tensorFromGpuBuffer)(e,t)}static fromPinnedBuffer(e,t,n){return(0,a.tensorFromPinnedBuffer)(e,t,n)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error(\"The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.\");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error(\"The data is not stored as a WebGL texture.\");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error(\"The data is not stored as a WebGPU buffer.\");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case\"cpu\":case\"cpu-pinned\":return this.data;case\"texture\":case\"gpu-buffer\":if(!this.downloader)throw new Error(\"The current tensor is not created with a specified data downloader.\");if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation=\"cpu\",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation=\"none\"}ensureValid(){if(\"none\"===this.dataLocation)throw new Error(\"The tensor is disposed.\")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error(\"Cannot reshape a tensor that owns GPU resource.\");return(0,i.tensorReshape)(this,e)}}},\"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js ***!\n  \\***********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{calculateSize:()=>a,tensorReshape:()=>s});const r=n(/*! ./tensor-impl.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\");const a=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if(\"number\"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},s=(e,t)=>{switch(e.location){case\"cpu\":return new r.Tensor(e.type,e.data,t);case\"cpu-pinned\":return new r.Tensor({location:\"cpu-pinned\",data:e.data,type:e.type,dims:t});case\"texture\":return new r.Tensor({location:\"texture\",texture:e.texture,type:e.type,dims:t});case\"gpu-buffer\":return new r.Tensor({location:\"gpu-buffer\",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}},\"./node_modules/onnxruntime-common/dist/esm/tensor.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/tensor.js ***!\n  \\************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>r});const r=n(/*! ./tensor-impl.js */\"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js\").Tensor},\"./node_modules/onnxruntime-common/dist/esm/trace.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/trace.js ***!\n  \\***********************************************************/(e,t,n)=>{n.r(t),n.d(t,{TRACE:()=>a,TRACE_FUNC_BEGIN:()=>i,TRACE_FUNC_END:()=>o});const r=n(/*! ./env-impl.js */\"./node_modules/onnxruntime-common/dist/esm/env-impl.js\");const a=(e,t)=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&console.timeStamp(`${e}::ORT::${t}`)},s=(e,t)=>{const n=(new Error).stack?.split(/\\r\\n|\\r|\\n/g)||[];let r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes(\"TRACE_FUNC\")){let r=`FUNC_${e}::${n[s].trim().split(\" \")[1]}`;return t&&(r+=`::${t}`),void a(\"CPU\",r)}n[s].includes(\"TRACE_FUNC\")&&(r=!0)}},i=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&s(\"BEGIN\",e)},o=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&s(\"END\",e)}},\"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js\":\n/*!***************************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/training-session-impl.js ***!\n  \\***************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{TrainingSession:()=>s});const r=n(/*! ./backend-impl.js */\"./node_modules/onnxruntime-common/dist/esm/backend-impl.js\"),a=n(/*! ./tensor.js */\"./node_modules/onnxruntime-common/dist/esm/tensor.js\");class s{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error(\"This training session has no evalModel loaded.\")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error(\"This training session has no evalModel loaded.\")}static async create(e,t){const n=e.evalModel||\"\",a=e.optimizerModel||\"\",i=t||{},[o,l]=await(0,r.resolveBackendAndExecutionProviders)(i);if(o.createTrainingSessionHandler){const t=await o.createTrainingSessionHandler(e.checkpointState,e.trainModel,n,a,l);return new s(t,!!e.optimizerModel,!!e.evalModel)}throw new Error(\"Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.\")}typeNarrowingForRunStep(e,t,n,r,s){const i={};let o={};if(\"object\"!=typeof n||null===n||n instanceof a.Tensor||Array.isArray(n))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let l=!0;if(\"object\"==typeof r){if(null===r)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(r instanceof a.Tensor)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(r)){if(0===r.length)throw new TypeError(\"'fetches' cannot be an empty array.\");l=!1;for(const e of r){if(\"string\"!=typeof e)throw new TypeError(\"'fetches' must be a string array or an object.\");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);i[e]=null}if(\"object\"==typeof s&&null!==s)o=s;else if(void 0!==s)throw new TypeError(\"'options' must be an object.\")}else{let e=!1;const n=Object.getOwnPropertyNames(r);for(const s of t)if(-1!==n.indexOf(s)){const t=r[s];(null===t||t instanceof a.Tensor)&&(e=!0,l=!1,i[s]=t)}if(e){if(\"object\"==typeof s&&null!==s)o=s;else if(void 0!==s)throw new TypeError(\"'options' must be an object.\")}else o=r}}else if(void 0!==r)throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(const t of e)if(void 0===n[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(l)for(const e of t)i[e]=null;return[i,o]}convertHandlerReturnTypeToMapOfTensors(e){const t={};for(const n in e)if(Object.hasOwnProperty.call(e,n)){const r=e[n];r instanceof a.Tensor?t[n]=r:t[n]=new a.Tensor(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){const[r,a]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),s=await this.handler.runTrainStep(e,r,a);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error(\"This TrainingSession has no OptimizerModel loaded.\");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){const[r,a]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),s=await this.handler.runEvalStep(e,r,a);return this.convertHandlerReturnTypeToMapOfTensors(s)}throw new Error(\"This TrainingSession has no EvalModel loaded.\")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){const n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error(\"Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.\");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}},\"./node_modules/onnxruntime-common/dist/esm/training-session.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/training-session.js ***!\n  \\**********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{TrainingSession:()=>r});const r=n(/*! ./training-session-impl.js */\"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js\").TrainingSession},\"./node_modules/onnxruntime-common/dist/esm/version.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/onnxruntime-common/dist/esm/version.js ***!\n  \\*************************************************************/(e,t,n)=>{n.r(t),n.d(t,{version:()=>r});const r=\"1.19.2\"},\"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs ***!\n  \\*********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>z,TRACE:()=>P,TRACE_FUNC_BEGIN:()=>F,TRACE_FUNC_END:()=>A,Tensor:()=>S,TrainingSession:()=>B,default:()=>Bd,env:()=>p,registerBackend:()=>i});\n/*!\n * ONNX Runtime Web v1.21.0-dev.20241024-d9ca84ef96\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nvar r,a,s,i,o,l,u,d,c,p,h,m,f,g,_,w,y,b,v,x,M,T,k,$,C,S,P,E,F,A,I,z,O,B,L=Object.defineProperty,D=Object.getOwnPropertyDescriptor,R=Object.getOwnPropertyNames,N=Object.prototype.hasOwnProperty,V=(r=function(e){if(typeof require<\"u\")return require.apply(this,arguments);throw Error('Dynamic require of \"'+e+'\" is not supported')},typeof require<\"u\"?require:typeof Proxy<\"u\"?new Proxy(r,{get:(e,t)=>(typeof require<\"u\"?require:e)[t]}):r),j=(e,t)=>()=>(e&&(t=e(e=0)),t),q=(e,t)=>{for(const n in t)L(e,n,{get:t[n],enumerable:!0})},G=e=>((e,t,n,r)=>{if(t&&\"object\"==typeof t||\"function\"==typeof t)for(const a of R(t))!N.call(e,a)&&a!==n&&L(e,a,{get:()=>t[a],enumerable:!(r=D(t,a))||r.enumerable});return e})(L({},\"__esModule\",{value:!0}),e),U=j((()=>{a=new Map,s=[],i=(e,t,n)=>{if(!t||\"function\"!=typeof t.init||\"function\"!=typeof t.createInferenceSessionHandler)throw new TypeError(\"not a valid backend\");{const r=a.get(e);if(void 0===r)a.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend \"${e}\" using priority ${n}`)}if(n>=0){const t=s.indexOf(e);-1!==t&&s.splice(t,1);for(let t=0;t<s.length;t++)if(a.get(s[t]).priority<=n)return void s.splice(t,0,e);s.push(e)}}},o=async e=>{const t=a.get(e);if(!t)return\"backend not found.\";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},l=async e=>{let t,n=e.executionProviders||[],r=n.map((e=>\"string\"==typeof e?e:e.name)),a=0===r.length?s:r,i=[],l=new Set;for(const e of a){const n=await o(e);\"string\"==typeof n?i.push({name:e,err:n}):(t||(t=n),t===n&&l.add(e))}if(!t)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(\", \")}`);for(const{name:e,err:t}of i)r.includes(e)&&console.warn(`removing requested execution provider \"${e}\" from session options because it is not available: ${t}`);const u=n.filter((e=>l.has(\"string\"==typeof e?e:e.name)));return[t,new Proxy(e,{get:(e,t)=>\"executionProviders\"===t?u:Reflect.get(e,t)})]}})),W=j((()=>{U()})),H=j((()=>{u=\"1.20.0-dev.20241016-2b8fc5529b\"})),X=j((()=>{H(),d=\"warning\",c={wasm:{},webgl:{},webgpu:{},versions:{common:u},set logLevel(e){if(void 0!==e){if(\"string\"!=typeof e||-1===[\"verbose\",\"info\",\"warning\",\"error\",\"fatal\"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);d=e}},get logLevel(){return d}},Object.defineProperty(c,\"logLevel\",{enumerable:!0})})),K=j((()=>{X(),p=c})),Q=j((()=>{h=(e,t)=>{const n=typeof document<\"u\"?document.createElement(\"canvas\"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext(\"2d\");if(null!=r){let a,s;void 0!==t?.tensorLayout&&\"NHWC\"===t.tensorLayout?(a=e.dims[2],s=e.dims[3]):(a=e.dims[3],s=e.dims[2]);let i,o,l=void 0!==t?.format?t.format:\"RGB\",u=t?.norm;void 0===u||void 0===u.mean?i=[255,255,255,255]:\"number\"==typeof u.mean?i=[u.mean,u.mean,u.mean,u.mean]:(i=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(i[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:\"number\"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let d=s*a,c=0,p=d,h=2*d,m=-1;\"RGBA\"===l?(c=0,p=d,h=2*d,m=3*d):\"RGB\"===l?(c=0,p=d,h=2*d):\"RBG\"===l&&(c=0,h=d,p=2*d);for(let t=0;t<s;t++)for(let n=0;n<a;n++){const a=(e.data[c++]-o[0])*i[0],s=(e.data[p++]-o[1])*i[1],l=(e.data[h++]-o[2])*i[2],u=-1===m?255:(e.data[m++]-o[3])*i[3];r.fillStyle=\"rgba(\"+a+\",\"+s+\",\"+l+\",\"+u+\")\",r.fillRect(n,t,1,1)}if(\"toDataURL\"in n)return n.toDataURL();throw new Error(\"toDataURL is not supported\")}throw new Error(\"Can not access image data\")},m=(e,t)=>{let n,r=typeof document<\"u\"?document.createElement(\"canvas\").getContext(\"2d\"):new OffscreenCanvas(1,1).getContext(\"2d\");if(null==r)throw new Error(\"Can not access image data\");{let a,s,i;void 0!==t?.tensorLayout&&\"NHWC\"===t.tensorLayout?(a=e.dims[2],s=e.dims[1],i=e.dims[3]):(a=e.dims[3],s=e.dims[2],i=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:\"RGB\",d=t?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:\"number\"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],255],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:\"number\"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));const c=s*a;if(void 0!==t&&(void 0!==t.format&&4===i&&\"RGBA\"!==t.format||3===i&&\"RGB\"!==t.format&&\"BGR\"!==t.format))throw new Error(\"Tensor format doesn't match input tensor dims\");let p=4,h=0,m=1,f=2,g=3,_=0,w=c,y=2*c,b=-1;\"RGBA\"===u?(_=0,w=c,y=2*c,b=3*c):\"RGB\"===u?(_=0,w=c,y=2*c):\"RBG\"===u&&(_=0,y=c,w=2*c),n=r.createImageData(a,s);for(let t=0;t<s*a;h+=p,m+=p,f+=p,g+=p,t++)n.data[h]=(e.data[_++]-l[0])*o[0],n.data[m]=(e.data[w++]-l[1])*o[1],n.data[f]=(e.data[y++]-l[2])*o[2],n.data[g]=-1===b?255:(e.data[b++]-l[3])*o[3]}return n}})),Y=j((()=>{ee(),f=(e,t)=>{if(void 0===e)throw new Error(\"Image buffer must be defined\");if(void 0===t.height||void 0===t.width)throw new Error(\"Image height and width must be defined\");if(\"NHWC\"===t.tensorLayout)throw new Error(\"NHWC Tensor layout is not supported yet\");let n,r,{height:a,width:s}=t,i=t.norm??{mean:255,bias:0};n=\"number\"==typeof i.mean?[i.mean,i.mean,i.mean,i.mean]:[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],r=\"number\"==typeof i.bias?[i.bias,i.bias,i.bias,i.bias]:[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let o=void 0!==t.format?t.format:\"RGBA\",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:\"RGB\",u=a*s,d=\"RGBA\"===l?new Float32Array(4*u):new Float32Array(3*u),c=4,p=0,h=1,m=2,f=3,g=0,_=u,w=2*u,y=-1;\"RGB\"===o&&(c=3,p=0,h=1,m=2,f=-1),\"RGBA\"===l?y=3*u:\"RBG\"===l?(g=0,w=u,_=2*u):\"BGR\"===l&&(w=0,_=u,g=2*u);for(let t=0;t<u;t++,p+=c,m+=c,h+=c,f+=c)d[g++]=(e[p]+r[0])/n[0],d[_++]=(e[h]+r[1])/n[1],d[w++]=(e[m]+r[2])/n[2],-1!==y&&-1!==f&&(d[y++]=(e[f]+r[3])/n[3]);return new C(\"float32\",d,\"RGBA\"===l?[1,4,a,s]:[1,3,a,s])},g=async(e,t)=>{let n,r=typeof HTMLImageElement<\"u\"&&e instanceof HTMLImageElement,a=typeof ImageData<\"u\"&&e instanceof ImageData,s=typeof ImageBitmap<\"u\"&&e instanceof ImageBitmap,i=\"string\"==typeof e,o=t??{},l=()=>{if(typeof document<\"u\")return document.createElement(\"canvas\");if(typeof OffscreenCanvas<\"u\")return new OffscreenCanvas(1,1);throw new Error(\"Canvas is not supported\")},u=e=>typeof HTMLCanvasElement<\"u\"&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext(\"2d\"):null;if(r){const r=l();r.width=e.width,r.height=e.height;const a=u(r);if(null==a)throw new Error(\"Can not access image data\");{let r=e.height,s=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,s=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error(\"Image input config format must be RGBA for HTMLImageElement\");o.tensorFormat=\"RGBA\",o.height=r,o.width=s}else o.tensorFormat=\"RGBA\",o.height=r,o.width=s;a.drawImage(e,0,0),n=a.getImageData(0,0,s,r).data}}else{if(!a){if(s){if(void 0===t)throw new Error(\"Please provide image config with format for Imagebitmap\");const r=l();r.width=e.width,r.height=e.height;const a=u(r);if(null!=a){const t=e.height,r=e.width;return a.drawImage(e,0,0,r,t),n=a.getImageData(0,0,r,t).data,o.height=t,o.width=r,f(n,o)}throw new Error(\"Can not access image data\")}if(i)return new Promise(((t,n)=>{const r=l(),a=u(r);if(!e||!a)return n();const s=new Image;s.crossOrigin=\"Anonymous\",s.src=e,s.onload=()=>{r.width=s.width,r.height=s.height,a.drawImage(s,0,0,r.width,r.height);const e=a.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(f(e.data,o))}}));throw new Error(\"Input data provided is not supported - aborted tensor creation\")}{let r,a;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,a=t.resizedWidth):(r=e.height,a=e.width),void 0!==t&&(o=t),o.format=\"RGBA\",o.height=r,o.width=a,void 0!==t){const t=l();t.width=a,t.height=r;const s=u(t);if(null==s)throw new Error(\"Can not access image data\");s.putImageData(e,0,0),n=s.getImageData(0,0,a,r).data}else n=e.data}}if(void 0!==n)return f(n,o);throw new Error(\"Input data provided is not supported - aborted tensor creation\")},_=(e,t)=>{const{width:n,height:r,download:a,dispose:s}=t;return new C({location:\"texture\",type:\"float32\",texture:e,dims:[1,r,n,4],download:a,dispose:s})},w=(e,t)=>{const{dataType:n,dims:r,download:a,dispose:s}=t;return new C({location:\"gpu-buffer\",type:n??\"float32\",gpuBuffer:e,dims:r,download:a,dispose:s})},y=(e,t)=>{const{dataType:n,dims:r,download:a,dispose:s}=t;return new C({location:\"ml-tensor\",type:n??\"float32\",mlTensor:e,dims:r,download:a,dispose:s})},b=(e,t,n)=>new C({location:\"cpu-pinned\",type:e,data:t,dims:n??[t.length]})})),Z=j((()=>{v=new Map([[\"float32\",Float32Array],[\"uint8\",Uint8Array],[\"int8\",Int8Array],[\"uint16\",Uint16Array],[\"int16\",Int16Array],[\"int32\",Int32Array],[\"bool\",Uint8Array],[\"float64\",Float64Array],[\"uint32\",Uint32Array],[\"int4\",Uint8Array],[\"uint4\",Uint8Array]]),x=new Map([[Float32Array,\"float32\"],[Uint8Array,\"uint8\"],[Int8Array,\"int8\"],[Uint16Array,\"uint16\"],[Int16Array,\"int16\"],[Int32Array,\"int32\"],[Float64Array,\"float64\"],[Uint32Array,\"uint32\"]]),M=!1,T=()=>{if(!M){M=!0;const e=typeof BigInt64Array<\"u\"&&BigInt64Array.from,t=typeof BigUint64Array<\"u\"&&BigUint64Array.from,n=typeof Float16Array<\"u\"&&Float16Array.from;e&&(v.set(\"int64\",BigInt64Array),x.set(BigInt64Array,\"int64\")),t&&(v.set(\"uint64\",BigUint64Array),x.set(BigUint64Array,\"uint64\")),n?(v.set(\"float16\",Float16Array),x.set(Float16Array,\"float16\")):v.set(\"float16\",Uint16Array)}}})),J=j((()=>{ee(),k=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if(\"number\"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},$=(e,t)=>{switch(e.location){case\"cpu\":return new C(e.type,e.data,t);case\"cpu-pinned\":return new C({location:\"cpu-pinned\",data:e.data,type:e.type,dims:t});case\"texture\":return new C({location:\"texture\",texture:e.texture,type:e.type,dims:t});case\"gpu-buffer\":return new C({location:\"gpu-buffer\",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case\"ml-tensor\":return new C({location:\"ml-tensor\",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),ee=j((()=>{Q(),Y(),Z(),J(),C=class{constructor(e,t,n){let r,a;if(T(),\"object\"==typeof e&&\"location\"in e)switch(this.dataLocation=e.location,r=e.type,a=e.dims,e.location){case\"cpu-pinned\":{const t=v.get(r);if(!t)throw new TypeError(`unsupported type \"${r}\" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case\"texture\":if(\"float32\"!==r)throw new TypeError(`unsupported type \"${r}\" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case\"gpu-buffer\":if(\"float32\"!==r&&\"float16\"!==r&&\"int32\"!==r&&\"int64\"!==r&&\"uint32\"!==r&&\"uint8\"!==r&&\"bool\"!==r&&\"uint4\"!==r&&\"int4\"!==r)throw new TypeError(`unsupported type \"${r}\" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case\"ml-tensor\":if(\"float32\"!==r&&\"float16\"!==r&&\"int32\"!==r&&\"int64\"!==r&&\"uint32\"!==r&&\"uint64\"!==r&&\"int8\"!==r&&\"uint8\"!==r&&\"bool\"!==r)throw new TypeError(`unsupported type \"${r}\" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let s,i;if(\"string\"==typeof e)if(r=e,i=n,\"string\"===e){if(!Array.isArray(t))throw new TypeError(\"A string tensor's data must be a string array.\");s=t}else{const n=v.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if(\"float16\"===e&&n===Uint16Array||\"uint4\"===e||\"int4\"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);s=\"uint64\"===e||\"int64\"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)s=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);if(\"uint8\"!==e)throw new TypeError(\"A Uint8ClampedArray tensor's data must be type of uint8\");s=Uint8Array.from(t)}}else if(i=t,Array.isArray(e)){if(0===e.length)throw new TypeError(\"Tensor type cannot be inferred from an empty array.\");const t=typeof e[0];if(\"string\"===t)r=\"string\",s=e;else{if(\"boolean\"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r=\"bool\",s=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r=\"uint8\",s=Uint8Array.from(e);else{const t=x.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,s=e}if(void 0===i)i=[s.length];else if(!Array.isArray(i))throw new TypeError(\"A tensor's dims must be a number array\");a=i,this.cpuData=s,this.dataLocation=\"cpu\"}const s=k(a);if(this.cpuData&&s!==this.cpuData.length&&(\"uint4\"!==r&&\"int4\"!==r||Math.ceil(s/2)!==this.cpuData.length))throw new Error(`Tensor's size(${s}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=a,this.size=s}static async fromImage(e,t){return g(e,t)}static fromTexture(e,t){return _(e,t)}static fromGpuBuffer(e,t){return w(e,t)}static fromMLTensor(e,t){return y(e,t)}static fromPinnedBuffer(e,t,n){return b(e,t,n)}toDataURL(e){return h(this,e)}toImageData(e){return m(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error(\"The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.\");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error(\"The data is not stored as a WebGL texture.\");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error(\"The data is not stored as a WebGPU buffer.\");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error(\"The data is not stored as a WebNN MLTensor.\");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case\"cpu\":case\"cpu-pinned\":return this.data;case\"texture\":case\"gpu-buffer\":case\"ml-tensor\":if(!this.downloader)throw new Error(\"The current tensor is not created with a specified data downloader.\");if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation=\"cpu\",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error(\"The current tensor is being downloaded.\");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation=\"none\"}ensureValid(){if(\"none\"===this.dataLocation)throw new Error(\"The tensor is disposed.\")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error(\"Cannot reshape a tensor that owns GPU resource.\");return $(this,e)}}})),te=j((()=>{ee(),S=C})),ne=j((()=>{X(),P=(e,t)=>{(typeof c.trace>\"u\"?!c.wasm.trace:!c.trace)||console.timeStamp(`${e}::ORT::${t}`)},E=(e,t)=>{let n=(new Error).stack?.split(/\\r\\n|\\r|\\n/g)||[],r=!1;for(let a=0;a<n.length;a++){if(r&&!n[a].includes(\"TRACE_FUNC\")){let r=`FUNC_${e}::${n[a].trim().split(\" \")[1]}`;return t&&(r+=`::${t}`),void P(\"CPU\",r)}n[a].includes(\"TRACE_FUNC\")&&(r=!0)}},F=e=>{(typeof c.trace>\"u\"?!c.wasm.trace:!c.trace)||E(\"BEGIN\",e)},A=e=>{(typeof c.trace>\"u\"?!c.wasm.trace:!c.trace)||E(\"END\",e)}})),re=j((()=>{U(),te(),ne(),I=class e{constructor(e){this.handler=e}async run(e,t,n){F();let r={},a={};if(\"object\"!=typeof e||null===e||e instanceof S||Array.isArray(e))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let s=!0;if(\"object\"==typeof t){if(null===t)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(t instanceof S)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(t)){if(0===t.length)throw new TypeError(\"'fetches' cannot be an empty array.\");s=!1;for(const e of t){if(\"string\"!=typeof e)throw new TypeError(\"'fetches' must be a string array or an object.\");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if(\"object\"==typeof n&&null!==n)a=n;else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\")}else{let e=!1,i=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==i.indexOf(n)){const a=t[n];(null===a||a instanceof S)&&(e=!0,s=!1,r[n]=a)}if(e){if(\"object\"==typeof n&&null!==n)a=n;else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\")}else a=t}}else if(typeof t<\"u\")throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(const t of this.inputNames)if(typeof e[t]>\"u\")throw new Error(`input '${t}' is missing in 'feeds'.`);if(s)for(const e of this.outputNames)r[e]=null;const i=await this.handler.run(e,r,a),o={};for(const e in i)if(Object.hasOwnProperty.call(i,e)){const t=i[e];o[e]=t instanceof S?t:new S(t.type,t.data,t.dims)}return A(),o}async release(){return this.handler.dispose()}static async create(t,n,r,a){F();let s,i={};if(\"string\"==typeof t){if(s=t,\"object\"==typeof n&&null!==n)i=n;else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(t instanceof Uint8Array){if(s=t,\"object\"==typeof n&&null!==n)i=n;else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<\"u\"&&t instanceof SharedArrayBuffer))throw new TypeError(\"Unexpected argument[0]: must be 'path' or 'buffer'.\");{let e=t,o=0,l=t.byteLength;if(\"object\"==typeof n&&null!==n)i=n;else if(\"number\"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError(\"'byteOffset' must be an integer.\");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-o,\"number\"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError(\"'byteLength' must be an integer.\");if(l<=0||o+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if(\"object\"==typeof a&&null!==a)i=a;else if(typeof a<\"u\")throw new TypeError(\"'options' must be an object.\")}else if(typeof r<\"u\")throw new TypeError(\"'byteLength' must be a number.\")}else if(typeof n<\"u\")throw new TypeError(\"'options' must be an object.\");s=new Uint8Array(e,o,l)}}const[o,u]=await l(i),d=await o.createInferenceSessionHandler(s,u);return A(),new e(d)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),ae=j((()=>{re(),z=I})),se=j((()=>{})),ie=j((()=>{})),oe=j((()=>{})),le=j((()=>{})),ue=j((()=>{U(),te(),O=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error(\"This training session has no evalModel loaded.\")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error(\"This training session has no evalModel loaded.\")}static async create(t,n){const r=t.evalModel||\"\",a=t.optimizerModel||\"\",s=n||{},[i,o]=await l(s);if(i.createTrainingSessionHandler){const n=await i.createTrainingSessionHandler(t.checkpointState,t.trainModel,r,a,o);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error(\"Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.\")}typeNarrowingForRunStep(e,t,n,r,a){let s={},i={};if(\"object\"!=typeof n||null===n||n instanceof S||Array.isArray(n))throw new TypeError(\"'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.\");let o=!0;if(\"object\"==typeof r){if(null===r)throw new TypeError(\"Unexpected argument[1]: cannot be null.\");if(r instanceof S)throw new TypeError(\"'fetches' cannot be a Tensor\");if(Array.isArray(r)){if(0===r.length)throw new TypeError(\"'fetches' cannot be an empty array.\");o=!1;for(const e of r){if(\"string\"!=typeof e)throw new TypeError(\"'fetches' must be a string array or an object.\");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);s[e]=null}if(\"object\"==typeof a&&null!==a)i=a;else if(typeof a<\"u\")throw new TypeError(\"'options' must be an object.\")}else{let e=!1,n=Object.getOwnPropertyNames(r);for(const a of t)if(-1!==n.indexOf(a)){const t=r[a];(null===t||t instanceof S)&&(e=!0,o=!1,s[a]=t)}if(e){if(\"object\"==typeof a&&null!==a)i=a;else if(typeof a<\"u\")throw new TypeError(\"'options' must be an object.\")}else i=r}}else if(typeof r<\"u\")throw new TypeError(\"Unexpected argument[1]: must be 'fetches' or 'options'.\");for(const t of e)if(typeof n[t]>\"u\")throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(const e of t)s[e]=null;return[s,i]}convertHandlerReturnTypeToMapOfTensors(e){const t={};for(const n in e)if(Object.hasOwnProperty.call(e,n)){const r=e[n];t[n]=r instanceof S?r:new S(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){const[r,a]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),s=await this.handler.runTrainStep(e,r,a);return this.convertHandlerReturnTypeToMapOfTensors(s)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error(\"This TrainingSession has no OptimizerModel loaded.\");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){const[r,a]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),s=await this.handler.runEvalStep(e,r,a);return this.convertHandlerReturnTypeToMapOfTensors(s)}throw new Error(\"This TrainingSession has no EvalModel loaded.\")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){const n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error(\"Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.\");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),de=j((()=>{ue(),B=O})),ce={};q(ce,{InferenceSession:()=>z,TRACE:()=>P,TRACE_FUNC_BEGIN:()=>F,TRACE_FUNC_END:()=>A,Tensor:()=>S,TrainingSession:()=>B,env:()=>p,registerBackend:()=>i});const pe=j((()=>{W(),K(),ae(),te(),se(),ie(),ne(),oe(),le(),de()})),he=j((()=>{})),me={};q(me,{default:()=>_e});let fe,ge,_e,we=j((()=>{Sd(),Fl(),El(),fe=\"ort-wasm-proxy-worker\",(ge=globalThis.self?.name===fe)&&(self.onmessage=e=>{const{type:t,in:n}=e.data;try{switch(t){case\"init-wasm\":Le(n.wasm).then((()=>{Ku(n).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}))}),(e=>{postMessage({type:t,err:e})}));break;case\"init-ep\":{const{epName:e,env:r}=n;Qu(r,e).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}));break}case\"copy-from\":{let{buffer:e}=n,r=Ju(e);postMessage({type:t,out:r});break}case\"create\":{const{model:e,options:r}=n;ed(e,r).then((e=>{postMessage({type:t,out:e})}),(e=>{postMessage({type:t,err:e})}));break}case\"release\":td(n),postMessage({type:t});break;case\"run\":{const{sessionId:e,inputIndices:r,inputs:a,outputIndices:s,options:i}=n;rd(e,r,a,s,new Array(s.length).fill(null),i).then((e=>{e.some((e=>\"cpu\"!==e[3]))?postMessage({type:t,err:\"Proxy does not support non-cpu tensor location.\"}):postMessage({type:t,out:e},sd([...a,...e]))}),(e=>{postMessage({type:t,err:e})}));break}case\"end-profiling\":ad(n),postMessage({type:t})}}catch(e){postMessage({type:t,err:e})}}),_e=ge?null:e=>new Worker(e??Me,{type:\"module\",name:fe})})),ye={};q(ye,{default:()=>xe});var be,ve,xe,Me,Te,ke,$e,Ce,Se,Pe,Ee,Fe,Ae,Ie,ze,Oe,Be,Le,De,Re,Ne,Ve,je,qe,Ge,Ue,We,He,Xe,Ke,Qe,Ye,Ze,Je,et,tt,nt,rt,at,st,it,ot,lt,ut,dt,ct,pt,ht,mt,ft,gt,_t,wt,yt,bt,vt,xt,Mt,Tt,kt,$t,Ct,St,Pt,Et,Ft,At,It,zt,Ot,Bt,Lt,Dt,Rt,Nt,Vt,jt,qt,Gt,Ut,Wt,Ht,Xt,Kt,Qt,Yt,Zt,Jt,en,tn,nn,rn,an,sn,on,ln,un,dn,cn,pn,hn,mn,fn,gn,_n,wn,yn,bn,vn,xn,Mn,Tn,kn,$n,Cn,Sn,Pn,En,Fn,An,In,zn,On,Bn,Ln,Dn,Rn,Nn,Vn,jn,qn,Gn,Un,Wn,Hn,Xn,Kn,Qn,Yn,Zn,Jn,er,tr,nr,rr,ar,sr,ir,or,lr,ur,dr,cr,pr,hr,mr,fr,gr,_r,wr,yr,br,vr,xr,Mr,Tr,kr,$r,Cr,Sr,Pr,Er,Fr,Ar,Ir,zr,Or,Br,Lr,Dr,Rr,Nr,Vr,jr,qr,Gr,Ur,Wr,Hr,Xr,Kr,Qr,Yr,Zr,Jr,ea,ta,na,ra,aa,sa,ia,oa,la,ua,da,ca,pa,ha,ma,fa,ga,_a,wa,ya,ba,va,xa,Ma,Ta,ka,$a,Ca,Sa,Pa,Ea,Fa,Aa,Ia,za,Oa,Ba,La,Da,Ra,Na,Va,ja,qa,Ga,Ua,Wa,Ha,Xa,Ka,Qa,Ya,Za,Ja,es,ts,ns,rs,as,ss,is,os,ls,us,ds,cs,ps,hs,ms,fs,gs,_s,ws,ys,bs,vs,xs,Ms,Ts,ks,$s,Cs,Ss,Ps,Es,Fs,As,Is,zs,Os,Bs,Ls,Ds,Rs,Ns,Vs,js,qs,Gs,Us,Ws,Hs,Xs,Ks,Qs,Ys,Zs,Js,ei,ti,ni,ri,ai,si,ii,oi,li,ui,di,ci,pi,hi,mi,fi,gi,_i,wi,yi,bi,vi,xi,Mi,Ti,ki,$i,Ci,Si,Pi,Ei,Fi,Ai,Ii,zi,Oi,Bi,Li,Di,Ri,Ni,Vi,ji,qi,Gi,Ui,Wi,Hi,Xi,Ki,Qi,Yi,Zi,Ji,eo,to,no,ro,ao,so,io,oo,lo,uo,co,po,ho,mo,fo,go,_o,wo,yo,bo,vo,xo,Mo,To,ko,$o,Co,So,Po,Eo,Fo,Ao,Io,zo,Oo,Bo,Lo,Do,Ro,No,Vo,jo,qo,Go,Uo,Wo,Ho,Xo,Ko,Qo,Yo,Zo,Jo,el,tl,nl,rl,al,sl,il,ol,ll,ul,dl,cl,pl,hl,ml,fl,gl,_l,wl,yl,bl,vl,xl,Ml,Tl,kl,$l,Cl,Sl,Pl=j((()=>{be=import.meta.url,ve=async function(e={}){function t(){return F.buffer!=z.buffer&&U(),z}function r(){return F.buffer!=z.buffer&&U(),O}function a(){return F.buffer!=z.buffer&&U(),B}function s(){return F.buffer!=z.buffer&&U(),L}function i(){return F.buffer!=z.buffer&&U(),D}function o(){return F.buffer!=z.buffer&&U(),R}function l(){return F.buffer!=z.buffer&&U(),N}function u(){return F.buffer!=z.buffer&&U(),q}let d,c,p=Object.assign({},e),h=new Promise(((e,t)=>{d=e,c=t})),m=\"object\"==typeof window,f=\"function\"==typeof importScripts,g=f&&\"em-pthread\"==self.name;p.mountExternalData=(e,t)=>{e.startsWith(\"./\")&&(e=e.substring(2)),(p.Eb||(p.Eb=new Map)).set(e,t)},p.unmountExternalData=()=>{delete p.Eb};const _=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let w=()=>{const e=(e,t,n)=>(...r)=>{const a=Ht,s=t?.();r=e(...r);const i=t?.();return s!==i&&(e=i,n(s),t=n=null),Ht!=a?new Promise(((e,t)=>{Jt={resolve:e,reject:t}})):r},t=e=>async(...t)=>{try{if(p.Fb)throw Error(\"Session already started\");const n=p.Fb={fc:t[0],errors:[]},r=await e(...t);if(p.Fb!==n)throw Error(\"Session mismatch\");p.Gb?.flush();const a=n.errors;if(0<a.length){let e=await Promise.all(a);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join(\"\\n\"))}return r}finally{p.Fb=null}};p._OrtCreateSession=e(p._OrtCreateSession,(()=>p._OrtCreateSession),(e=>p._OrtCreateSession=e)),p._OrtRun=t(e(p._OrtRun,(()=>p._OrtRun),(e=>p._OrtRun=e))),p._OrtRunWithBinding=t(e(p._OrtRunWithBinding,(()=>p._OrtRunWithBinding),(e=>p._OrtRunWithBinding=e))),p._OrtBindInput=e(p._OrtBindInput,(()=>p._OrtBindInput),(e=>p._OrtBindInput=e)),w=void 0};p.jsepInit=(e,t)=>{if(w?.(),\"webgpu\"===e){[p.Gb,p.Ub,p.Yb,p.Nb,p.Xb,p.jb,p.Zb,p.bc,p.Vb,p.Wb,p.$b]=t;const e=p.Gb;p.jsepRegisterBuffer=(t,n,r,a)=>e.registerBuffer(t,n,r,a),p.jsepGetBuffer=t=>e.getBuffer(t),p.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),p.jsepOnCreateSession=t=>{e.onCreateSession(t)},p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepOnRunStart=t=>e.onRunStart(t),p.cc=(t,n)=>{e.upload(t,n)}}else if(\"webnn\"===e){[p.Gb,p.ac,p.Ob,p.jsepEnsureTensor,p.dc,p.jsepDownloadTensor]=t,p.jsepReleaseTensorId=p.Ob;const e=p.Gb;p.jsepOnRunStart=t=>e.onRunStart(t),p.jsepRegisterMLContext=(t,n)=>{e.registerMLContext(t,n)},p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepCreateMLTensorDownloader=(t,n)=>e.createMLTensorDownloader(t,n),p.jsepRegisterMLTensor=(t,n,r)=>e.registerMLTensor(t,n,r),p.qc=(t,n,r,a,s)=>e.registerMLConstant(t,n,r,a,s,p.Eb)}};let y,b,v=Object.assign({},p),x=(e,t)=>{throw t},M=\"\";(m||f)&&(f?M=self.location.href:typeof document<\"u\"&&document.currentScript&&(M=document.currentScript.src),be&&(M=be),M=M.startsWith(\"blob:\")?\"\":M.substr(0,M.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1),f&&(b=e=>{const t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),y=(e,t,n)=>{const r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});let T,k=console.log.bind(console),$=console.error.bind(console),C=k,S=$;if(Object.assign(p,v),v=null,g){const e=function(t){try{const n=t.data,r=n.cmd;if(\"load\"===r){const t=[];self.onmessage=e=>t.push(e),self.startWorker=()=>{postMessage({cmd:\"loaded\"});for(const n of t)e(n);self.onmessage=e};for(const e of n.handlers)p[e]&&!p[e].proxy||(p[e]=(...t)=>{postMessage({Mb:\"callHandler\",oc:e,args:t})},\"print\"==e&&(C=p[e]),\"printErr\"==e&&(S=p[e]));F=n.wasmMemory,U(),P(n.wasmModule)}else if(\"run\"===r){Mr(n.pthread_ptr,0,0,1,0,0),Ot(n.pthread_ptr),Ce(),Me(),E||(wr(),E=!0);try{Se(n.start_routine,n.arg)}catch(e){if(\"unwind\"!=e)throw e}}else\"cancel\"===r?br()&&Cr(-1):\"setimmediate\"!==n.target&&(\"checkMailbox\"===r?E&&Bt():r&&(S(`worker: received unknown command ${r}`),S(n)))}catch(e){throw Tr(),e}};var P,E=!1;S=function(...e){e=e.join(\" \"),console.error(e)},self.alert=function(...e){postMessage({Mb:\"alert\",text:e.join(\" \"),rc:br()})},p.instantiateWasm=(e,t)=>new Promise((e=>{P=n=>{n=new WebAssembly.Instance(n,se()),t(n),e()}})),self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=e}p.wasmBinary&&(T=p.wasmBinary);let F,A,I,z,O,B,L,D,R,N,V,j,q,G=!1;function U(){const e=F.buffer;p.HEAP8=z=new Int8Array(e),p.HEAP16=B=new Int16Array(e),p.HEAPU8=O=new Uint8Array(e),p.HEAPU16=L=new Uint16Array(e),p.HEAP32=D=new Int32Array(e),p.HEAPU32=R=new Uint32Array(e),p.HEAPF32=N=new Float32Array(e),p.HEAPF64=q=new Float64Array(e),p.HEAP64=V=new BigInt64Array(e),p.HEAPU64=j=new BigUint64Array(e)}if(!g){if(!((F=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof _))throw S(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),Error(\"bad memory\");U()}let W=[],H=[],X=[],K=0,Q=null,Y=null;function Z(){if(0==--K&&(null!==Q&&(clearInterval(Q),Q=null),Y)){const e=Y;Y=null,e()}}function J(e){throw S(e=\"Aborted(\"+e+\")\"),G=!0,I=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),c(e),e}let ee,te=e=>e.startsWith(\"data:application/octet-stream;base64,\"),ne=e=>e.startsWith(\"file://\");function re(e){if(e==ee&&T)return new Uint8Array(T);if(b)return b(e);throw\"both async and sync fetching of the wasm failed\"}function ae(e,t,n){return function(e){if(!T&&(m||f)){if(\"function\"==typeof fetch&&!ne(e))return fetch(e,{credentials:\"same-origin\"}).then((t=>{if(!t.ok)throw`failed to load wasm binary file at '${e}'`;return t.arrayBuffer()})).catch((()=>re(e)));if(y)return new Promise(((t,n)=>{y(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>re(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then(n,(e=>{S(`failed to asynchronously prepare wasm: ${e}`),J(e)}))}function se(){return{a:{O:le,Aa:oe,b:Ee,aa:Ae,B:Be,qa:Le,Y:Ve,_:je,ra:qe,oa:Ge,ha:Ue,na:We,L:He,Z:Xe,W:Ke,pa:Qe,X:Ye,wa:et,F:ot,Q:ut,P:_t,E:yt,u:bt,q:vt,G:xt,A:Et,R:Ft,ua:At,ka:It,U:Lt,ba:Rt,H:Nt,ja:Ot,ta:Vt,t:Gt,x:nn,n:an,l:ln,c:pt,o:dn,j:mn,w:fn,p:gn,g:_n,s:wn,m:yn,e:bn,k:vn,i:xn,h:Mn,d:Tn,ea:kn,fa:Pn,ga:En,ca:Fn,da:An,T:In,f:Bn,D:Ln,I:Dn,M:Rn,y:Nn,sa:jn,V:qn,v:Vn,z:Gn,N:Un,S:Wn,za:Qn,ya:Yn,la:tr,ma:nr,$:ge,C:rr,K:ar,ia:sr,J:or,a:F,xa:me,va:cr,r:pr}}}const ie={867364:(e,t,n,a,s)=>{if(void 0===p||!p.Eb)return 1;if((e=Oe(e>>>0)).startsWith(\"./\")&&(e=e.substring(2)),!(e=p.Eb.get(e)))return 2;if(a>>>=0,(t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{const i=e.subarray(t,t+n);switch(s){case 0:r().set(i,a>>>0);break;case 1:p.cc(a,i);break;default:return 4}return 0}catch{return 4}},868047:(e,t,n)=>{p.dc(e,r().subarray(t>>>0,t+n>>>0))},868110:()=>p.ac(),868151:e=>{p.Ob(e)},868187:()=>{p.Vb()},868218:()=>{p.Wb()},868247:()=>{p.$b()},868272:e=>p.Ub(e),868305:e=>p.Yb(e),868337:(e,t,n)=>{p.Nb(e,t,n,!0)},868376:(e,t,n)=>{p.Nb(e,t,n)},868409:()=>typeof wasmOffsetConverter<\"u\",868466:e=>{p.jb(\"Abs\",e,void 0)},868517:e=>{p.jb(\"Neg\",e,void 0)},868568:e=>{p.jb(\"Floor\",e,void 0)},868621:e=>{p.jb(\"Ceil\",e,void 0)},868673:e=>{p.jb(\"Reciprocal\",e,void 0)},868731:e=>{p.jb(\"Sqrt\",e,void 0)},868783:e=>{p.jb(\"Exp\",e,void 0)},868834:e=>{p.jb(\"Erf\",e,void 0)},868885:e=>{p.jb(\"Sigmoid\",e,void 0)},868940:(e,t,n)=>{p.jb(\"HardSigmoid\",e,{alpha:t,beta:n})},869019:e=>{p.jb(\"Log\",e,void 0)},869070:e=>{p.jb(\"Sin\",e,void 0)},869121:e=>{p.jb(\"Cos\",e,void 0)},869172:e=>{p.jb(\"Tan\",e,void 0)},869223:e=>{p.jb(\"Asin\",e,void 0)},869275:e=>{p.jb(\"Acos\",e,void 0)},869327:e=>{p.jb(\"Atan\",e,void 0)},869379:e=>{p.jb(\"Sinh\",e,void 0)},869431:e=>{p.jb(\"Cosh\",e,void 0)},869483:e=>{p.jb(\"Asinh\",e,void 0)},869536:e=>{p.jb(\"Acosh\",e,void 0)},869589:e=>{p.jb(\"Atanh\",e,void 0)},869642:e=>{p.jb(\"Tanh\",e,void 0)},869694:e=>{p.jb(\"Not\",e,void 0)},869745:(e,t,n)=>{p.jb(\"Clip\",e,{min:t,max:n})},869814:e=>{p.jb(\"Clip\",e,void 0)},869866:(e,t)=>{p.jb(\"Elu\",e,{alpha:t})},869924:e=>{p.jb(\"Gelu\",e,void 0)},869976:e=>{p.jb(\"Relu\",e,void 0)},870028:(e,t)=>{p.jb(\"LeakyRelu\",e,{alpha:t})},870092:(e,t)=>{p.jb(\"ThresholdedRelu\",e,{alpha:t})},870162:(e,t)=>{p.jb(\"Cast\",e,{to:t})},870220:e=>{p.jb(\"Add\",e,void 0)},870271:e=>{p.jb(\"Sub\",e,void 0)},870322:e=>{p.jb(\"Mul\",e,void 0)},870373:e=>{p.jb(\"Div\",e,void 0)},870424:e=>{p.jb(\"Pow\",e,void 0)},870475:e=>{p.jb(\"Equal\",e,void 0)},870528:e=>{p.jb(\"Greater\",e,void 0)},870583:e=>{p.jb(\"GreaterOrEqual\",e,void 0)},870645:e=>{p.jb(\"Less\",e,void 0)},870697:e=>{p.jb(\"LessOrEqual\",e,void 0)},870756:(e,t,n,r,a)=>{p.jb(\"ReduceMean\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},870915:(e,t,n,r,a)=>{p.jb(\"ReduceMax\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},871073:(e,t,n,r,a)=>{p.jb(\"ReduceMin\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},871231:(e,t,n,r,a)=>{p.jb(\"ReduceProd\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},871390:(e,t,n,r,a)=>{p.jb(\"ReduceSum\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},871548:(e,t,n,r,a)=>{p.jb(\"ReduceL1\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},871705:(e,t,n,r,a)=>{p.jb(\"ReduceL2\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},871862:(e,t,n,r,a)=>{p.jb(\"ReduceLogSum\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},872023:(e,t,n,r,a)=>{p.jb(\"ReduceSumSquare\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},872187:(e,t,n,r,a)=>{p.jb(\"ReduceLogSumExp\",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},872351:e=>{p.jb(\"Where\",e,void 0)},872404:(e,t,n)=>{p.jb(\"Transpose\",e,{perm:t?Array.from(i().subarray(t>>>0,n>>>0)):[]})},872512:(e,t,n,r)=>{p.jb(\"DepthToSpace\",e,{blocksize:t,mode:Oe(n),format:r?\"NHWC\":\"NCHW\"})},872645:(e,t,n,r)=>{p.jb(\"DepthToSpace\",e,{blocksize:t,mode:Oe(n),format:r?\"NHWC\":\"NCHW\"})},872778:(e,n,r,a,s,o,l,u,d,c,h,m,f,g,_)=>{p.jb(\"ConvTranspose\",e,{format:d?\"NHWC\":\"NCHW\",autoPad:n,dilations:[r],group:a,kernelShape:[s],pads:[o,l],strides:[u],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(i().subarray(h>>>0,m>>>0)):[],outputShape:f?Array.from(i().subarray(f>>>0,g>>>0)):[],activation:Oe(_)})},873179:(e,n,r,a,s,o,l,u,d,c,h,m,f,g)=>{p.jb(\"ConvTranspose\",e,{format:u?\"NHWC\":\"NCHW\",autoPad:n,dilations:Array.from(i().subarray(r>>>0,2+(r>>>0)>>>0)),group:a,kernelShape:Array.from(i().subarray(s>>>0,2+(s>>>0)>>>0)),pads:Array.from(i().subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(i().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:c?Array.from(i().subarray(c>>>0,h>>>0)):[],outputShape:m?Array.from(i().subarray(m>>>0,f>>>0)):[],activation:Oe(g)})},873744:(e,n,r,a,s,o,l,u,d,c,h,m,f,g,_)=>{p.jb(\"ConvTranspose\",e,{format:d?\"NHWC\":\"NCHW\",autoPad:n,dilations:[r],group:a,kernelShape:[s],pads:[o,l],strides:[u],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(i().subarray(h>>>0,m>>>0)):[],outputShape:f?Array.from(i().subarray(f>>>0,g>>>0)):[],activation:Oe(_)})},874145:(e,n,r,a,s,o,l,u,d,c,h,m,f,g)=>{p.jb(\"ConvTranspose\",e,{format:u?\"NHWC\":\"NCHW\",autoPad:n,dilations:Array.from(i().subarray(r>>>0,2+(r>>>0)>>>0)),group:a,kernelShape:Array.from(i().subarray(s>>>0,2+(s>>>0)>>>0)),pads:Array.from(i().subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(i().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:c?Array.from(i().subarray(c>>>0,h>>>0)):[],outputShape:m?Array.from(i().subarray(m>>>0,f>>>0)):[],activation:Oe(g)})},874710:(e,t)=>{p.jb(\"GlobalAveragePool\",e,{format:t?\"NHWC\":\"NCHW\"})},874801:(e,t,n,r,a,s,o,l,u,d,c,h,m,f)=>{p.jb(\"AveragePool\",e,{format:f?\"NHWC\":\"NCHW\",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:s?Array.from(i().subarray(s>>>0,o>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(i().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},875216:(e,t)=>{p.jb(\"GlobalAveragePool\",e,{format:t?\"NHWC\":\"NCHW\"})},875307:(e,t,n,r,a,s,o,l,u,d,c,h,m,f)=>{p.jb(\"AveragePool\",e,{format:f?\"NHWC\":\"NCHW\",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:s?Array.from(i().subarray(s>>>0,o>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(i().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},875722:(e,t)=>{p.jb(\"GlobalMaxPool\",e,{format:t?\"NHWC\":\"NCHW\"})},875809:(e,t,n,r,a,s,o,l,u,d,c,h,m,f)=>{p.jb(\"MaxPool\",e,{format:f?\"NHWC\":\"NCHW\",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:s?Array.from(i().subarray(s>>>0,o>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(i().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},876220:(e,t)=>{p.jb(\"GlobalMaxPool\",e,{format:t?\"NHWC\":\"NCHW\"})},876307:(e,t,n,r,a,s,o,l,u,d,c,h,m,f)=>{p.jb(\"MaxPool\",e,{format:f?\"NHWC\":\"NCHW\",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:s?Array.from(i().subarray(s>>>0,o>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,u>>>0)):[],pads:d?Array.from(i().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},876718:(e,t,n,r,a)=>{p.jb(\"Gemm\",e,{alpha:t,beta:n,transA:r,transB:a})},876822:e=>{p.jb(\"MatMul\",e,void 0)},876876:(e,t,n,r)=>{p.jb(\"ArgMax\",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},876984:(e,t,n,r)=>{p.jb(\"ArgMin\",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},877092:(e,t)=>{p.jb(\"Softmax\",e,{axis:t})},877155:(e,t)=>{p.jb(\"Concat\",e,{axis:t})},877215:(e,t,n,r,a)=>{p.jb(\"Split\",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},877355:e=>{p.jb(\"Expand\",e,void 0)},877409:(e,t)=>{p.jb(\"Gather\",e,{axis:Number(t)})},877480:(e,t)=>{p.jb(\"GatherElements\",e,{axis:Number(t)})},877559:(e,t,n,r,a,s,o,l,u,d,c)=>{p.jb(\"Resize\",e,{antialias:t,axes:n?Array.from(i().subarray(n>>>0,r>>>0)):[],coordinateTransformMode:Oe(a),cubicCoeffA:s,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:Oe(u),mode:Oe(d),nearestMode:Oe(c)})},877905:(e,t,n,r,a,s,o)=>{p.jb(\"Slice\",e,{starts:t?Array.from(i().subarray(t>>>0,n>>>0)):[],ends:r?Array.from(i().subarray(r>>>0,a>>>0)):[],axes:s?Array.from(i().subarray(s>>>0,o>>>0)):[]})},878121:e=>{p.jb(\"Tile\",e,void 0)},878173:(e,t,n)=>{p.jb(\"InstanceNormalization\",e,{epsilon:t,format:n?\"NHWC\":\"NCHW\"})},878287:(e,t,n)=>{p.jb(\"InstanceNormalization\",e,{epsilon:t,format:n?\"NHWC\":\"NCHW\"})},878401:e=>{p.jb(\"Range\",e,void 0)},878454:(e,t)=>{p.jb(\"Einsum\",e,{equation:Oe(t)})},878535:(e,t,n,r,a)=>{p.jb(\"Pad\",e,{mode:t,value:n,pads:r?Array.from(i().subarray(r>>>0,a>>>0)):[]})},878662:(e,t,n,r,a,s)=>{p.jb(\"BatchNormalization\",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!r,format:s?\"NHWC\":\"NCHW\"})},878831:(e,t,n,r,a,s)=>{p.jb(\"BatchNormalization\",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!r,format:s?\"NHWC\":\"NCHW\"})},879e3:(e,t,n)=>{p.jb(\"CumSum\",e,{exclusive:Number(t),reverse:Number(n)})},879097:(e,t,n)=>{p.jb(\"DequantizeLinear\",e,{axis:t,blockSize:n})},879187:(e,t,n,r,a,s,o,l,u)=>{p.jb(\"Attention\",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:a,doRotary:s,qkvHiddenSizes:o?Array.from(i().subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},879459:e=>{p.jb(\"BiasAdd\",e,void 0)},879514:e=>{p.jb(\"BiasSplitGelu\",e,void 0)},879575:e=>{p.jb(\"FastGelu\",e,void 0)},879631:(e,n,r,a,s,o,u,d,c,h,m,f,g,_,w,y)=>{p.jb(\"Conv\",e,{format:f?\"NHWC\":\"NCHW\",auto_pad:n,dilations:r?Array.from(i().subarray(r>>>0,a>>>0)):[],group:s,kernel_shape:o?Array.from(i().subarray(o>>>0,u>>>0)):[],pads:d?Array.from(i().subarray(d>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[],w_is_const:()=>!!t()[g>>>0],activation:Oe(_),activation_params:w?Array.from(l().subarray(w>>>0,y>>>0)):[]})},880127:e=>{p.jb(\"Gelu\",e,void 0)},880179:(e,t,n,r,a,s,i,o,l)=>{p.jb(\"GroupQueryAttention\",e,{numHeads:t,kvNumHeads:n,scale:r,softcap:a,doRotary:s,rotaryInterleaved:i,smoothSoftmax:o,localWindowSize:l})},880396:(e,t,n,r)=>{p.jb(\"LayerNormalization\",e,{axis:t,epsilon:n,simplified:!!r})},880507:(e,t,n,r)=>{p.jb(\"LayerNormalization\",e,{axis:t,epsilon:n,simplified:!!r})},880618:(e,t,n,r,a,s)=>{p.jb(\"MatMulNBits\",e,{k:t,n,accuracyLevel:r,bits:a,blockSize:s})},880745:(e,t,n,r,a,s)=>{p.jb(\"MultiHeadAttention\",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:a,doRotary:s})},880904:(e,t)=>{p.jb(\"QuickGelu\",e,{alpha:t})},880968:(e,t,n,r,a)=>{p.jb(\"RotaryEmbedding\",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:a})},881107:(e,t,n)=>{p.jb(\"SkipLayerNormalization\",e,{epsilon:t,simplified:!!n})},881209:(e,t,n)=>{p.jb(\"SkipLayerNormalization\",e,{epsilon:t,simplified:!!n})},881311:(e,t,n,r)=>{p.jb(\"GatherBlockQuantized\",e,{gatherAxis:t,quantizeAxis:n,blockSize:r})},881432:e=>{p.Zb(e)},881466:(e,t)=>p.bc(e,t,p.Fb.fc,p.Fb.errors)};function oe(e,t,n){return tn((async()=>{await p.Xb(e,t,n)}))}function le(){return typeof wasmOffsetConverter<\"u\"}function ue(e){this.name=\"ExitStatus\",this.message=`Program terminated with exit(${e})`,this.status=e}let de=e=>{e.terminate(),e.onmessage=()=>{}},ce=e=>{0==_e.length&&(ke(),Te(_e[0]));const t=_e.pop();if(!t)return 6;we.push(t),ve[e.Ab]=t,t.Ab=e.Ab;const n={cmd:\"run\",start_routine:e.hc,arg:e.Qb,pthread_ptr:e.Ab};return t.postMessage(n,e.mc),0},pe=0,he=(e,t,...n)=>{for(var r=2*n.length,a=Ar(),s=Fr(8*r),i=s>>>3,o=0;o<n.length;o++){const l=n[o];\"bigint\"==typeof l?(V[i+2*o]=1n,V[i+2*o+1]=l):(V[i+2*o]=0n,u()[i+2*o+1>>>0]=l)}return e=kr(e,0,r,s,t),Er(a),e};function me(e){if(g)return he(0,1,e);if(I=e,!(0<pe)){for(var t of we)de(t);for(t of _e)de(t);_e=[],we=[],ve=[],G=!0}x(e,new ue(e))}function fe(e){if(g)return he(1,0,e);ge(e)}var ge=e=>{if(I=e,g)throw fe(e),\"unwind\";me(e)},_e=[],we=[],ye=[],ve={},xe=e=>{const t=e.Ab;delete ve[t],_e.push(e),we.splice(we.indexOf(e),1),e.Ab=0,$r(t)};function Me(){ye.forEach((e=>e()))}var Te=e=>new Promise((t=>{e.onmessage=n=>{let r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=br()){const a=ve[n.targetThread];a?a.postMessage(n,n.transferList):S(`Internal error! Worker sent a message \"${r}\" to target pthread ${n.targetThread}, but that thread no longer exists!`)}else\"checkMailbox\"===r?Bt():\"spawnThread\"===r?ce(n):\"cleanupThread\"===r?xe(ve[n.thread]):\"killThread\"===r?(n=n.thread,r=ve[n],delete ve[n],de(r),$r(n),we.splice(we.indexOf(r),1),r.Ab=0):\"cancelThread\"===r?ve[n.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(e.loaded=!0,t(e)):\"alert\"===r?alert(`Thread ${n.threadId}: ${n.text}`):\"setimmediate\"===n.target?e.postMessage(n):\"callHandler\"===r?p[n.handler](...n.args):r&&S(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw S(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};let n,r=[];for(n of[])p.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:\"load\",handlers:r,wasmMemory:F,wasmModule:A})}));function ke(){const e=new Worker(new URL(import.meta.url),{type:\"module\",workerData:\"em-pthread\",name:\"em-pthread\"});_e.push(e)}var $e=e=>{for(;0<e.length;)e.shift()(p)},Ce=()=>{let e=br(),t=o()[e+52>>>2>>>0];e=o()[e+56>>>2>>>0],Pr(t,t-e),Er(t)},Se=(e,t)=>{pe=0,e=Ir(e,t),0<pe?I=e:Cr(e)};class Pe{constructor(e){this.Jb=e-24}}function Ee(e,t,n){const r=new Pe(e>>>=0);throw t>>>=0,n>>>=0,o()[r.Jb+16>>>2>>>0]=0,o()[r.Jb+4>>>2>>>0]=t,o()[r.Jb+8>>>2>>>0]=n,e}function Fe(e,t,n,r){return g?he(2,1,e,t,n,r):Ae(e,t,n,r)}function Ae(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,void 0===_)return S(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;const a=[];return g&&0===a.length?Fe(e,t,n,r):(e={hc:n,Ab:e,Qb:r,mc:a},g?(e.Mb=\"spawnThread\",postMessage(e,a),0):ce(e))}var Ie=typeof TextDecoder<\"u\"?new TextDecoder(\"utf8\"):void 0,ze=(e,t,n)=>{let r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Ie)return Ie.decode(e.buffer instanceof _?e.slice(t,n):e.subarray(t,n));for(r=\"\";t<n;){let a=e[t++];if(128&a){const s=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|s);else{const i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|s<<6|i:(7&a)<<18|s<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r},Oe=(e,t)=>(e>>>=0)?ze(r(),e,t):\"\";function Be(e,t,n){return g?he(3,1,e,t,n):0}function Le(e,t){if(g)return he(4,1,e,t)}const De=e=>{for(var t=0,n=0;n<e.length;++n){const r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Re=(e,t,n,r)=>{if(!(0<r))return 0;const a=n>>>=0;r=n+r-1;for(let s=0;s<e.length;++s){let i=e.charCodeAt(s);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-a},Ne=(e,t,n)=>Re(e,r(),t,n);function Ve(e,t){if(g)return he(5,1,e,t)}function je(e,t,n){if(g)return he(6,1,e,t,n)}function qe(e,t,n){return g?he(7,1,e,t,n):0}function Ge(e,t){if(g)return he(8,1,e,t)}function Ue(e,t,n){if(g)return he(9,1,e,t,n)}function We(e,t,n,r){if(g)return he(10,1,e,t,n,r)}function He(e,t,n,r){if(g)return he(11,1,e,t,n,r)}function Xe(e,t,n,r){if(g)return he(12,1,e,t,n,r)}function Ke(e){if(g)return he(13,1,e)}function Qe(e,t){if(g)return he(14,1,e,t)}function Ye(e,t,n){if(g)return he(15,1,e,t,n)}var Ze,Je,et=()=>{J(\"\")},tt=e=>{for(var t=\"\";r()[e>>>0];)t+=Ze[r()[e++>>>0]];return t},nt={},rt={},at={};function st(e,t,n={}){if(!(\"argPackAdvance\"in t))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");return function(e,t,n={}){const r=t.name;if(!e)throw new Je(`type \"${r}\" must have a positive integer typeid pointer`);if(rt.hasOwnProperty(e)){if(n.Sb)return;throw new Je(`Cannot register type '${r}' twice`)}rt[e]=t,delete at[e],nt.hasOwnProperty(e)&&(t=nt[e],delete nt[e],t.forEach((e=>e())))}(e,t,n)}const it=(e,n,l)=>{switch(n){case 1:return l?e=>t()[e>>>0]:e=>r()[e>>>0];case 2:return l?e=>a()[e>>>1>>>0]:e=>s()[e>>>1>>>0];case 4:return l?e=>i()[e>>>2>>>0]:e=>o()[e>>>2>>>0];case 8:return l?e=>V[e>>>3]:e=>j[e>>>3];default:throw new TypeError(`invalid integer width (${n}): ${e}`)}};function ot(e,t,n){n>>>=0,st(e>>>=0,{name:t=tt(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if(\"bigint\"!=typeof t&&\"number\"!=typeof t)throw t=null===t?\"null\":\"object\"==(e=typeof t)||\"array\"===e||\"function\"===e?t.toString():\"\"+t,new TypeError(`Cannot convert \"${t}\" to ${this.name}`);return\"number\"==typeof t&&(t=BigInt(t)),t},argPackAdvance:lt,readValueFromPointer:it(t,n,-1==t.indexOf(\"u\")),Db:null})}var lt=8;function ut(e,t,n,a){st(e>>>=0,{name:t=tt(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:a},argPackAdvance:lt,readValueFromPointer:function(e){return this.fromWireType(r()[e>>>0])},Db:null})}const dt=[],ct=[];function pt(e){9<(e>>>=0)&&0==--ct[e+1]&&(ct[e]=void 0,dt.push(e))}const ht=e=>{if(!e)throw new Je(\"Cannot use deleted val. handle = \"+e);return ct[e]},mt=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:const t=dt.pop()||ct.length;return ct[t]=e,ct[t+1]=1,t}};function ft(e){return this.fromWireType(o()[e>>>2>>>0])}const gt={name:\"emscripten::val\",fromWireType:e=>{const t=ht(e);return pt(e),t},toWireType:(e,t)=>mt(t),argPackAdvance:lt,readValueFromPointer:ft,Db:null};function _t(e){return st(e>>>0,gt)}const wt=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(l()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(u()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function yt(e,t,n){n>>>=0,st(e>>>=0,{name:t=tt(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:lt,readValueFromPointer:wt(t,n),Db:null})}function bt(e,t,n,r,a){if(e>>>=0,n>>>=0,t=tt(t>>>0),-1===a&&(a=4294967295),a=e=>e,0===r){const s=32-8*n;a=e=>e<<s>>>s}const i=t.includes(\"unsigned\")?function(e,t){return t>>>0}:function(e,t){return t};st(e,{name:t,fromWireType:a,toWireType:i,argPackAdvance:lt,readValueFromPointer:it(t,n,0!==r),Db:null})}function vt(e,n,r){function a(e){const n=o()[e>>>2>>>0];return e=o()[e+4>>>2>>>0],new s(t().buffer,e,n)}var s=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][n];st(e>>>=0,{name:r=tt(r>>>0),fromWireType:a,argPackAdvance:lt,readValueFromPointer:a},{Sb:!0})}function xt(e,t){e>>>=0;const n=\"std::string\"===(t=tt(t>>>0));st(e,{name:t,fromWireType:function(e){const t=o()[e>>>2>>>0],a=e+4;if(n)for(var s=a,i=0;i<=t;++i){const l=a+i;if(i==t||0==r()[l>>>0]){if(s=Oe(s,l-s),void 0===u)var u=s;else u+=String.fromCharCode(0),u+=s;s=l+1}}else{for(u=Array(t),i=0;i<t;++i)u[i]=String.fromCharCode(r()[a+i>>>0]);u=u.join(\"\")}return vr(e),u},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));let a=\"string\"==typeof t;if(!(a||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new Je(\"Cannot pass non-string to std::string\");const s=n&&a?De(t):t.length,i=xr(4+s+1),l=i+4;if(o()[i>>>2>>>0]=s,n&&a)Ne(t,l,s+1);else if(a)for(a=0;a<s;++a){const u=t.charCodeAt(a);if(255<u)throw vr(l),new Je(\"String has UTF-16 code units that do not fit in 8 bits\");r()[l+a>>>0]=u}else for(a=0;a<s;++a)r()[l+a>>>0]=t[a];return null!==e&&e.push(vr,i),i},argPackAdvance:lt,readValueFromPointer:ft,Db(e){vr(e)}})}const Mt=typeof TextDecoder<\"u\"?new TextDecoder(\"utf-16le\"):void 0,Tt=(e,t)=>{for(var n=e>>1,i=n+t/2;!(n>=i)&&s()[n>>>0];)++n;if(32<(n<<=1)-e&&Mt)return Mt.decode(r().slice(e,n));for(n=\"\",i=0;!(i>=t/2);++i){const o=a()[e+2*i>>>1>>>0];if(0==o)break;n+=String.fromCharCode(o)}return n},kt=(e,t,n)=>{if(n??=2147483647,2>n)return 0;const r=t;n=(n-=2)<2*e.length?n/2:e.length;for(let s=0;s<n;++s){const i=e.charCodeAt(s);a()[t>>>1>>>0]=i,t+=2}return a()[t>>>1>>>0]=0,t-r},$t=e=>2*e.length,Ct=(e,t)=>{for(var n=0,r=\"\";!(n>=t/4);){let a=i()[e+4*n>>>2>>>0];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r},St=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;const r=t;n=r+n-4;for(let a=0;a<e.length;++a){let s=e.charCodeAt(a);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),i()[t>>>2>>>0]=s,(t+=4)+4>n)break}return i()[t>>>2>>>0]=0,t-r},Pt=e=>{for(var t=0,n=0;n<e.length;++n){const r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t};function Et(e,t,n){if(e>>>=0,t>>>=0,n=tt(n>>>=0),2===t)var r=Tt,a=kt,i=$t,l=e=>s()[e>>>1>>>0];else 4===t&&(r=Ct,a=St,i=Pt,l=e=>o()[e>>>2>>>0]);st(e,{name:n,fromWireType:e=>{for(var n,a=o()[e>>>2>>>0],s=e+4,i=0;i<=a;++i){const u=e+4+i*t;i!=a&&0!=l(u)||(s=r(s,u-s),void 0===n?n=s:(n+=String.fromCharCode(0),n+=s),s=u+t)}return vr(e),n},toWireType:(e,r)=>{if(\"string\"!=typeof r)throw new Je(`Cannot pass non-string to C++ string type ${n}`);const s=i(r),l=xr(4+s+t);return o()[l>>>2>>>0]=s/t,a(r,l+4,s+t),null!==e&&e.push(vr,l),l},argPackAdvance:lt,readValueFromPointer:ft,Db(e){vr(e)}})}function Ft(e,t){st(e>>>=0,{Tb:!0,name:t=tt(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var At=()=>1;function It(e){Mr(e>>>0,!f,1,!m,131072,!1),Me()}const zt=e=>{if(!G)try{if(e(),!(0<pe))try{g?Cr(I):ge(I)}catch(e){e instanceof ue||\"unwind\"==e||x(1,e)}}catch(e){e instanceof ue||\"unwind\"==e||x(1,e)}};function Ot(e){e>>>=0,\"function\"==typeof Atomics.nc&&(Atomics.nc(i(),e>>>2,e).value.then(Bt),e+=128,Atomics.store(i(),e>>>2,1))}var Bt=()=>{const e=br();e&&(Ot(e),zt(Sr))};function Lt(e,t){(e>>>=0)==t>>>0?setTimeout(Bt):g?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=ve[e])&&e.postMessage({cmd:\"checkMailbox\"})}const Dt=[];function Rt(e,t,n,r,a){for(t>>>=0,r/=2,Dt.length=r,n=a>>>0>>>3,a=0;a<r;a++)Dt[a]=V[n+2*a]?V[n+2*a+1]:u()[n+2*a+1>>>0];return(t?ie[t]:fr[e])(...Dt)}function Nt(e){e>>>=0,g?postMessage({cmd:\"cleanupThread\",thread:e}):xe(ve[e])}function Vt(e){}const jt=(e,t)=>{let n=rt[e];if(void 0===n)throw e=_r(e),n=tt(e),vr(e),new Je(`${t} has unknown type ${n}`);return n},qt=(e,t,n)=>{const r=[];return e=e.toWireType(r,n),r.length&&(o()[t>>>2>>>0]=mt(r)),e};function Gt(e,t,n){return t>>>=0,n>>>=0,e=ht(e>>>0),t=jt(t,\"emval::as\"),qt(t,n,e)}var Ut=e=>{try{e()}catch(e){J(e)}},Wt=0,Ht=null,Xt=0,Kt=[],Qt={},Yt={},Zt=0,Jt=null,en=[];function tn(e){return function(){if(!G){if(0===Wt){let t=!1,n=!1;(t=>{e().then(t)})(((e=0)=>{if(!G&&(Xt=e,t=!0,n)){Wt=2,Ut((()=>Br(Ht))),typeof Browser<\"u\"&&Browser.Kb.Rb&&Browser.Kb.resume(),e=!1;try{var r=(o=i()[Ht+8>>>2>>>0],o=gr[Yt[o]],--pe,o())}catch(o){r=o,e=!0}let a=!1;if(!Ht){const s=Jt;s&&(Jt=null,(e?s.reject:s.resolve)(r),a=!0)}if(e&&!a)throw r}let o})),n=!0,t||(Wt=1,Ht=function(){let e=xr(65548),t=e+12;o()[e>>>2>>>0]=t,o()[e+4>>>2>>>0]=t+65536,t=Kt[0];let n=Qt[t];return void 0===n&&(n=Zt++,Qt[t]=n,Yt[n]=t),t=n,i()[e+8>>>2>>>0]=t,e}(),typeof Browser<\"u\"&&Browser.Kb.Rb&&Browser.Kb.pause(),Ut((()=>zr(Ht))))}else 2===Wt?(Wt=0,Ut(Lr),vr(Ht),Ht=null,en.forEach(zt)):J(`invalid state: ${Wt}`);return Xt}}()}function nn(e){return e>>>=0,tn((()=>(e=ht(e)).then(mt)))}const rn=[];function an(e,t,n,r){return n>>>=0,r>>>=0,(e=rn[e>>>0])(null,t=ht(t>>>0),n,r)}const sn={},on=e=>{const t=sn[e];return void 0===t?tt(e):t};function ln(e,t,n,r,a){return n>>>=0,r>>>=0,a>>>=0,(e=rn[e>>>0])(t=ht(t>>>0),t[n=on(n)],r,a)}const un=()=>\"object\"==typeof globalThis?globalThis:Function(\"return this\")();function dn(e){return 0==(e>>>=0)?mt(un()):(e=on(e),mt(un()[e]))}const cn=e=>{const t=rn.length;return rn.push(e),t},pn=(e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=jt(o()[t+4*r>>>2>>>0],\"parameter \"+r);return n},hn=(e,t)=>Object.defineProperty(t,\"name\",{value:e});function mn(e,t,n){const r=(t=pn(e,t>>>0)).shift();e--;let a=\"return function (obj, func, destructorsRef, args) {\\n\",s=0,i=[];0===n&&i.push(\"obj\");for(var o=[\"retType\"],l=[r],u=0;u<e;++u)i.push(\"arg\"+u),o.push(\"argType\"+u),l.push(t[u]),a+=`  var arg${u} = argType${u}.readValueFromPointer(args${s?\"+\"+s:\"\"});\\n`,s+=t[u].argPackAdvance;return a+=`  var rv = ${1===n?\"new func\":\"func.call\"}(${i.join(\", \")});\\n`,r.Tb||(o.push(\"emval_returnValue\"),l.push(qt),a+=\"  return emval_returnValue(retType, destructorsRef, rv);\\n\"),o.push(a+\"};\\n\"),e=function(e){const t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);let n=hn(t.name||\"unknownFunctionName\",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(o)(...l),n=`methodCaller<(${t.map((e=>e.name)).join(\", \")}) => ${r.name}>`,cn(hn(n,e))}function fn(e){return e=on(e>>>0),mt(p[e])}function gn(e,t){return t>>>=0,e=ht(e>>>0),t=ht(t),mt(e[t])}function _n(e){9<(e>>>=0)&&(ct[e+1]+=1)}function wn(){return mt([])}function yn(e){e=ht(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return mt(t)}function bn(e){return mt(on(e>>>0))}function vn(){return mt({})}function xn(e){for(let t=ht(e>>>=0);t.length;){const n=t.pop();t.pop()(n)}pt(e)}function Mn(e,t,n){t>>>=0,n>>>=0,e=ht(e>>>0),t=ht(t),n=ht(n),e[t]=n}function Tn(e,t){return t>>>=0,e=(e=jt(e>>>0,\"_emval_take_value\")).readValueFromPointer(t),mt(e)}function kn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),i()[t>>>2>>>0]=e.getUTCSeconds(),i()[t+4>>>2>>>0]=e.getUTCMinutes(),i()[t+8>>>2>>>0]=e.getUTCHours(),i()[t+12>>>2>>>0]=e.getUTCDate(),i()[t+16>>>2>>>0]=e.getUTCMonth(),i()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,i()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[t+28>>>2>>>0]=e}const $n=e=>e%4==0&&(e%100!=0||e%400==0),Cn=[0,31,60,91,121,152,182,213,244,274,305,335],Sn=[0,31,59,90,120,151,181,212,243,273,304,334];function Pn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),i()[t>>>2>>>0]=e.getSeconds(),i()[t+4>>>2>>>0]=e.getMinutes(),i()[t+8>>>2>>>0]=e.getHours(),i()[t+12>>>2>>>0]=e.getDate(),i()[t+16>>>2>>>0]=e.getMonth(),i()[t+20>>>2>>>0]=e.getFullYear()-1900,i()[t+24>>>2>>>0]=e.getDay();let n=($n(e.getFullYear())?Cn:Sn)[e.getMonth()]+e.getDate()-1|0;i()[t+28>>>2>>>0]=n,i()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();const r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),i()[t+32>>>2>>>0]=e}function En(e){e>>>=0;let t=new Date(i()[e+20>>>2>>>0]+1900,i()[e+16>>>2>>>0],i()[e+12>>>2>>>0],i()[e+8>>>2>>>0],i()[e+4>>>2>>>0],i()[e>>>2>>>0],0),n=i()[e+32>>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),s=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(s,a);return 0>n?i()[e+32>>>2>>>0]=+(a!=s&&o==r):0<n!=(o==r)&&(a=Math.max(s,a),t.setTime(t.getTime()+6e4*((0<n?o:a)-r))),i()[e+24>>>2>>>0]=t.getDay(),n=($n(t.getFullYear())?Cn:Sn)[t.getMonth()]+t.getDate()-1|0,i()[e+28>>>2>>>0]=n,i()[e>>>2>>>0]=t.getSeconds(),i()[e+4>>>2>>>0]=t.getMinutes(),i()[e+8>>>2>>>0]=t.getHours(),i()[e+12>>>2>>>0]=t.getDate(),i()[e+16>>>2>>>0]=t.getMonth(),i()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function Fn(e,t,n,r,a,s,i){return g?he(16,1,e,t,n,r,a,s,i):-52}function An(e,t,n,r,a,s){if(g)return he(17,1,e,t,n,r,a,s)}function In(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;let a=(new Date).getFullYear(),s=new Date(a,0,1),l=new Date(a,6,1);a=s.getTimezoneOffset();const u=l.getTimezoneOffset(),d=Math.max(a,u);o()[e>>>2>>>0]=60*d,i()[t>>>2>>>0]=+(a!=u),s=(e=e=>e.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:\"short\"}).split(\" \")[1])(s),l=e(l),u<a?(Ne(s,n,17),Ne(l,r,17)):(Ne(s,r,17),Ne(l,n,17))}const zn=[],On=(e,t)=>{zn.length=0;for(var n;n=r()[e++>>>0];){let a=105!=n;t+=(a&=112!=n)&&t%8?4:0,zn.push(112==n?o()[t>>>2>>>0]:106==n?V[t>>>3]:105==n?i()[t>>>2>>>0]:u()[t>>>3>>>0]),t+=a?8:4}return zn};function Bn(e,t,n){return e>>>=0,t=On(t>>>0,n>>>0),ie[e](...t)}function Ln(e,t,n){return e>>>=0,t=On(t>>>0,n>>>0),ie[e](...t)}var Dn=()=>{},Rn=()=>Date.now();function Nn(e,t){return S(Oe(e>>>0,t>>>0))}var Vn,jn=()=>{throw pe+=1,\"unwind\"};function qn(){return 4294901760}Vn=()=>performance.timeOrigin+performance.now();var Gn=()=>navigator.hardwareConcurrency;function Un(){return J(\"Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER\"),0}function Wn(e){e>>>=0;const t=r().length;if(e<=t||4294901760<e)return!1;for(let n=1;4>=n;n*=2){let a=t*(1+.2/n);a=Math.min(a,e+100663296);let s=Math;a=Math.max(e,a);e:{s=(s.min.call(s,4294901760,a+(65536-a%65536)%65536)-F.buffer.byteLength+65535)/65536;try{F.grow(s),U();var i=1;break e}catch{}i=void 0}if(i)return!0}return!1}const Hn=()=>(J(\"Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER\"),0),Xn={},Kn=e=>{e.forEach((e=>{const t=Hn();t&&(Xn[t]=e)}))};function Qn(){const e=Error().stack.toString().split(\"\\n\");return\"Error\"==e[0]&&e.shift(),Kn(e),Xn.Pb=Hn(),Xn.ec=e,Xn.Pb}function Yn(e,t,n){if(e>>>=0,t>>>=0,Xn.Pb==e)var r=Xn.ec;else\"Error\"==(r=Error().stack.toString().split(\"\\n\"))[0]&&r.shift(),Kn(r);for(var a=3;r[a]&&Hn()!=e;)++a;for(e=0;e<n&&r[e+a];++e)i()[t+4*e>>>2>>>0]=Hn();return e}let Zn,Jn={},er=()=>{if(!Zn){let e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:\"./this.program\"};for(e in Jn)void 0===Jn[e]?delete t[e]:t[e]=Jn[e];const n=[];for(e in t)n.push(`${e}=${t[e]}`);Zn=n}return Zn};function tr(e,n){if(g)return he(18,1,e,n);e>>>=0,n>>>=0;let r=0;return er().forEach(((a,s)=>{let i=n+r;for(s=o()[e+4*s>>>2>>>0]=i,i=0;i<a.length;++i)t()[s++>>>0]=a.charCodeAt(i);t()[s>>>0]=0,r+=a.length+1})),0}function nr(e,t){if(g)return he(19,1,e,t);e>>>=0,t>>>=0;const n=er();o()[e>>>2>>>0]=n.length;let r=0;return n.forEach((e=>r+=e.length+1)),o()[t>>>2>>>0]=r,0}function rr(e){return g?he(20,1,e):52}function ar(e,t,n,r){return g?he(21,1,e,t,n,r):52}function sr(e,t,n,r){return g?he(22,1,e,t,n,r):70}const ir=[null,[],[]];function or(e,t,n,a){if(g)return he(23,1,e,t,n,a);t>>>=0,n>>>=0,a>>>=0;for(var s=0,i=0;i<n;i++){const l=o()[t>>>2>>>0],u=o()[t+4>>>2>>>0];t+=8;for(let d=0;d<u;d++){const c=r()[l+d>>>0],p=ir[e];0===c||10===c?((1===e?C:S)(ze(p,0)),p.length=0):p.push(c)}s+=u}return o()[a>>>2>>>0]=s,0}const lr=[31,29,31,30,31,30,31,31,30,31,30,31],ur=[31,28,31,30,31,30,31,31,30,31,30,31],dr=(e,n)=>{t().set(e,n>>>0)};function cr(e,t,n,r){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function s(e,t){return a(e,t,\"0\")}function l(e,t){function n(e){return 0>e?-1:0<e?1:0}let r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function d(e){let t=e.Bb;for(e=new Date(new Date(e.Cb+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=($n(e.getFullYear())?lr:ur)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=u(new Date(e.getFullYear(),0,4)),n=u(n),0>=l(t,e)?0>=l(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,r>>>=0;let c=o()[r+40>>>2>>>0];for(var p in r={kc:i()[r>>>2>>>0],jc:i()[r+4>>>2>>>0],Hb:i()[r+8>>>2>>>0],Lb:i()[r+12>>>2>>>0],Ib:i()[r+16>>>2>>>0],Cb:i()[r+20>>>2>>>0],ub:i()[r+24>>>2>>>0],Bb:i()[r+28>>>2>>>0],sc:i()[r+32>>>2>>>0],ic:i()[r+36>>>2>>>0],lc:c?Oe(c):\"\"},n=Oe(n),c={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})n=n.replace(new RegExp(p,\"g\"),c[p]);let h,m,f=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),g=\"January February March April May June July August September October November December\".split(\" \");for(p in c={\"%a\":e=>f[e.ub].substring(0,3),\"%A\":e=>f[e.ub],\"%b\":e=>g[e.Ib].substring(0,3),\"%B\":e=>g[e.Ib],\"%C\":e=>s((e.Cb+1900)/100|0,2),\"%d\":e=>s(e.Lb,2),\"%e\":e=>a(e.Lb,2,\" \"),\"%g\":e=>d(e).toString().substring(2),\"%G\":d,\"%H\":e=>s(e.Hb,2),\"%I\":e=>(0==(e=e.Hb)?e=12:12<e&&(e-=12),s(e,2)),\"%j\":e=>{for(var t=0,n=0;n<=e.Ib-1;t+=($n(e.Cb+1900)?lr:ur)[n++]);return s(e.Lb+t,3)},\"%m\":e=>s(e.Ib+1,2),\"%M\":e=>s(e.jc,2),\"%n\":()=>\"\\n\",\"%p\":e=>0<=e.Hb&&12>e.Hb?\"AM\":\"PM\",\"%S\":e=>s(e.kc,2),\"%t\":()=>\"\\t\",\"%u\":e=>e.ub||7,\"%U\":e=>s(Math.floor((e.Bb+7-e.ub)/7),2),\"%V\":e=>{let t=Math.floor((e.Bb+7-(e.ub+6)%7)/7);if(2>=(e.ub+371-e.Bb-2)%7&&t++,t)53==t&&(4==(n=(e.ub+371-e.Bb)%7)||3==n&&$n(e.Cb)||(t=1));else{t=52;var n=(e.ub+7-e.Bb-1)%7;(4==n||5==n&&$n(e.Cb%400-1))&&t++}return s(t,2)},\"%w\":e=>e.ub,\"%W\":e=>s(Math.floor((e.Bb+7-(e.ub+6)%7)/7),2),\"%y\":e=>(e.Cb+1900).toString().substring(2),\"%Y\":e=>e.Cb+1900,\"%z\":e=>(0<=(e=e.ic)?\"+\":\"-\")+(\"0000\"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),\"%Z\":e=>e.lc,\"%%\":()=>\"%\"},n=n.replace(/%%/g,\"\\0\\0\"),c)n.includes(p)&&(n=n.replace(new RegExp(p,\"g\"),c[p](r)));return h=n=n.replace(/\\0\\0/g,\"%\"),m=Array(De(h)+1),Re(h,m,0,m.length),(p=m).length>t?0:(dr(p,e),p.length-1)}function pr(e,t,n,r){return cr(e>>>0,t>>>0,n>>>0,r>>>0)}g||function(){for(let e=p.numThreads-1;e--;)ke();W.unshift((()=>{let e;K++,e=()=>Z(),g?e():Promise.all(_e.map(Te)).then(e)}))}();for(var hr=Array(256),mr=0;256>mr;++mr)hr[mr]=String.fromCharCode(mr);Ze=hr,Je=p.BindingError=class extends Error{constructor(e){super(e),this.name=\"BindingError\"}},p.InternalError=class extends Error{constructor(e){super(e),this.name=\"InternalError\"}},ct.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>ct.length/2-5-dt.length;var fr=[me,fe,Fe,Be,Le,Ve,je,qe,Ge,Ue,We,He,Xe,Ke,Qe,Ye,Fn,An,tr,nr,rr,ar,sr,or],gr=function(){function e(e,t){return gr=e.exports,gr=function(){const e=gr,t={};for(const[n,r]of Object.entries(e))t[n]=\"function\"==typeof r?(...e)=>{Kt.push(n);try{return r(...e)}finally{G||(Kt.pop(),Ht&&1===Wt&&0===Kt.length&&(Wt=0,pe+=1,Ut(Or),typeof Fibers<\"u\"&&Fibers.tc()))}}:r;return t}(),n=gr,r=e=>t=>e(t)>>>0,a=e=>()=>e()>>>0,(n=Object.assign({},n)).Ca=r(n.Ca),n.fb=a(n.fb),n.hb=r(n.hb),n.emscripten_main_runtime_thread_id=a(n.emscripten_main_runtime_thread_id),n.sb=r(n.sb),n.tb=a(n.tb),gr=n,ye.push(gr.ib),H.unshift(gr.Ba),A=t,Z(),gr;let n,r,a}let t,r,a,s=se();if(K++,p.instantiateWasm)try{return p.instantiateWasm(s,e)}catch(t){S(`Module.instantiateWasm callback failed with error: ${t}`),c(t)}return ee||=p.locateFile?te(\"ort-wasm-simd-threaded.jsep.wasm\")?\"ort-wasm-simd-threaded.jsep.wasm\":p.locateFile?p.locateFile(\"ort-wasm-simd-threaded.jsep.wasm\",M):M+\"ort-wasm-simd-threaded.jsep.wasm\":new URL(n(/*! ort-wasm-simd-threaded.jsep.wasm */\"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm\"),n.b).href,(t=s,r=function(t){e(t.instance,t.module)},a=ee,T||\"function\"!=typeof WebAssembly.instantiateStreaming||te(a)||ne(a)||\"function\"!=typeof fetch?ae(a,t,r):fetch(a,{credentials:\"same-origin\"}).then((e=>WebAssembly.instantiateStreaming(e,t).then(r,(function(e){return S(`wasm streaming compile failed: ${e}`),S(\"falling back to ArrayBuffer instantiation\"),ae(a,t,r)}))))).catch(c),{}}(),_r=e=>(_r=gr.Ca)(e),wr=()=>(wr=gr.Da)();p._OrtInit=(e,t)=>(p._OrtInit=gr.Ea)(e,t),p._OrtGetLastError=(e,t)=>(p._OrtGetLastError=gr.Fa)(e,t),p._OrtCreateSessionOptions=(e,t,n,r,a,s,i,o,l,u)=>(p._OrtCreateSessionOptions=gr.Ga)(e,t,n,r,a,s,i,o,l,u),p._OrtAppendExecutionProvider=(e,t)=>(p._OrtAppendExecutionProvider=gr.Ha)(e,t),p._OrtAddFreeDimensionOverride=(e,t,n)=>(p._OrtAddFreeDimensionOverride=gr.Ia)(e,t,n),p._OrtAddSessionConfigEntry=(e,t,n)=>(p._OrtAddSessionConfigEntry=gr.Ja)(e,t,n),p._OrtReleaseSessionOptions=e=>(p._OrtReleaseSessionOptions=gr.Ka)(e),p._OrtCreateSession=(e,t,n)=>(p._OrtCreateSession=gr.La)(e,t,n),p._OrtReleaseSession=e=>(p._OrtReleaseSession=gr.Ma)(e),p._OrtGetInputOutputCount=(e,t,n)=>(p._OrtGetInputOutputCount=gr.Na)(e,t,n),p._OrtGetInputName=(e,t)=>(p._OrtGetInputName=gr.Oa)(e,t),p._OrtGetOutputName=(e,t)=>(p._OrtGetOutputName=gr.Pa)(e,t),p._OrtFree=e=>(p._OrtFree=gr.Qa)(e),p._OrtCreateTensor=(e,t,n,r,a,s)=>(p._OrtCreateTensor=gr.Ra)(e,t,n,r,a,s),p._OrtGetTensorData=(e,t,n,r,a)=>(p._OrtGetTensorData=gr.Sa)(e,t,n,r,a),p._OrtReleaseTensor=e=>(p._OrtReleaseTensor=gr.Ta)(e),p._OrtCreateRunOptions=(e,t,n,r)=>(p._OrtCreateRunOptions=gr.Ua)(e,t,n,r),p._OrtAddRunConfigEntry=(e,t,n)=>(p._OrtAddRunConfigEntry=gr.Va)(e,t,n),p._OrtReleaseRunOptions=e=>(p._OrtReleaseRunOptions=gr.Wa)(e),p._OrtCreateBinding=e=>(p._OrtCreateBinding=gr.Xa)(e),p._OrtBindInput=(e,t,n)=>(p._OrtBindInput=gr.Ya)(e,t,n),p._OrtBindOutput=(e,t,n,r)=>(p._OrtBindOutput=gr.Za)(e,t,n,r),p._OrtClearBoundOutputs=e=>(p._OrtClearBoundOutputs=gr._a)(e),p._OrtReleaseBinding=e=>(p._OrtReleaseBinding=gr.$a)(e),p._OrtRunWithBinding=(e,t,n,r,a)=>(p._OrtRunWithBinding=gr.ab)(e,t,n,r,a),p._OrtRun=(e,t,n,r,a,s,i,o)=>(p._OrtRun=gr.bb)(e,t,n,r,a,s,i,o),p._OrtEndProfiling=e=>(p._OrtEndProfiling=gr.cb)(e),p._JsepOutput=(e,t,n)=>(p._JsepOutput=gr.db)(e,t,n),p._JsepGetNodeName=e=>(p._JsepGetNodeName=gr.eb)(e);var yr,br=()=>(br=gr.fb)(),vr=p._free=e=>(vr=p._free=gr.gb)(e),xr=p._malloc=e=>(xr=p._malloc=gr.hb)(e),Mr=(e,t,n,r,a,s)=>(Mr=gr.kb)(e,t,n,r,a,s),Tr=()=>(Tr=gr.lb)(),kr=(e,t,n,r,a)=>(kr=gr.mb)(e,t,n,r,a),$r=e=>($r=gr.nb)(e),Cr=e=>(Cr=gr.ob)(e),Sr=()=>(Sr=gr.pb)(),Pr=(e,t)=>(Pr=gr.qb)(e,t),Er=e=>(Er=gr.rb)(e),Fr=e=>(Fr=gr.sb)(e),Ar=()=>(Ar=gr.tb)(),Ir=p.dynCall_ii=(e,t)=>(Ir=p.dynCall_ii=gr.vb)(e,t),zr=e=>(zr=gr.wb)(e),Or=()=>(Or=gr.xb)(),Br=e=>(Br=gr.yb)(e),Lr=()=>(Lr=gr.zb)();function Dr(){0<K||(g?(d(p),g||$e(H),startWorker(p)):($e(W),0<K||yr||(yr=!0,p.calledRun=!0,G||(g||$e(H),d(p),g||$e(X)))))}return p.___start_em_js=881578,p.___stop_em_js=881800,p.stackSave=()=>Ar(),p.stackRestore=e=>Er(e),p.stackAlloc=e=>Fr(e),p.UTF8ToString=Oe,p.stringToUTF8=Ne,p.lengthBytesUTF8=De,Y=function e(){yr||Dr(),yr||(Y=e)},Dr(),h},xe=ve,\"em-pthread\"===globalThis.self?.name&&ve()})),El=j((()=>{he(),Me=import.meta.url??(typeof document<\"u\"?document.currentScript?.src:typeof self<\"u\"?self.location?.href:void 0),Te=typeof location>\"u\"?void 0:location.origin,ke=(e,t)=>{try{const n=t??Me;return(n?new URL(e,n):new URL(e)).origin===Te}catch{return!1}},$e=async e=>{const t=await(await fetch(e,{credentials:\"same-origin\"})).blob();return URL.createObjectURL(t)},Ce=(we(),G(me)).default,Se=async()=>{if(!Me)throw new Error(\"Failed to load proxy worker: cannot determine the script source URL.\");if(ke(Me))return[void 0,Ce()];const e=await $e(Me);return[e,Ce(e)]},Pe=(Pl(),G(ye)).default,Ee=async(e,t,n)=>[void 0,Pe]})),Fl=j((()=>{El(),Ae=!1,Ie=!1,ze=!1,Oe=()=>{if(typeof SharedArrayBuffer>\"u\")return!1;try{return typeof MessageChannel<\"u\"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Be=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Le=async e=>{if(Ae)return Promise.resolve();if(Ie)throw new Error(\"multiple calls to 'initializeWebAssembly()' detected.\");if(ze)throw new Error(\"previous call to 'initializeWebAssembly()' failed.\");Ie=!0;let t=e.initTimeout,n=e.numThreads;if(!Be())throw new Error(\"WebAssembly SIMD is not supported in the current environment.\");const r=Oe();n>1&&!r&&(typeof self<\"u\"&&!self.crossOriginIsolated&&console.warn(\"env.wasm.numThreads is set to \"+n+\", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info.\"),console.warn(\"WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading.\"),e.numThreads=n=1);let a=e.wasmPaths,s=\"string\"==typeof a?a:void 0,i=a?.mjs,o=i?.href??i,l=a?.wasm,u=l?.href??l,d=e.wasmBinary,[c,p]=await Ee(o,s,n>1),h=!1,m=[];if(t>0&&m.push(new Promise((e=>{setTimeout((()=>{h=!0,e()}),t)}))),m.push(new Promise(((e,t)=>{const r={numThreads:n};d?r.wasmBinary=d:(u||s)&&(r.locateFile=(e,t)=>u??(s??t)+e),p(r).then((t=>{Ie=!1,Ae=!0,Fe=t,e(),c&&URL.revokeObjectURL(c)}),(e=>{Ie=!1,ze=!0,t(e)}))}))),await Promise.race(m),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},De=()=>{if(Ae&&Fe)return Fe;throw new Error(\"WebAssembly is not initialized yet.\")}})),Al=j((()=>{Fl(),Re=(e,t)=>{const n=De(),r=n.lengthBytesUTF8(e)+1,a=n._malloc(r);return n.stringToUTF8(e,a,r),t.push(a),a},Ne=(e,t,n,r)=>{if(\"object\"==typeof e&&null!==e){if(n.has(e))throw new Error(\"Circular reference in options\");n.add(e)}Object.entries(e).forEach((([e,a])=>{const s=t?t+e:e;if(\"object\"==typeof a)Ne(a,s+\".\",n,r);else if(\"string\"==typeof a||\"number\"==typeof a)r(s,a.toString());else{if(\"boolean\"!=typeof a)throw new Error(\"Can't handle extra config type: \"+typeof a);r(s,a?\"1\":\"0\")}}))},Ve=e=>{const t=De(),n=t.stackSave();try{const n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);const r=t.HEAP32[n/4],a=t.HEAPU32[n/4+1],s=a?t.UTF8ToString(a):\"\";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${s}`)}finally{t.stackRestore(n)}}})),Il=j((()=>{Fl(),Al(),je=e=>{let t=De(),n=0,r=[],a=e||{};try{if(void 0===e?.logSeverityLevel)a.logSeverityLevel=2;else if(\"number\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)a.logVerbosityLevel=0;else if(\"number\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(a.terminate=!1);let s=0;return void 0!==e?.tag&&(s=Re(e.tag,r)),n=t._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,s),0===n&&Ve(\"Can't create run options.\"),void 0!==e?.extra&&Ne(e.extra,\"\",new WeakSet,((e,a)=>{const s=Re(e,r),i=Re(a,r);0!==t._OrtAddRunConfigEntry(n,s,i)&&Ve(`Can't set a run config entry: ${e} - ${a}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),e}}})),zl=j((()=>{Fl(),Al(),qe=e=>{switch(e){case\"disabled\":return 0;case\"basic\":return 1;case\"extended\":return 2;case\"all\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Ge=e=>{switch(e){case\"sequential\":return 0;case\"parallel\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ue=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\"1\"),e.executionProviders&&e.executionProviders.some((e=>\"webgpu\"===(\"string\"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},We=(e,t,n)=>{for(const r of t){let t=\"string\"==typeof r?r:r.name;switch(t){case\"webnn\":if(t=\"WEBNN\",\"string\"!=typeof r){const t=r?.deviceType;if(t){const r=Re(\"deviceType\",n),a=Re(t,n);0!==De()._OrtAddSessionConfigEntry(e,r,a)&&Ve(`Can't set a session config entry: 'deviceType' - ${t}.`)}}break;case\"webgpu\":if(t=\"JS\",\"string\"!=typeof r){const t=r;if(t?.preferredLayout){if(\"NCHW\"!==t.preferredLayout&&\"NHWC\"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);const r=Re(\"preferredLayout\",n),a=Re(t.preferredLayout,n);0!==De()._OrtAddSessionConfigEntry(e,r,a)&&Ve(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case\"wasm\":case\"cpu\":continue;default:throw new Error(`not supported execution provider: ${t}`)}const a=Re(t,n);0!==De()._OrtAppendExecutionProvider(e,a)&&Ve(`Can't append execution provider: ${t}.`)}},He=e=>{let t=De(),n=0,r=[],a=e||{};Ue(a);try{const e=qe(a.graphOptimizationLevel??\"all\"),s=Ge(a.executionMode??\"sequential\"),i=\"string\"==typeof a.logId?Re(a.logId,r):0,o=a.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);const l=a.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);const u=\"string\"==typeof a.optimizedModelFilePath?Re(a.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!a.enableCpuMemArena,!!a.enableMemPattern,s,!!a.enableProfiling,0,i,o,l,u),0===n&&Ve(\"Can't create session options.\"),a.executionProviders&&We(n,a.executionProviders,r),void 0!==a.enableGraphCapture){if(\"boolean\"!=typeof a.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);const e=Re(\"enableGraphCapture\",r),s=Re(a.enableGraphCapture.toString(),r);0!==t._OrtAddSessionConfigEntry(n,e,s)&&Ve(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(const[e,s]of Object.entries(a.freeDimensionOverrides)){if(\"string\"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if(\"number\"!=typeof s||!Number.isInteger(s)||s<0)throw new Error(`free dimension override value must be a non-negative integer: ${s}`);const a=Re(e,r);0!==t._OrtAddFreeDimensionOverride(n,a,s)&&Ve(`Can't set a free dimension override: ${e} - ${s}.`)}return void 0!==a.extra&&Ne(a.extra,\"\",new WeakSet,((e,a)=>{const s=Re(e,r),i=Re(a,r);0!==t._OrtAddSessionConfigEntry(n,s,i)&&Ve(`Can't set a session config entry: ${e} - ${a}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),r.forEach((e=>t._free(e))),e}}})),Ol=j((()=>{Xe=e=>{switch(e){case\"int8\":return 3;case\"uint8\":return 2;case\"bool\":return 9;case\"int16\":return 5;case\"uint16\":return 4;case\"int32\":return 6;case\"uint32\":return 12;case\"float16\":return 10;case\"float32\":return 1;case\"float64\":return 11;case\"string\":return 8;case\"int64\":return 7;case\"uint64\":return 13;case\"int4\":return 22;case\"uint4\":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Ke=e=>{switch(e){case 3:return\"int8\";case 2:return\"uint8\";case 9:return\"bool\";case 5:return\"int16\";case 4:return\"uint16\";case 6:return\"int32\";case 12:return\"uint32\";case 10:return\"float16\";case 1:return\"float32\";case 11:return\"float64\";case 8:return\"string\";case 7:return\"int64\";case 13:return\"uint64\";case 22:return\"int4\";case 21:return\"uint4\";default:throw new Error(`unsupported data type: ${e}`)}},Qe=(e,t)=>{const n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r=\"number\"==typeof t?t:t.reduce(((e,t)=>e*t),1);return n>0?Math.ceil(r*n):void 0},Ye=e=>{switch(e){case\"float16\":return typeof Float16Array<\"u\"&&Float16Array.from?Float16Array:Uint16Array;case\"float32\":return Float32Array;case\"uint8\":case\"bool\":return Uint8Array;case\"int8\":return Int8Array;case\"uint16\":return Uint16Array;case\"int16\":return Int16Array;case\"int32\":return Int32Array;case\"float64\":return Float64Array;case\"uint32\":return Uint32Array;case\"int64\":return BigInt64Array;case\"uint64\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Ze=e=>{switch(e){case\"verbose\":return 0;case\"info\":return 1;case\"warning\":return 2;case\"error\":return 3;case\"fatal\":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Je=e=>\"float32\"===e||\"float16\"===e||\"int32\"===e||\"int64\"===e||\"uint32\"===e||\"uint8\"===e||\"bool\"===e||\"uint4\"===e||\"int4\"===e,et=e=>\"float32\"===e||\"float16\"===e||\"int32\"===e||\"int64\"===e||\"uint32\"===e||\"uint64\"===e||\"int8\"===e||\"uint8\"===e||\"bool\"===e,tt=e=>{switch(e){case\"none\":return 0;case\"cpu\":return 1;case\"cpu-pinned\":return 2;case\"texture\":return 3;case\"gpu-buffer\":return 4;case\"ml-tensor\":return 5;default:throw new Error(`unsupported data location: ${e}`)}}})),Bl=j((()=>{he(),nt=async e=>{if(\"string\"==typeof e){{const t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);const n=t.headers.get(\"Content-Length\"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,a=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{const e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let s=0;for(;;){const{done:e,value:t}=await a.read();if(e)break;const r=t.byteLength;new Uint8Array(n,s,r).set(t),s+=r}return new Uint8Array(n,0,r)}}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}})),Ll=j((()=>{Ol(),rt=[\"V\",\"I\",\"W\",\"E\",\"F\"],at=(e,t)=>{console.log(`[${rt[e]},${(new Date).toISOString()}]${t}`)},ot=(e,t)=>{st=e,it=t},lt=(e,t)=>{const n=Ze(e);n>=Ze(st)&&at(n,\"function\"==typeof t?t():t)},ut=(...e)=>{it&&lt(...e)}})),Dl=j((()=>{Ol(),dt=(e,t)=>new(Ye(t))(e)})),Rl=j((()=>{})),Nl=j((()=>{Ll(),Rl(),ct=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),pt=[],ht=e=>16*Math.ceil(e/16),mt=e=>{for(let t=0;t<pt.length;t++){const n=pt[t];if(e<=n)return n}return 16*Math.ceil(e/16)},ft=1,gt=()=>ft++,_t=async(e,t,n,r)=>{const a=ht(n),s=e.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{const i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(t,0,s,0,a),e.flush(),await s.mapAsync(GPUMapMode.READ);const o=s.getMappedRange();if(r){const e=r();return e.set(new Uint8Array(o,0,n)),e}return new Uint8Array(o.slice(0,n))}finally{s.destroy()}},wt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(const[e]of ct)pt.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[]);this.sessionCount=0}upload(e,t){const n=t.buffer,r=t.byteOffset,a=t.byteLength,s=ht(a),i=this.storageCache.get(e);if(!i)throw new Error(\"gpu data for uploading does not exist\");if(i.originalSize!==a)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${a}`);const o=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,a)),o.unmap();const u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o,0,i.gpuData.buffer,0,s),ut(\"verbose\",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(o)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error(\"source gpu data for memcpy does not exist\");const r=this.storageCache.get(t);if(!r)throw new Error(\"destination gpu data for memcpy does not exist\");if(n.originalSize!==r.originalSize)throw new Error(\"inconsistent source and destination gpu data size\");const a=ht(n.originalSize),s=this.backend.getCommandEncoder();this.backend.endComputePass(),s.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,a)}registerExternalBuffer(e,t,n){let r;if(n){if(r=n[0],e===n[1])return ut(\"verbose\",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`)),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(\"Registering a different external buffer under graph capture mode is not supported yet.\\n             Please use the previous external buffer!\")}else r=gt();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),ut(\"verbose\",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`)),r}unregisterExternalBuffer(e){void 0!==e&&(this.storageCache.delete(e),ut(\"verbose\",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`)))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=mt(e),a=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,s=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||s){const e=(a?this.freeBuffers:this.freeUniformBuffers).get(r);n=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});const i={id:gt(),type:0,buffer:n};return this.storageCache.set(i.id,{gpuData:i,originalSize:e}),ut(\"verbose\",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`)),i}get(e){return this.storageCache.get(e)?.gpuData}release(e){const t=this.storageCache.get(e);if(!t){if(0===this.storageCache.size)return 0;throw new Error(\"releasing data does not exist\")}return ut(\"verbose\",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){const n=this.storageCache.get(e);if(!n)throw new Error(\"data does not exist\");await _t(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],0!==this.buffersPending.length)if(\"default\"===this.backend.sessionStatus){for(const e of this.buffersPending){const t=ct.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){const n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){const n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(const t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){const t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,0===this.sessionCount&&(ut(\"warning\",(()=>\"[WebGPU] Clearing webgpu buffer cache\")),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.storageCache=new Map)}},yt=(...e)=>new wt(...e)})),Vl=j((()=>{bt=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(\";\")),this.key}},vt=e=>new bt(e)})),jl=j((()=>{xt=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Mt=class{static calcShape(e,t,n=!1){const r=e.length,a=t.length;if(0===r)return t;if(0===a)return e;const s=Math.max(e.length,t.length),i=new Array(s);if(n){if(r<2||a<2)return;const n=xt.calcMatMulShape([e[r-2],e[r-1]],[t[a-2],t[a-1]]);if(void 0===n)return;[i[s-2],i[s-1]]=n}for(let o=n?3:1;o<=s;o++){const n=r-o<0?1:e[r-o],l=a-o<0?1:t[a-o];if(n!==l&&n>1&&l>1)return;const u=Math.max(n,l);if(n&&l)i[s-o]=Math.max(n,l);else{if(u>1)return;i[s-o]=0}}return i}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let a=1;a<=n;a++)if(1!==e[n-a]&&e[n-a]!==t[r-a])return!1;return!0}},Tt=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){const n=e.length;if(0===n)return[];let r=new Array(n),a=n-1;for(;a>=0;){if(e[a]%t==0){r[a]=e[a]/t;break}if(t%e[a]!=0)throw new Error(\"cannot convert shape\");r[a]=1,t/=e[a],a--}for(a--;a>=0;a--)r[a]=e[a];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let a=t;a<n;a++){if(e[a]<0)throw new Error(\"cannot get valid size from specified dimension range. Most likely the range contains negative values in them.\");r*=e[a]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error(\"unsupported axis for this operation.\");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},kt=class e{static adjustPoolAttributes(e,t,n,r,a,s){if(!e&&n.length!==t.length-2)throw new Error(\"length of specified kernel shapes should be 2 less than length of input dimensions\");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error(\"strides should be greater than or equal to 1\")}else r.push(1);for(let e=0;e<n.length;e++)if(e<a.length){if(a[e]<0)throw new Error(\"dilations should be greater than or equal to 1\")}else a.push(1);for(let e=0;e<2*n.length;e++)if(e<s.length){if(s[e]<0)throw new Error(\"pad should be greater than or equal to 1\")}else s.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error(\"kernel shapes need to be greater than 0\");if(s[e]>=n[e]||s[e+n.length]>=n[e])throw new Error(\"pads should be smaller than kernel\")}}static adjustPadsBasedOnAutoPad(t,n,r,a,s,i,o){if(o){if(s.length!==2*(t.length-2))throw new Error(\"length of pads should be twice the length of data dimensions\");if(n.length!==t.length-2)throw new Error(\"length of strides should be the length of data dimensions\");if(a.length!==t.length-2)throw new Error(\"length of kernel shapes should be the length of data dimensions\");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(i?1:2)],n[l],r[l],a[l],s,l,l+t.length-2,o)}}static computePoolOutputShape(t,n,r,a,s,i,o){if(n.length<=0)throw new Error(\"input shape must be of size greater than 0\");const l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,a,s,i,o),l}static computeConvOutputShape(t,n,r,a,s,i,o){if(t.length<=0||n.length<=0)throw new Error(\"invalid input tensor dims or invalid filter tensor dims\");const l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,a,s,i,o),l}static computeShapeHelper(t,n,r,a,s,i,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],a[t],s[t],i[t],o,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,a,s,i,o){const l=n*(r-1)+1;if(!o||\"NOTSET\"===o)return Math.floor((e+a[s]+a[i]-l)/t+1);switch(o){case\"VALID\":return a[s]=0,a[i]=0,Math.floor((e-l)/t+1);case\"SAME_LOWER\":case\"SAME_UPPER\":if(1!==n)throw new Error(\"Dilation not supported for SAME_UPPER or SAME_LOWER\");{const n=((e+t-1)/t-1)*t+r-e;return a[s]=Math.floor(\"SAME_LOWER\"===o?(n+1)/2:n/2),a[i]=n-a[s],Math.floor((e+n-r)/t+1)}default:throw new Error(\"Unsupported AutoPad type\")}}},$t=class{static getShapeOfGemmResult(e,t,n,r,a){if(2!==e.length||2!==n.length)throw new Error(\"shape need to be of size 2\");let s,i,o;t?(s=e[1],i=e[0]):(s=e[0],i=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==i)throw new Error(\"dimension mismatch\");if(s<=0||o<=0||i<=0)throw new Error(\"invalid shape specified\");if(a&&!Mt.isValidBroadcast(a,[s,o]))throw new Error(\"gemm: invalid bias shape for broadcast\");return[s,o,i]}},Ct=-34028234663852886e22,St=34028234663852886e22})),ql=j((()=>{Ol(),jl(),Pt=64,Et=(e,t)=>{if(3===t)throw new Error(\"vec3 has same alignment as vec4, use vec4 instead\");switch(e){case 10:return t>1?`vec${t}<f16>`:\"f16\";case 1:return t>1?`vec${t}<f32>`:\"f32\";case 6:return t>1?`vec${t}<i32>`:\"i32\";case 12:return t>1?`vec${t}<u32>`:\"u32\";case 7:if(t>1)throw new Error(\"currently not supported vecX of uint64 yet\");return[\"vec2<u32>\",\"i32\"];case 13:if(t>1)throw new Error(\"currently not supported vecX of uint64 yet\");return[\"vec2<u32>\",\"u32\"];case 9:if(4!==t)throw new Error(\"bool must be vec4\");return[\"u32\",\"vec4<bool>\"];case 22:return\"i32\";case 21:return\"u32\";default:throw new Error(`Unknown data type: ${e}`)}},Ft=(e,t=1)=>{const n=Et(e,t);return\"string\"==typeof n?n:n[0]},At=(e,t=1)=>{const n=Et(e,t);return\"string\"==typeof n?n:n[1]},It=(...e)=>{const t=[];return e.forEach((e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:Tt.computeStrides(e)})})),t},zt=e=>e%4==0?4:e%2==0?2:1,Ot=(e=\"f32\",t,n=\"0\")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,Bt=(e,t,n)=>\"f32\"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,Lt=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,Dt=(e,t,n,r)=>e.startsWith(\"uniforms.\")&&n>4?\"string\"==typeof t?\"f16\"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:\"f16\"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,Rt=(e,t,n,r,a)=>{let s=\"number\"==typeof n,i=s?n:n.length,o=[...new Array(i).keys()],l=i<2?\"u32\":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,u=Et(t,a),d=\"string\"==typeof u?u:u[1],c=\"string\"==typeof u?u:u[0],p={indices:l,value:d,storage:c,tensor:t},h=e=>\"string\"==typeof e?e:`${e}u`,m={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},f=s?\"uniforms.\":\"\",g=`${f}${e}_shape`,_=`${f}${e}_strides`,w=\"\";for(let e=0;e<i-1;e++)w+=`\\n    let dim${e} = current / ${Dt(_,e,i)};\\n    let rest${e} = current % ${Dt(_,e,i)};\\n    indices[${e}] = dim${e};\\n    current = rest${e};\\n    `;w+=`indices[${i-1}] = current;`;const y=i<2?\"\":`\\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\\n    var indices: ${p.indices};\\n    var current = offset;\\n    ${w}\\n    return indices;\\n  }`,b=[];if(i>=2)for(let e=i-1;e>=0;e--)b.push(`${Dt(_,e,i)} * (indices[${e}])`);const v=i<2?\"\":`\\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\\n    return ${b.join(\"+\")};\\n  }`,x=(...e)=>0===i?\"0u\":`${p.indices}(${e.map(h).join(\",\")})`,M=(e,t)=>i<2?`${e}`:`${Dt(e,t,i)}`,T={},k=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if(\"vec2<u32>\"===p.storage&&\"i32\"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if(\"vec2<u32>\"===p.storage&&\"u32\"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if(\"u32\"===p.storage&&\"vec4<bool>\"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),$=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if(\"vec2<u32>\"===p.storage&&\"i32\"===p.value)return`i32(${e}[${t}].x)`;if(\"vec2<u32>\"===p.storage&&\"u32\"===p.value)return`u32(${e}[${t}].x)`;if(\"u32\"===p.storage&&\"vec4<bool>\"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),C=i<2?\"\":`\\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${d} {\\n    return ${$(`i2o_${e}(indices)`)};\\n  }`,S=i<2?\"\":(()=>{const t=o.map((e=>`d${e}: u32`)).join(\", \"),n=o.map((e=>`d${e}`)).join(\", \");return`\\n  fn get_${e}(${t}) -> ${d} {\\n    return get_${e}ByIndices(${x(n)});\\n  }`})(),P=i<2?\"\":`\\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${d}) {\\n    ${k(`i2o_${e}(indices)`,\"value\")}\\n  }`,E=i<2?\"\":(()=>{const t=o.map((e=>`d${e}: u32`)).join(\", \"),n=o.map((e=>`d${e}`)).join(\", \");return`\\n  fn set_${e}(${t}, value: ${d}) {\\n    set_${e}ByIndices(${x(n)}, value);\\n  }`})();return{impl:()=>{let e=[],t=!1;return m.offsetToIndices&&(e.push(y),t=!0),m.indicesToOffset&&(e.push(v),t=!0),m.broadcastedIndicesToOffset&&(Object.values(T).forEach((t=>e.push(t))),t=!0),m.set&&(e.push(E),t=!0),m.setByIndices&&(e.push(P),t=!0),m.get&&(e.push(S),t=!0),m.getByIndices&&(e.push(C),t=!0),!s&&t&&e.unshift(`const ${g} = ${p.indices}(${n.join(\",\")});`,`const ${_} = ${p.indices}(${Tt.computeStrides(n).join(\",\")});`),e.join(\"\\n\")},type:p,offsetToIndices:t=>(m.offsetToIndices=!0,i<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(m.indicesToOffset=!0,i<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{m.broadcastedIndicesToOffset=!0;const r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in T)return`${r}(${t})`;const a=[];for(let e=i-1;e>=0;e--){const t=n.indicesGet(\"outputIndices\",e+n.rank-i);a.push(`${M(_,e)} * (${t} % ${M(g,e)})`)}return T[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\\n             return ${a.length>0?a.join(\"+\"):\"0u\"};\\n           }`,`${r}(${t})`},indices:x,indicesGet:M,indicesSet:(e,t,n)=>i<2?`${e}=${n};`:`${Dt(e,t,i)}=${n};`,set:(...t)=>{if(t.length!==i+1)throw new Error(`indices length must be ${i}`);const n=t[i];if(\"string\"!=typeof n)throw new Error(\"value must be string\");const r=t.slice(0,i).map(h).join(\",\");return 0===i?k(\"0u\",n):1===i?k(r[0],n):(m.set=!0,m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:k,setByIndices:(t,n)=>i<2?k(t,n):(m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==i)throw new Error(`indices length must be ${i}`);const n=t.map(h).join(\",\");return 0===i?$(\"0u\"):1===i?$(n[0]):(m.get=!0,m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:$,getByIndices:t=>i<2?$(t):(m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:_,shape:g,rank:i}},Nt=(e,t,n,r=1)=>Rt(e,t,n,\"input\",r),Vt=(e,t,n,r=1)=>Rt(e,t,n,\"output\",r),jt=(e,t,n,r=1)=>Rt(e,t,n,\"internal\",r),qt=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${\"number\"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=Pt){const t=\"number\"==typeof e?e:e[0],n=\"number\"==typeof e?1:e[1],r=\"number\"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);const a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\\n  fn main(${a?\"@builtin(global_invocation_id) global_id : vec3<u32>,\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\\n    @builtin(local_invocation_index) local_idx : u32,\\n    @builtin(local_invocation_id) local_id : vec3<u32>\":\"@builtin(global_invocation_id) global_id : vec3<u32>,\\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\\n    @builtin(local_invocation_index) local_idx : u32,\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\\n    @builtin(num_workgroups) num_workgroups : vec3<u32>\"}) {\\n    ${a?\"let global_idx = global_id.x;\\n         let workgroup_index = workgroup_id.x;\":`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\\n             workgroup_id.y * num_workgroups[0] + workgroup_id.x;\\n         let global_idx = workgroup_index * ${t*n*r}u + local_idx;`}\\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith(\"uniforms.\")&&this.uniforms.push({name:e.shape.replace(\"uniforms.\",\"\"),type:\"u32\",length:e.rank}),e.strides.startsWith(\"uniforms.\")&&this.uniforms.push({name:e.strides.replace(\"uniforms.\",\"\"),type:\"u32\",length:e.rank}))}declareVariable(e,t){if(\"internal\"===e.usage)throw new Error(\"cannot use internal variable with declareVariable(). use registerInternalVariables() instead.\");this.variables.push(e),this.appendVariableUniforms(e);const n=\"input\"===e.usage?\"read\":\"read_write\",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map((e=>this.declareVariable(e,this.variableIndex++))).join(\"\\n\")}registerInternalVariable(e){if(\"internal\"!==e.usage)throw new Error(\"cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.\");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return\"\";const e=[];for(const{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)\"f16\"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{const a=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${a}`)}return`\\n      struct Uniforms { ${e.join(\", \")} };\\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join(\"\\n\")+this.internalVariables.map((e=>e.impl())).join(\"\\n\")}get variablesInfo(){if(0===this.uniforms.length)return;const e=e=>[12,10,1,6][[\"u32\",\"f16\",\"f32\",\"i32\"].indexOf(e)];return this.uniforms.map((t=>[e(t.type),t.length??1]))}},Gt=(e,t)=>new qt(e,t),Ut=(e,t)=>{const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}})),Gl=j((()=>{Ol(),jl(),Vl(),ql(),Wt=e=>{if(!e||1!==e.length)throw new Error(\"Transpose requires 1 input.\")},Ht=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Xt=(e,t)=>Tt.sortBasedOnPerm(e,Ht(e.length,t)),Kt=(e,t,n,r)=>{let a=`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\\n    var a: ${n.type.indices};`;for(let r=0;r<t;++r)a+=n.indicesSet(\"a\",e[r],`i[${r}]`);return a+\"return a;}\"},Qt=(e,t)=>{const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);return{newShape:n,newPerm:r}},Yt=(e,t)=>{let n=e.dataType,r=e.dims.length,a=Ht(r,t),s=Xt(e.dims,a),{newShape:i,newPerm:o}=Qt(e.dims,a),l=Tt.areEqual(o,[2,3,1]),u=Tt.areEqual(o,[3,1,2]),d=2===i.length&&o[0]>o[1]||l||u,c=d?i:e.dims,p=s;d&&(c=l?[i[0],i[1]*i[2]]:u?[i[0]*i[1],i[2]]:i,p=[c[1],c[0]]);let h,m=Nt(\"a\",n,c.length),f=Vt(\"output\",n,p.length),g=16;return h=d?e=>`\\n  ${e.registerUniform(\"output_size\",\"u32\").declareVariables(m,f)}\\n  var<workgroup> tile : array<array<${f.type.value}, 17>, 16>;\\n  ${e.mainStart([g,g,1])}\\n    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;\\n    let workgroup_id_x = workgroup_index % stride;\\n    let workgroup_id_y = workgroup_index / stride;\\n    let input_col = workgroup_id_y * 16u + local_id.x;\\n    let input_row = workgroup_id_x * 16u + local_id.y;\\n    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {\\n      tile[local_id.y][local_id.x] = ${m.getByIndices(`${m.type.indices}(input_row, input_col)`)};\\n    }\\n    workgroupBarrier();\\n\\n    let output_col = workgroup_id_x * 16u + local_id.x;\\n    let output_row = workgroup_id_y * 16u + local_id.y;\\n    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {\\n      ${f.setByIndices(`${f.type.indices}(output_row, output_col)`,\"tile[local_id.x][local_id.y]\")}\\n    }\\n  }`:e=>`\\n  ${e.registerUniform(\"output_size\",\"u32\").declareVariables(m,f)}\\n\\n  ${Kt(a,r,m,f)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n\\n    let indices = ${f.offsetToIndices(\"global_idx\")};\\n    let aIndices = perm(indices);\\n\\n    ${f.setByOffset(\"global_idx\",m.getByIndices(\"aIndices\"))}\\n  }`,{name:d?\"TransposeShared\":\"Transpose\",shaderCache:{hint:`${t}`,inputDependencies:[\"rank\"]},getRunData:()=>{const t=Tt.size(s);return{outputs:[{dims:s,dataType:e.dataType}],dispatchGroup:d?{x:Math.ceil(p[1]/g),y:Math.ceil(p[0]/g)}:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...It(c,p)]}},getShaderSource:h}},Zt=(e,t)=>{Wt(e.inputs),e.compute(Yt(e.inputs[0],t.perm))},Jt=e=>vt({perm:e.perm})})),Ul=j((()=>{Ol(),jl(),ql(),Wl(),Gl(),en={max:\"select(bestValue, candidate, candidate > bestValue)\",min:\"select(bestValue, candidate, candidate < bestValue)\",mean:\"bestValue + candidate\",sum:\"bestValue + candidate\",prod:\"bestValue * candidate\",sumSquare:\"bestValue + candidate * candidate\",logSumExp:\"bestValue + exp(candidate)\",l1:\"bestValue + abs(candidate)\",l2:\"bestValue + candidate * candidate\",logSum:\"bestValue + candidate\"},tn={max:\"select(bestValue, candidate, candidate > bestValue)\",min:\"select(bestValue, candidate, candidate < bestValue)\",mean:\"bestValue + candidate\",sum:\"bestValue + candidate\",prod:\"bestValue * candidate\",sumSquare:\"bestValue + candidate\",logSumExp:\"bestValue + candidate\",l1:\"bestValue + candidate\",l2:\"bestValue + candidate\",logSum:\"bestValue + candidate\"},nn={max:\"_A[offset]\",min:\"_A[offset]\",mean:\"0\",sum:\"0\",prod:\"1\",sumSquare:\"0\",logSumExp:\"0\",l1:\"0\",l2:\"0\",logSum:\"0\"},rn={max:\"bestValue\",min:\"bestValue\",sum:\"bestValue\",prod:\"bestValue\",sumSquare:\"bestValue\",logSumExp:\"log(bestValue)\",l1:\"bestValue\",l2:\"sqrt(bestValue)\",logSum:\"log(bestValue)\"},an=(e,t)=>{const n=[];for(let r=t-e;r<t;++r)n.push(r);return n},sn=(e,t)=>{const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]},on=(e,t)=>{let n=e.length+t.length,r=[],a=0;for(let s=0;s<n;s++)-1===t.indexOf(s)?r.push(e[a++]):r.push(1);return r},ln=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},un=(e,t)=>{const n=[];if(!ln(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach((e=>n.push(e)))}return n},dn=(e,t,n,r,a,s,i)=>{const o=n[0].dims,l=Tt.size(s),u=Tt.size(i),d=Nt(\"_A\",n[0].dataType,o),c=Vt(\"output\",a,s);return{name:e,shaderCache:t,getShaderSource:e=>`\\n        ${e.registerUniform(\"reduceSize\",\"u32\").declareVariables(d,c)}\\n        \\n          var<workgroup> aBestValues : array<f32, 32>;\\n       \\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\\n          return ((a - 1u) / b + 1u);\\n         }\\n         ${e.mainStart(32)}\\n\\n          let outputIndex = global_idx / 32;\\n          let offset = outputIndex * uniforms.reduceSize;\\n\\n          var bestValue = f32(${nn[r]});\\n          let Length = uniforms.reduceSize;\\n          for (var k = local_idx; k < Length; k = k + 32) {\\n           let candidate = f32(${d.getByOffset(\"offset + k\")});\\n           bestValue = ${en[r]};\\n          }\\n          aBestValues[local_idx] = bestValue;\\n          workgroupBarrier();\\n\\n         var reduceSize = min(Length, 32u);\\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\\n             currentSize = reduceSize / 2u) {\\n           let interval = DIV_CEIL(reduceSize, 2u);\\n           if (local_idx < currentSize) {\\n            let candidate = aBestValues[local_idx + interval];\\n            bestValue = ${tn[r]};\\n            aBestValues[local_idx] = bestValue;\\n           }\\n           reduceSize = interval;\\n           workgroupBarrier();\\n         }\\n\\n         if (local_idx == 0u) {\\n          ${c.setByOffset(\"outputIndex\",\"\"+(\"mean\"===r?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${rn[r]})`))};\\n         }\\n        }`,getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},cn=(e,t,n,r)=>{let a=1===e.inputs.length?n:kn(e.inputs,n),s=a.axes;0===s.length&&!a.noopWithEmptyAxes&&(s=e.inputs[0].dims.map(((e,t)=>t)));let i=Tt.normalizeAxes(s,e.inputs[0].dims.length),o=i,l=e.inputs[0],u=un(o,e.inputs[0].dims.length);u.length>0&&(l=e.compute(Yt(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=an(o.length,l.dims.length));let[d,c]=sn(l.dims,o),p=d;a.keepDims&&(p=on(d,i)),e.compute(dn(t,{hint:a.cacheKey,inputDependencies:[\"type\"]},[l],r,e.inputs[0].dataType,p,c),{inputs:[l]})},pn=(e,t)=>{cn(e,\"ReduceMeanShared\",t,\"mean\")},hn=(e,t)=>{cn(e,\"ReduceL1Shared\",t,\"l1\")},mn=(e,t)=>{cn(e,\"ReduceL2Shared\",t,\"l2\")},fn=(e,t)=>{cn(e,\"ReduceLogSumExpShared\",t,\"logSumExp\")},gn=(e,t)=>{cn(e,\"ReduceMaxShared\",t,\"max\")},_n=(e,t)=>{cn(e,\"ReduceMinShared\",t,\"min\")},wn=(e,t)=>{cn(e,\"ReduceProdShared\",t,\"prod\")},yn=(e,t)=>{cn(e,\"ReduceSumShared\",t,\"sum\")},bn=(e,t)=>{cn(e,\"ReduceSumSquareShared\",t,\"sumSquare\")},vn=(e,t)=>{cn(e,\"ReduceLogSumShared\",t,\"logSum\")}})),Wl=j((()=>{Ol(),jl(),Vl(),ql(),Ul(),xn=e=>{if(!e||0===e.length||e.length>2)throw new Error(\"Reduce op requires 1 or 2 inputs.\");if(2===e.length&&1!==e[1].dims.length)throw new Error(\"Invalid axes input dims.\")},Mn=e=>[\"\",\"\",`var value = ${e.getByIndices(\"input_indices\")};`,\"\"],Tn=(e,t,n,r,a,s,i=!1,o=!1)=>{const l=[],u=n[0].dims,d=u.length,c=Tt.normalizeAxes(a,d),p=!o&&0===c.length;u.forEach(((e,t)=>{p||c.indexOf(t)>=0?i&&l.push(1):l.push(e)}));const h=l.length,m=Tt.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],a=Nt(\"_A\",n[0].dataType,d),o=Vt(\"output\",s,h),l=r(a,o,c),m=l[2];for(let e=0,n=0;e<d;e++)p||c.indexOf(e)>=0?(i&&n++,m=`for(var j${e}: u32 = 0; j${e} < ${u[e]}; j${e}++) {\\n                  ${l[2].includes(\"last_index\")?`let last_index = j${e};`:\"\"}\\n                  ${a.indicesSet(\"input_indices\",e,`j${e}`)}\\n                  ${m}\\n                }`):(t.push(`${a.indicesSet(\"input_indices\",e,o.indicesGet(\"output_indices\",n))};`),n++);return`\\n\\n        ${e.registerUniform(\"output_size\",\"u32\").declareVariables(a,o)}\\n\\n        ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n          var input_indices: ${a.type.indices};\\n          let output_indices = ${o.offsetToIndices(\"global_idx\")};\\n\\n          ${t.join(\"\\n\")}\\n          ${l[0]}       // init ops for reduce max/min\\n          ${l[1]}\\n          ${m}\\n          ${l[3]}\\n          ${4===l.length?o.setByOffset(\"global_idx\",\"value\"):l.slice(4).join(\"\\n\")}\\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:s}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...It(u,l)]})}},kn=(e,t)=>{const n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),vt({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},$n=(e,t,n,r)=>{const a=e.inputs,s=1===a.length?n:kn(a,n);e.compute(Tn(t,{hint:s.cacheKey,inputDependencies:[\"rank\"]},[a[0]],s.noopWithEmptyAxes&&0===s.axes.length?Mn:r,s.axes,a[0].dataType,s.keepDims,s.noopWithEmptyAxes),{inputs:[0]})},Cn=(e,t)=>{xn(e.inputs),$n(e,\"ReduceLogSum\",t,((e,t)=>[`var value = ${t.type.storage}(0);`,\"\",`value += ${e.getByIndices(\"input_indices\")};`,\"value = log(value);\"]))},Sn=(e,t)=>{xn(e.inputs),$n(e,\"ReduceL1\",t,((e,t)=>[`var value = ${t.type.storage}(0);`,\"\",`value += abs(${e.getByIndices(\"input_indices\")});`,\"\"]))},Pn=(e,t)=>{xn(e.inputs),$n(e,\"ReduceL2\",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,\"\",`t = ${e.getByIndices(\"input_indices\")}; value += (t * t);`,\"value = sqrt(value);\"]))},En=(e,t)=>{xn(e.inputs),$n(e,\"ReduceLogSumExp\",t,((e,t)=>[`var value = ${t.type.storage}(0);`,\"\",`value += exp(${e.getByIndices(\"input_indices\")});`,\"value = log(value);\"]))},Fn=(e,t)=>{xn(e.inputs),$n(e,\"ReduceMax\",t,((e,t,n)=>{const r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet(\"input_indices\",t,0));return[`${r.join(\"\\n\")}`,`var value = ${e.getByIndices(\"input_indices\")};`,`value = max(value, ${e.getByIndices(\"input_indices\")});`,\"\"]}))},An=(e,t)=>{xn(e.inputs),$n(e,\"ReduceMean\",t,((t,n,r)=>{let a=1;for(let n=0;n<t.rank;n++)(r.indexOf(n)>=0||0===r.length)&&(a*=e.inputs[0].dims[n]);return[\"var sum = f32(0);\",\"\",`sum += f32(${t.getByIndices(\"input_indices\")});`,`let value = ${n.type.value}(sum / ${a});`]}))},In=(e,t)=>{xn(e.inputs),$n(e,\"ReduceMin\",t,((e,t,n)=>{const r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join(\"\\n\")}`,`var value = ${e.getByIndices(\"input_indices\")};`,`value = min(value, ${e.getByIndices(\"input_indices\")});`,\"\"]}))},zn=(e,t)=>{xn(e.inputs),$n(e,\"ReduceProd\",t,((e,t)=>[`var value = ${t.type.storage}(1);`,\"\",`value *= ${e.getByIndices(\"input_indices\")};`,\"\"]))},On=(e,t)=>{xn(e.inputs),$n(e,\"ReduceSum\",t,((e,t)=>[`var value = ${t.type.storage}(0);`,\"\",`value += ${e.getByIndices(\"input_indices\")};`,\"\"]))},Bn=(e,t)=>{xn(e.inputs),$n(e,\"ReduceSumSquare\",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,\"\",`t = ${e.getByIndices(\"input_indices\")}; value += t * t;`,\"\"]))},Ln=(e,t,n)=>{if(0===t.length)return n;let r=1,a=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?r*=e[n]:a*=e[n];return a<32&&r>1024},Dn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?An(e,t):pn(e,t)},Rn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sn(e,t):hn(e,t)},Nn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pn(e,t):mn(e,t)},Vn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?En(e,t):fn(e,t)},jn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fn(e,t):gn(e,t)},qn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?In(e,t):_n(e,t)},Gn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zn(e,t):wn(e,t)},Un=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?On(e,t):yn(e,t)},Wn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Bn(e,t):bn(e,t)},Hn=(e,t)=>{Ln(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cn(e,t):vn(e,t)}})),Hl=j((()=>{Ol(),Vl(),Wl(),Xn=e=>{if(!e||0===e.length||e.length>2)throw new Error(\"ArgMinMaxOp op requires 1 or 2 inputs.\");if(1!==e[0].dataType)throw new Error(\"Invalid input type.\")},Kn=(e,t)=>{Xn(e.inputs);e.compute(Tn(\"ArgMin\",{hint:t.cacheKey,inputDependencies:[\"rank\"]},[e.inputs[0]],((e,n,r)=>{const a=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&a.push(`input_indices[${t}] = 0;`);return[`${a.join(\"\\n\")}`,`var value = ${e.getByIndices(\"input_indices\")};\\nvar best_index : i32 = 0;`,`if (${e.getByIndices(\"input_indices\")} ${t.selectLastIndex>0?\"<=\":\"<\"} value) {\\n         value = ${e.getByIndices(\"input_indices\")};\\n         best_index = i32(last_index);\\n       }`,\"\",n.setByOffset(\"global_idx\",\"best_index\")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Qn=(e,t)=>{Xn(e.inputs);e.compute(Tn(\"argMax\",{hint:t.cacheKey,inputDependencies:[\"rank\"]},[e.inputs[0]],((e,n,r)=>{const a=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&a.push(`input_indices[${t}] = 0;`);return[`${a.join(\"\\n\")}`,`var value = ${e.getByIndices(\"input_indices\")};\\nvar best_index : i32 = 0;`,`if (${e.getByIndices(\"input_indices\")} ${t.selectLastIndex>0?\">=\":\">\"} value) {\\n         value = ${e.getByIndices(\"input_indices\")};\\n         best_index = i32(last_index);\\n       }`,\"\",n.setByOffset(\"global_idx\",\"best_index\")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Yn=e=>vt(e)})),Xl=j((()=>{Ol(),jl(),Rl(),ql(),Zn=(e,t)=>{const n=e[0],r=e[1],a=e[2],s=e[3],i=e[4],o=e[5];if(i&&o)throw new Error(\"Attention cannot have both past and attention_bias\");if(3!==n.dims.length)throw new Error('Input \"input\" must have 3 dimensions');const l=n.dims[0],u=n.dims[1],d=n.dims[2];if(1!==a.dims.length)throw new Error('Input \"bias\" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input \"weights\" is expected to have 2 dimensions');if(r.dims[0]!==d)throw new Error(\"Input 1 dimension 0 should have same length as dimension 2 of input 0\");if(a.dims[0]!==r.dims[1])throw new Error('Input \"bias\" dimension 0 should have same length as dimension 1 of input \"weights\"');let c=a.dims[0]/3,p=c,h=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error(\"qkv_hidden_sizes attribute should have 3 elements\");for(const e of t.qkvHiddenSizes)if(e%t.numHeads!=0)throw new Error(\"qkv_hidden_sizes should be divisible by num_heads\");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],h=t.qkvHiddenSizes[2]}const m=u;if(c!==p)throw new Error(\"qkv_hidden_sizes first element should be same as the second\");if(a.dims[0]!==c+p+h)throw new Error('Input \"bias\" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(i){if(p!==h)throw new Error('Input \"past\" expect k_hidden_size == v_hidden_size');if(5!==i.dims.length)throw new Error('Input \"past\" must have 5 dimensions');if(2!==i.dims[0])throw new Error('Input \"past\" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input \"past\" second dimension must be batch_size');if(i.dims[2]!==t.numHeads)throw new Error('Input \"past\" third dimension must be num_heads');if(i.dims[4]!==p/t.numHeads)throw new Error('Input \"past\" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(f=i.dims[3])}const g=m+f;if(s)throw new Error(\"Mask not supported\");if(i)throw new Error(\"past is not supported\");if(o){if(4!==o.dims.length)throw new Error('Input \"attention_bias\" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==t.numHeads||o.dims[2]!==u||o.dims[3]!==g)throw new Error('Expect \"attention_bias\" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:u,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:d,hiddenSize:c,vHiddenSize:h,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(h/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Jn=(e,t,n)=>t&&e?`\\n      let total_sequence_length_input = u32(${t.getByOffset(\"0\")});\\n      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);\\n      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;\\n      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;\\n      total_sequence_length = u32(${e?.getByOffset(\"batchIdx\")}) + 1;\\n      var past_sequence_length: u32 = 0;\\n      if (is_first_prompt == false) {\\n        past_sequence_length = total_sequence_length - sequence_length;\\n      }\\n       `:`\\n    ${n?\"let past_sequence_length = uniforms.past_sequence_length\":\"\"};\\n    let present_sequence_length = total_sequence_length;\\n    `,er=(e,t,n,r,a,s,i,o)=>{let l=zt(i?1:s),u=64,d=s/l;d<u&&(u=32);const c=Math.ceil(s/l/u),p=[{type:12,data:t},{type:12,data:n},{type:12,data:r},{type:12,data:a},{type:12,data:d},{type:12,data:c}],h=Ft(e.dataType,l),m=At(1,l),f=[\"type\"];i&&f.push(\"type\"),o&&f.push(\"type\");return{name:\"AttentionProbsSoftmax\",shaderCache:{hint:`${u};${h};${l}`,inputDependencies:f},getShaderSource:t=>{const n=Vt(\"x\",e.dataType,e.dims,l),r=[n],a=i?Nt(\"seq_lens\",i.dataType,i.dims):void 0;a&&r.push(a);const s=o?Nt(\"total_sequence_length_input\",o.dataType,o.dims):void 0;s&&r.push(s);const d=At(e.dataType);return`\\n  var<workgroup> thread_max: array<f32, ${u}>;\\n  var<workgroup> thread_sum: array<f32, ${u}>;\\n  ${t.registerUniforms([{name:\"batch_size\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"past_sequence_length\",type:\"u32\"},{name:\"sequence_length\",type:\"u32\"},{name:\"total_sequence_length\",type:\"u32\"},{name:\"elements_per_thread\",type:\"u32\"}]).declareVariables(...r)}\\n  ${t.mainStart([u,1,1])}\\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\\n    let headIdx = workgroup_id.z % uniforms.num_heads;\\n    let sequence_length = uniforms.sequence_length;\\n    var total_sequence_length = uniforms.total_sequence_length;\\n    ${Jn(a,s,!1)}\\n    let local_offset = local_idx * uniforms.elements_per_thread;\\n    let offset = (global_idx / ${u}) * uniforms.total_sequence_length + local_offset;\\n    let seq_causal_length = ${i?\"u32(past_sequence_length + workgroup_id.y + 1)\":\"total_sequence_length\"};\\n    var thread_max_vector = ${m}(-3.402823e+38f);\\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\\n      thread_max_vector = max(${m}(x[offset + i]), thread_max_vector);\\n    }\\n    thread_max[local_idx] = ${(()=>{switch(l){case 1:return\"thread_max_vector\";case 2:return\"max(thread_max_vector.x, thread_max_vector.y)\";case 4:return\"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))\";default:throw new Error(`Unsupported components: ${l}`)}})()};\\n    workgroupBarrier();\\n\\n    var max_value =  f32(-3.402823e+38f);\\n    for (var i = 0u; i < ${u}; i++) {\\n      max_value = max(thread_max[i], max_value);\\n    }\\n\\n    var sum_vector = ${m}(0);\\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\\n      sum_vector += exp(${m}(x[offset + i]) - max_value);\\n    }\\n    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return\"sum_vector\";case 2:return\"sum_vector.x + sum_vector.y\";case 4:return\"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w\";default:throw new Error(`Unsupported components: ${l}`)}})()};\\n    workgroupBarrier();\\n\\n    var sum: f32 = 0;\\n    for (var i = 0u; i < ${u}; i++) {\\n      sum += thread_sum[i];\\n    }\\n\\n    if (sum == 0) {\\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\\n        x[offset + i] = ${n.type.value}(${d}(1.0) / ${d}(seq_causal_length));\\n      }\\n    } else {\\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\\n        var f32input = ${m}(x[offset + i]);\\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\\n      }\\n    }\\n      ${i?`\\n        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {\\n          x[offset + total_seq_id] = ${n.type.value}(${d}(0));\\n        }`:\"\"};\\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(s/u),y:a,z:t*n},programUniforms:p})}},tr=(e,t,n,r,a,s,i,o,l)=>{const u=i+s.kvSequenceLength,d=[s.batchSize,s.numHeads,s.sequenceLength,u],c=e>1&&r,p=s.kvNumHeads?s.kvNumHeads:s.numHeads,h=c?[s.batchSize,p,u,s.headSize]:void 0,m=s.nReps?s.nReps:1,f=0===s.scale?1/Math.sqrt(s.headSize):s.scale,g=zt(s.headSize),_=s.headSize/g,w=12,y={x:Math.ceil(u/w),y:Math.ceil(s.sequenceLength/w),z:s.batchSize*s.numHeads},b=[{type:12,data:s.sequenceLength},{type:12,data:_},{type:12,data:u},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:1,data:f},{type:12,data:i},{type:12,data:s.kvSequenceLength},{type:12,data:m}],v=c&&r&&Tt.size(r.dims)>0,x=[\"type\",\"type\"];v&&x.push(\"type\"),a&&x.push(\"type\"),o&&x.push(\"type\"),l&&x.push(\"type\");const M=[{dims:d,dataType:t.dataType,gpuDataType:0}];c&&M.push({dims:h,dataType:t.dataType,gpuDataType:0});return{name:\"AttentionProbs\",shaderCache:{hint:`${g};${void 0!==a};${void 0!==r};${e}`,inputDependencies:x},getRunData:()=>({outputs:M,dispatchGroup:y,programUniforms:b}),getShaderSource:e=>{const s=Nt(\"q\",t.dataType,t.dims,g),i=[s,Nt(\"key\",n.dataType,n.dims,g)];if(v){const e=Nt(\"past_key\",r.dataType,r.dims,g);i.push(e)}a&&i.push(Nt(\"attention_bias\",a.dataType,a.dims));const u=o?Nt(\"seq_lens\",o.dataType,o.dims):void 0;u&&i.push(u);const p=l?Nt(\"total_sequence_length_input\",l.dataType,l.dims):void 0;p&&i.push(p);const f=Vt(\"output\",t.dataType,d),_=[f];c&&_.push(Vt(\"present_key\",t.dataType,h,g));const y=At(1,g);return`\\n  const TILE_SIZE = 12u;\\n\\n  var<workgroup> tileQ: array<${s.type.storage}, 144>;\\n  var<workgroup> tileK: array<${s.type.storage}, 144>;\\n  ${e.registerUniforms([{name:\"M\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"head_size\",type:\"u32\"},{name:\"alpha\",type:\"f32\"},{name:\"past_sequence_length\",type:\"u32\"},{name:\"kv_sequence_length\",type:\"u32\"},{name:\"n_reps\",type:\"u32\"}]).declareVariables(...i,..._)}\\n  ${e.mainStart([w,w,1])}\\n    // x holds the N and y holds the M\\n    let headIdx = workgroup_id.z % uniforms.num_heads;\\n    let kvHeadIdx = ${1===m?\"headIdx\":\"headIdx / uniforms.n_reps\"};\\n    let kv_num_heads = ${1===m?\"uniforms.num_heads\":\"uniforms.num_heads / uniforms.n_reps\"};\\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\\n    let m = workgroup_id.y * TILE_SIZE;\\n    let n = workgroup_id.x * TILE_SIZE;\\n    let sequence_length = uniforms.M;\\n    var total_sequence_length = uniforms.N;\\n    ${Jn(u,p,!0)}\\n    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;\\n    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\\n    ${v&&c?\"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;\":\"\"};\\n    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;\\n    ${c?\"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;\":\"\"}\\n    var value = ${y}(0);\\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\\n      }\\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\\n        var idx = TILE_SIZE * local_id.y + local_id.x;\\n      ${v&&c?\"\\n              if (n + local_id.y < past_sequence_length) {\\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\\n              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\\n                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];\\n              }\":\"\\n          if (n + local_id.y < uniforms.kv_sequence_length) {\\n            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\\n          }\"}\\n      ${c?\"if (n + local_id.y < present_sequence_length) {\\n        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];\\n      }\":\"\"}\\n      }\\n      workgroupBarrier();\\n\\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\\n          value += ${y}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\\n      }\\n\\n      workgroupBarrier();\\n    }\\n\\n    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {\\n      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;\\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\\n      var sum: f32 = ${(()=>{switch(g){case 1:return\"value\";case 2:return\"value.x + value.y\";case 4:return\"value.x + value.y + value.z + value.w\";default:throw new Error(`Unsupported components: ${g}`)}})()};\\n        output[outputIdx] = ${f.type.value} (sum * uniforms.alpha) + ${a?\"attention_bias[outputIdx]\":\"0.0\"};\\n    }\\n  }`}}},nr=(e,t,n,r,a,s,i=void 0,o=void 0)=>{const l=s+a.kvSequenceLength,u=a.nReps?a.nReps:1,d=a.vHiddenSize*u,c=e>1&&r,p=a.kvNumHeads?a.kvNumHeads:a.numHeads,h=c?[a.batchSize,p,l,a.headSize]:void 0,m=[a.batchSize,a.sequenceLength,d],f=12,g={x:Math.ceil(a.vHeadSize/f),y:Math.ceil(a.sequenceLength/f),z:a.batchSize*a.numHeads},_=[{type:12,data:a.sequenceLength},{type:12,data:l},{type:12,data:a.vHeadSize},{type:12,data:a.numHeads},{type:12,data:a.headSize},{type:12,data:d},{type:12,data:s},{type:12,data:a.kvSequenceLength},{type:12,data:u}],w=c&&r&&Tt.size(r.dims)>0,y=[\"type\",\"type\"];w&&y.push(\"type\"),i&&y.push(\"type\"),o&&y.push(\"type\");const b=[{dims:m,dataType:t.dataType,gpuDataType:0}];c&&b.push({dims:h,dataType:t.dataType,gpuDataType:0});return{name:\"AttentionScore\",shaderCache:{hint:`${void 0!==r};${e}`,inputDependencies:y},getRunData:()=>({outputs:b,dispatchGroup:g,programUniforms:_}),getShaderSource:e=>{const a=Nt(\"probs\",t.dataType,t.dims),s=[a,Nt(\"v\",n.dataType,n.dims)];w&&s.push(Nt(\"past_value\",r.dataType,r.dims));const l=i?Nt(\"seq_lens\",i.dataType,i.dims):void 0;i&&s.push(l);const d=o?Nt(\"total_sequence_length_input\",o.dataType,o.dims):void 0;o&&s.push(d);const p=[Vt(\"output\",t.dataType,m)];c&&p.push(Vt(\"present_value\",t.dataType,h));return`\\n  const TILE_SIZE = 12u;\\n  var<workgroup> tileQ: array<${a.type.value}, 144>;\\n  var<workgroup> tileV: array<${a.type.value}, 144>;\\n  ${e.registerUniforms([{name:\"M\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"head_size\",type:\"u32\"},{name:\"v_hidden_size\",type:\"u32\"},{name:\"past_sequence_length\",type:\"u32\"},{name:\"kv_sequence_length\",type:\"u32\"},{name:\"n_reps\",type:\"u32\"}]).declareVariables(...s,...p)}\\n  ${e.mainStart([f,f,1])}\\n   let headIdx = workgroup_id.z % uniforms.num_heads;\\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\\n   let kvHeadIdx = ${1===u?\"headIdx\":\"headIdx / uniforms.n_reps\"};\\n   let kv_num_heads = ${1===u?\"uniforms.num_heads\":\"uniforms.num_heads / uniforms.n_reps\"};\\n   let m = global_id.y;\\n   let n = global_id.x;\\n   let sequence_length = uniforms.M;\\n   var total_sequence_length = uniforms.K;\\n   ${Jn(l,d,!0)}\\n   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\\n   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch\\n   ${w&&c?\"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;\":\"\"};\\n   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;\\n   ${c?\"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;\":\"\"}\\n   var value = ${a.type.storage}(0);\\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\\n      }\\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\\n        var idx = TILE_SIZE * local_id.y + local_id.x;\\n        ${w&&c?\"\\n        if (w + local_id.y < past_sequence_length) {\\n          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\\n        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\\n          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];\\n        }\\n      \":\"\\n            if (w + local_id.y < uniforms.kv_sequence_length) {\\n              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];\\n            }\"}\\n        ${c?\"\\n            if (w + local_id.y < present_sequence_length) {\\n          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];\\n        }\":\"\"}\\n      }\\n     workgroupBarrier();\\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {\\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];\\n     }\\n     workgroupBarrier();\\n   }\\n\\n   // we need to transpose output from BNSH_v to BSND_v\\n   if (m < uniforms.M && n < uniforms.N) {\\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\\n       + headIdx * uniforms.N + n;\\n     output[outputIdx] = value;\\n   }\\n  }`}}},rr=(e,t,n,r,a,s,i,o,l,u,d=void 0,c=void 0)=>{const p=Math.min(e.outputCount,1+(i?1:0)+(o?1:0)),h=p>1?u.pastSequenceLength:0,m=h+u.kvSequenceLength,f=l&&Tt.size(l.dims)>0?l:void 0,g=[t,n];p>1&&i&&Tt.size(i.dims)>0&&g.push(i),f&&g.push(f),d&&g.push(d),c&&g.push(c);const _=e.compute(tr(p,t,n,i,f,u,h,d,c),{inputs:g,outputs:p>1?[-1,1]:[-1]})[0];e.compute(er(_,u.batchSize,u.numHeads,h,u.sequenceLength,m,d,c),{inputs:d&&c?[_,d,c]:[_],outputs:[]});const w=[_,r];p>1&&o&&Tt.size(o.dims)>0&&w.push(o),d&&w.push(d),c&&w.push(c),e.compute(nr(p,_,r,o,u,h,d,c),{inputs:w,outputs:p>1?[0,2]:[0]})},ar=(e,t)=>{const n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,a=t.inputHiddenSize,s=t.headSize,i=12,o={x:Math.ceil(t.headSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],u=[{type:12,data:r},{type:12,data:a},{type:12,data:s},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:\"AttentionPrepare\",shaderCache:{inputDependencies:[\"type\",\"type\",\"type\"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:e=>{const t=Vt(\"output_q\",l[0].dataType,n),r=Vt(\"output_k\",l[0].dataType,n),a=Vt(\"output_v\",l[0].dataType,n),s=Nt(\"input\",l[0].dataType,l[0].dims),o=Nt(\"weight\",l[1].dataType,l[1].dims),u=Nt(\"bias\",l[2].dataType,l[2].dims),d=s.type.storage;return`\\n  const TILE_SIZE = 12u;\\n  var<workgroup> tileInput: array<${d}, 144>;\\n  var<workgroup> tileWeightQ: array<${d}, 144>;\\n  var<workgroup> tileWeightK: array<${d}, 144>;\\n  var<workgroup> tileWeightV: array<${d}, 144>;\\n  ${e.registerUniforms([{name:\"M\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"num_heads\",type:\"u32\"},{name:\"head_size\",type:\"u32\"},{name:\"hidden_size\",type:\"u32\"},{name:\"ldb\",type:\"u32\"}]).declareVariables(s,o,u,t,r,a)}\\n  ${e.mainStart([i,i,1])}\\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\\n    let headNumber = workgroup_id.z % uniforms.num_heads;\\n    let m = global_id.y;\\n    let n = global_id.x;\\n\\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\\n    let biasOffsetQ = headNumber * uniforms.head_size;\\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\\n\\n    var valueQ = ${d}(0);\\n    var valueK = ${d}(0);\\n    var valueV = ${d}(0);\\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\\n      }\\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\\n        let offset = n + (w + local_id.y) * uniforms.ldb;\\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\\n      }\\n      workgroupBarrier();\\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\\n      }\\n\\n      workgroupBarrier();\\n    }\\n\\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\\n    valueQ += bias[headOffset + biasOffsetQ];\\n    valueK += bias[headOffset + biasOffsetK];\\n    valueV += bias[headOffset + biasOffsetV];\\n\\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\\n    if (m < uniforms.M && n < uniforms.N) {\\n      let outputIdx = offset + m * uniforms.N + n;\\n      output_q[outputIdx] = valueQ;\\n      output_k[outputIdx] = valueK;\\n      output_v[outputIdx] = valueV;\\n    }\\n  }`}},{inputs:l,outputs:[-1,-1,-1]})},sr=(e,t)=>{const n=Zn(e.inputs,t),[r,a,s]=ar(e,n);return rr(e,r,a,s,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n)}})),Kl=j((()=>{pe(),Ol(),jl(),Vl(),ql(),ir=(e,t)=>{if(!e||5!==e.length)throw new Error(\"BatchNormalization requires 5 inputs\");const n=(e,t,n)=>{const r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach(((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)}))};if(e[0].dims.length>1){const r=\"NHWC\"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,\"Invalid input scale\"),n(e[2].dims,r,\"Invalid input B\"),n(e[3].dims,r,\"Invalid input mean\"),n(e[4].dims,r,\"Invalid input var\")}else n(e[1].dims,[1],\"Invalid input scale\"),n(e[2].dims,[1],\"Invalid input B\"),n(e[3].dims,[1],\"Invalid input mean\"),n(e[4].dims,[1],\"Invalid input var\")},or=(e,t)=>{let{epsilon:n,spatial:r,format:a}=t,s=e[0].dims,i=r?zt(s[s.length-1]):1,o=\"NHWC\"===a&&s.length>1?i:1,l=Tt.size(s)/i,u=r,d=u?s.length:s,c=Nt(\"x\",e[0].dataType,e[0].dims,i),p=Nt(\"scale\",e[1].dataType,e[1].dims,o),h=Nt(\"bias\",e[2].dataType,e[2].dims,o),m=Nt(\"inputMean\",e[3].dataType,e[3].dims,o),f=Nt(\"inputVar\",e[4].dataType,e[4].dims,o),g=Vt(\"y\",e[0].dataType,d,i);return{name:\"BatchNormalization\",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${i}`,inputDependencies:u?[\"rank\",\"type\",\"type\",\"type\",\"type\"]:void 0},getShaderSource:e=>`\\n  const epsilon = ${n};\\n  ${e.registerUniform(\"outputSize\",\"u32\").declareVariables(c,p,h,m,f,g)}\\n  ${e.mainStart()}\\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n    var outputIndices = ${g.offsetToIndices(`global_idx * ${i}`)};\\n    ${(()=>{let e=\"\";if(r)e=`let cOffset = ${1===s.length?\"0u\":\"NHWC\"===a?`outputIndices[${s.length-1}] / ${i}`:\"outputIndices[1]\"};`;else if(\"NCHW\"===a)e=`\\n            ${g.indicesSet(\"outputIndices\",\"0\",\"0\")}\\n            let cOffset = ${g.indicesToOffset(\"outputIndices\")};`;else{e=`var cIndices = ${p.type.indices}(0);\\n                       cIndices[0] = outputIndices[${s.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset(\"cIndices\")};`}return e})()}\\n    let scale = ${p.getByOffset(\"cOffset\")};\\n    let bias = ${h.getByOffset(\"cOffset\")};\\n    let inputMean = ${m.getByOffset(\"cOffset\")};\\n    let inputVar = ${f.getByOffset(\"cOffset\")};\\n    let x = ${c.getByOffset(\"global_idx\")};\\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\\n    ${g.setByOffset(\"global_idx\",\"value\")}\\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...It(s)]:[{type:12,data:l}]})}},lr=e=>vt(e),ur=(e,t)=>{let{inputs:n,outputCount:r}=e,a=lr({...t,outputCount:r});if(p.webgpu.validateInputContent&&ir(n,a),t.trainingMode)throw new Error(\"BatchNormalization trainingMode is not supported yet.\");e.compute(or(n,a))}})),Ql=j((()=>{jl(),ql(),dr=e=>{if(3!==e[0].dims.length)throw new Error(\"input should have 3 dimensions\");if(![320,640,1280].includes(e[0].dims[2]))throw new Error(\"number of channels should be 320, 640 or 1280\");if(1!==e[1].dims.length)throw new Error(\"bias is expected to have 1 dimensions\");if(e[0].dims[2]!==e[1].dims[0])throw new Error(\"last dimension of input and bias are not the same\")},cr=e=>{const t=e[0].dims,n=e[0].dims[2],r=Tt.size(t)/4,a=e[0].dataType,s=Nt(\"input\",a,t,4),i=Nt(\"bias\",a,[n],4),o=Nt(\"residual\",a,t,4),l=Vt(\"output\",a,t,4);return{name:\"BiasAdd\",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\\n  const channels = ${n}u / 4;\\n  ${e.declareVariables(s,i,o,l)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\\n    let value = ${s.getByOffset(\"global_idx\")}\\n      + ${i.getByOffset(\"global_idx % channels\")} + ${o.getByOffset(\"global_idx\")};\\n    ${l.setByOffset(\"global_idx\",\"value\")}\\n  }`}},pr=e=>{dr(e.inputs),e.compute(cr(e.inputs))}})),Yl=j((()=>{Ol(),jl(),Vl(),ql(),hr=(e,t,n,r,a,s,i)=>{let o=Math.ceil(t/4),l=\"\";l=\"string\"==typeof a?`${a}(a)`:a(\"a\");const u=Nt(\"inputData\",n,[o],4),d=Vt(\"outputData\",r,[o],4),c=[{name:\"vec_size\",type:\"u32\"}];return i&&c.push(...i),`\\n      ${e.registerUniforms(c).declareVariables(u,d)}\\n\\n  ${s??\"\"}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\\n\\n    let a = ${u.getByOffset(\"global_idx\")};\\n    ${d.setByOffset(\"global_idx\",l)}\\n  }`},mr=(e,t,n,r,a,s=e.dataType,i,o)=>{const l=[{type:12,data:Math.ceil(Tt.size(e.dims)/4)}];return i&&l.push(...i),{name:t,shaderCache:{hint:a,inputDependencies:[\"type\"]},getShaderSource:t=>hr(t,Tt.size(e.dims),e.dataType,s,n,r,o),getRunData:t=>({outputs:[{dims:e.dims,dataType:s}],dispatchGroup:{x:Math.ceil(Tt.size(t[0].dims)/64/4)},programUniforms:l})}},fr=e=>{e.compute(mr(e.inputs[0],\"Abs\",\"abs\"))},gr=e=>{e.compute(mr(e.inputs[0],\"Acos\",\"acos\"))},_r=e=>{e.compute(mr(e.inputs[0],\"Acosh\",\"acosh\"))},wr=e=>{e.compute(mr(e.inputs[0],\"Asin\",\"asin\"))},yr=e=>{e.compute(mr(e.inputs[0],\"Asinh\",\"asinh\"))},br=e=>{e.compute(mr(e.inputs[0],\"Atan\",\"atan\"))},vr=e=>{e.compute(mr(e.inputs[0],\"Atanh\",\"atanh\"))},xr=e=>vt(e),Mr=(e,t)=>{let n;switch(t.to){case 10:n=\"vec4<f16>\";break;case 1:n=\"vec4<f32>\";break;case 12:n=\"vec4<u32>\";break;case 6:n=\"vec4<i32>\";break;case 9:n=\"vec4<bool>\";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(mr(e.inputs[0],\"Cast\",n,void 0,t.cacheKey,t.to))},Tr=e=>{let t,n,r=e.length>=2&&0!==e[1].data,a=e.length>=3&&0!==e[2].data;switch(e[0].dataType){case 1:t=r?e[1].getFloat32Array()[0]:-34028234663852886e22,n=a?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=r?e[1].getUint16Array()[0]:64511,n=a?e[2].getUint16Array()[0]:31743;break;default:throw new Error(\"Unsupport data type\")}return vt({min:t,max:n})},kr=(e,t)=>{const n=t||Tr(e.inputs),r=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"Clip\",(e=>`clamp(${e}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`),void 0,n.cacheKey,void 0,[{type:e.inputs[0].dataType,data:n.min},{type:e.inputs[0].dataType,data:n.max}],[{name:\"min\",type:r},{name:\"max\",type:r}]),{inputs:[0]})},$r=e=>{e.compute(mr(e.inputs[0],\"Ceil\",\"ceil\"))},Cr=e=>{e.compute(mr(e.inputs[0],\"Cos\",\"cos\"))},Sr=e=>{e.compute(mr(e.inputs[0],\"Cosh\",\"cosh\"))},Pr=e=>vt(e),Er=(e,t)=>{const n=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"Elu\",(e=>`elu_vf32(${e})`),`\\n  const elu_alpha_ = ${n}(${t.alpha});\\n\\n  fn elu_f32(a: ${n}) -> ${n} {\\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\\n  }\\n\\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\\n  }`,t.cacheKey))},Fr=(e=\"f32\")=>`\\nconst r0: ${e} = 0.3275911;\\nconst r1: ${e} = 0.254829592;\\nconst r2: ${e} = -0.284496736;\\nconst r3: ${e} = 1.421413741;\\nconst r4: ${e} = -1.453152027;\\nconst r5: ${e} = 1.061405429;\\n\\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\\n  let absv = abs(v);\\n  let x = 1.0 / (1.0 + r0 * absv);\\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\\n}`,Ar=e=>{const t=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"Erf\",(e=>`erf_vf32(${e})`),Fr(t)))},Ir=e=>{e.compute(mr(e.inputs[0],\"Exp\",\"exp\"))},zr=e=>{e.compute(mr(e.inputs[0],\"Floor\",\"floor\"))},Or=e=>{const t=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"Gelu\",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),Fr(t)))},Br=(e,t)=>{const n=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"LeakyRelu\",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},Lr=e=>{e.compute(mr(e.inputs[0],\"Not\",(e=>`!${e}`)))},Dr=e=>{e.compute(mr(e.inputs[0],\"Neg\",(e=>`-${e}`)))},Rr=e=>{e.compute(mr(e.inputs[0],\"Reciprocal\",(e=>`1.0/${e}`)))},Nr=e=>{const t=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"Relu\",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},Vr=e=>{e.compute(mr(e.inputs[0],\"Sigmoid\",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},jr=e=>vt(e),qr=(e,t)=>{const n=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"HardSigmoid\",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},Gr=e=>{e.compute(mr(e.inputs[0],\"Sin\",\"sin\"))},Ur=e=>{e.compute(mr(e.inputs[0],\"Sinh\",\"sinh\"))},Wr=e=>{e.compute(mr(e.inputs[0],\"Sqrt\",\"sqrt\"))},Hr=e=>{e.compute(mr(e.inputs[0],\"Tan\",\"tan\"))},Xr=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Kr=e=>{e.compute(mr(e.inputs[0],\"Tanh\",Xr))},Qr=(e=\"f32\")=>`\\nconst fast_gelu_a: ${e} = 0.5;\\nconst fast_gelu_b: ${e} = 0.7978845608028654;\\nconst fast_gelu_c: ${e} = 0.035677408136300125;\\n\\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\\n  return ${Xr(\"v\")};\\n}\\n`,Yr=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Zr=e=>{const t=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"FastGelu\",Yr,Qr(t),void 0,e.inputs[0].dataType))},Jr=(e,t)=>{const n=At(e.inputs[0].dataType);return e.compute(mr(e.inputs[0],\"ThresholdedRelu\",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},ea=e=>{e.compute(mr(e.inputs[0],\"Log\",\"log\"))},ta=(e,t)=>`\\nconst alpha = vec4<${e}>(${t});\\nconst one = ${e}(1.0);\\nconst zero = ${e}(0.0);\\n\\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\\n  let v = x *alpha;\\n  var x1 : vec4<${e}>;\\n  for (var i = 0; i < 4; i = i + 1) {\\n    if (v[i] >= zero) {\\n      x1[i] = one / (one + exp(-v[i]));\\n    } else {\\n      x1[i] = one - one / (one + exp(v[i]));\\n    }\\n  }\\n  return x * x1;\\n}\\n`,na=e=>`quick_gelu_impl(${e})`,ra=(e,t)=>{const n=At(e.inputs[0].dataType);e.compute(mr(e.inputs[0],\"QuickGelu\",na,ta(n,t.alpha),t.cacheKey,e.inputs[0].dataType))}})),Zl=j((()=>{jl(),ql(),Yl(),aa=e=>{if(3!==e[0].dims.length)throw new Error(\"input should have 3 dimensions\");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error(\"hidden state should be 2560, 5120 or 10240\");if(1!==e[1].dims.length)throw new Error(\"bias is expected to have 1 dimensions\");if(e[0].dims[2]!==e[1].dims[0])throw new Error(\"last dimension of input and bias are not the same\")},sa=e=>{const t=e[0].dims.slice();t[2]=t[2]/2;const n=Nt(\"input\",e[0].dataType,e[0].dims,4),r=Nt(\"bias\",e[0].dataType,[e[0].dims[2]],4),a=Vt(\"output\",e[0].dataType,t,4),s=Tt.size(t)/4,i=Ft(e[0].dataType);return{name:\"BiasSplitGelu\",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:t=>`\\n  const M_SQRT2 = sqrt(2.0);\\n  const halfChannels = ${e[0].dims[2]/4/2}u;\\n\\n  ${t.declareVariables(n,r,a)}\\n\\n  ${Fr(i)}\\n\\n  ${t.mainStart()}\\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(s)}\\n    let biasIdx = global_idx % halfChannels;\\n    let batchIndex = global_idx / halfChannels;\\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\\n    let valueLeft = input[inputOffset] + bias[biasIdx];\\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\\n\\n    ${a.setByOffset(\"global_idx\",\"valueLeft * geluRight\")}\\n  }`}},ia=e=>{aa(e.inputs),e.compute(sa(e.inputs))}})),Jl=j((()=>{Ol(),jl(),ql(),oa=(e,t,n,r,a,s,i,o,l,u,d,c)=>{let p,h;\"string\"==typeof o?p=h=(e,t)=>`${o}((${e}),(${t}))`:\"function\"==typeof o?p=h=o:(p=o.scalar,h=o.vector);let m,f=Vt(\"outputData\",d,r.length,4),g=Nt(\"aData\",l,t.length,4),_=Nt(\"bData\",u,n.length,4);if(a)if(s){const e=1===Tt.size(t),r=1===Tt.size(n),a=t.length>0&&t[t.length-1]%4==0,s=n.length>0&&n[n.length-1]%4==0;m=e||r?f.setByOffset(\"global_idx\",h(e?`${g.type.value}(${g.getByOffset(\"0\")}.x)`:g.getByOffset(\"global_idx\"),r?`${_.type.value}(${_.getByOffset(\"0\")}.x)`:_.getByOffset(\"global_idx\"))):`\\n            let outputIndices = ${f.offsetToIndices(\"global_idx * 4u\")};\\n            let offsetA = ${g.broadcastedIndicesToOffset(\"outputIndices\",f)};\\n            let offsetB = ${_.broadcastedIndicesToOffset(\"outputIndices\",f)};\\n            ${f.setByOffset(\"global_idx\",h(i||a?g.getByOffset(\"offsetA / 4u\"):`${g.type.value}(${g.getByOffset(\"offsetA / 4u\")}[offsetA % 4u])`,i||s?_.getByOffset(\"offsetB / 4u\"):`${_.type.value}(${_.getByOffset(\"offsetB / 4u\")}[offsetB % 4u])`))}\\n          `}else m=f.setByOffset(\"global_idx\",h(g.getByOffset(\"global_idx\"),_.getByOffset(\"global_idx\")));else{if(!s)throw new Error(\"no necessary to use scalar implementation for element-wise binary op implementation.\");const e=(e,t,n=\"\")=>{const r=`aData[indexA${t}][componentA${t}]`,a=`bData[indexB${t}][componentB${t}]`;return`\\n            let outputIndices${t} = ${f.offsetToIndices(`global_idx * 4u + ${t}u`)};\\n            let offsetA${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\\n            let offsetB${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\\n            let indexA${t} = offsetA${t} / 4u;\\n            let indexB${t} = offsetB${t} / 4u;\\n            let componentA${t} = offsetA${t} % 4u;\\n            let componentB${t} = offsetB${t} % 4u;\\n            ${e}[${t}] = ${n}(${p(r,a)});\\n          `};m=9===d?`\\n            var data = vec4<u32>(0);\\n            ${e(\"data\",0,\"u32\")}\\n            ${e(\"data\",1,\"u32\")}\\n            ${e(\"data\",2,\"u32\")}\\n            ${e(\"data\",3,\"u32\")}\\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\\n            ${e(\"outputData[global_idx]\",0)}\\n            ${e(\"outputData[global_idx]\",1)}\\n            ${e(\"outputData[global_idx]\",2)}\\n            ${e(\"outputData[global_idx]\",3)}\\n          `}return`\\n        ${e.registerUniform(\"vec_size\",\"u32\").declareVariables(g,_,f)}\\n\\n        ${c??\"\"}\\n\\n        ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\\n        ${m}\\n      }`},la=(e,t,n,r,a,s,i=n.dataType)=>{let o=!Tt.areEqual(n.dims,r.dims),l=n.dims,u=Tt.size(n.dims),d=!1,c=!1,p=[o];if(o){const e=Mt.calcShape(n.dims,r.dims,!1);if(!e)throw new Error(\"Can't perform binary op on the given tensors\");l=e,u=Tt.size(l);const t=1===Tt.size(n.dims),a=1===Tt.size(r.dims),s=n.dims.length>0&&n.dims[n.dims.length-1]%4==0,i=r.dims.length>0&&r.dims[r.dims.length-1]%4==0;p.push(t),p.push(a),p.push(s),p.push(i);let o=1;for(let e=1;e<l.length;e++){const t=n.dims[n.dims.length-e]??1;if(t!==(r.dims[r.dims.length-e]??1))break;o*=t}o%4==0?(c=!0,d=!0):(t||a||s||i)&&(d=!0)}else d=!0;return p.push(d),{name:e,shaderCache:{hint:t+p.map((e=>e.toString())).join(\"_\"),inputDependencies:[\"rank\",\"rank\"]},getShaderSource:e=>oa(e,n.dims,r.dims,l,d,o,c,a,n.dataType,r.dataType,i,s),getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(Tt.size(l)/4)},...It(n.dims,r.dims,l)]})}},ua=(e,t,n,r,a,s)=>{e.compute(la(t,a??\"\",e.inputs[0],e.inputs[1],n,r,s))},da=e=>{ua(e,\"Add\",((e,t)=>`${e}+${t}`))},ca=e=>{ua(e,\"Div\",((e,t)=>`${e}/${t}`))},pa=e=>{ua(e,\"Equal\",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},ha=e=>{ua(e,\"Mul\",((e,t)=>`${e}*${t}`))},ma=e=>{const t=Nt(\"input\",e.inputs[0].dataType,e.inputs[0].dims).type.value;ua(e,\"Pow\",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\\n      if (b == ${t}(0.0)) {\\n        return ${t}(1.0);\\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\\n        return ${t}(pow(f32(a), f32(b))); // NaN\\n      }\\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${\"i32\"===t?\"round\":\"\"}(pow(f32(abs(a)), f32(b))));\\n    }\\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\\n      // TODO: implement vectorized pow\\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\\n    }\\n      `)},fa=e=>{ua(e,\"Sub\",((e,t)=>`${e}-${t}`))},ga=e=>{ua(e,\"Greater\",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},_a=e=>{ua(e,\"Less\",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},wa=e=>{ua(e,\"GreaterOrEqual\",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},ya=e=>{ua(e,\"LessOrEqual\",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),eu=j((()=>{Ol(),jl(),Vl(),ql(),ba=(e,t)=>{if(!e||e.length<1)throw new Error(\"too few inputs\");const n=e[0],r=n.dataType,a=n.dims.length;e.forEach(((e,s)=>{if(0!==s){if(e.dataType!==r)throw new Error(\"input tensors should be one type\");if(e.dims.length!==a)throw new Error(\"input tensors should have the same shape\");e.dims.forEach(((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error(\"non concat dimensions must match\")}))}}))},va=(e,t)=>`\\n  fn calculateInputIndex(index: u32) -> u32 {\\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\\n      if (index < sizeInConcatAxis[i]) {\\n        return i;\\n      }\\n    }\\n    return ${e}u;\\n  }`,xa=(e,t)=>{const n=e.length,r=[];for(let a=0;a<n;++a){const s=t.setByOffset(\"global_idx\",e[a].getByIndices(\"indices\"));1===n?r.push(s):0===a?r.push(`if (inputIndex == ${a}u) { ${s} }`):a===n-1?r.push(`else { ${s} }`):r.push(`else if (inputIndex == ${a}) { ${s} }`)}return r.join(\"\\n\")},Ma=(e,t,n,r)=>{let a=Tt.size(n),s=new Array(e.length),i=new Array(e.length),o=0,l=[],u=[],d=[{type:12,data:a}];for(let n=0;n<e.length;++n)o+=e[n].dims[t],s[n]=o,u.push(e[n].dims.length),i[n]=Nt(`input${n}`,r,u[n]),l.push(\"rank\"),d.push({type:12,data:s[n]});for(let t=0;t<e.length;++t)d.push(...It(e[t].dims));d.push(...It(n));const c=Vt(\"output\",r,n.length),p=c.indicesGet(\"indices\",t),h=Array.from(Array(s.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(\",\");return{name:\"Concat\",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:t=>`\\n\\n  ${(()=>{t.registerUniform(\"outputSize\",\"u32\");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,\"u32\");return t.declareVariables(...i,c)})()}\\n\\n  ${va(s.length,h)}\\n\\n  ${t.mainStart()}\\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n\\n    var indices = ${c.offsetToIndices(\"global_idx\")};\\n\\n    let inputIndex = calculateInputIndex(${p});\\n    if (inputIndex != 0u) {\\n      let sizeInConcatAxis = array<u32, ${s.length}u>(${h});\\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\\n    }\\n\\n    ${xa(i,c)}\\n  }`}},Ta=(e,t)=>{const n=e.inputs,r=n[0].dims,a=Tt.normalizeAxis(t.axis,r.length);ba(n,a);const s=r.slice();s[a]=n.reduce(((e,t)=>e+(t.dims.length>a?t.dims[a]:0)),0);const i=n.filter((e=>Tt.size(e.dims)>0));e.compute(Ma(i,a,s,n[0].dataType),{inputs:i})},ka=e=>vt({axis:e.axis})})),tu=j((()=>{Ol(),jl(),$a=(e,t,n=\"f32\")=>{switch(e.activation){case\"Relu\":return`value = max(value, ${t}(0.0));`;case\"Sigmoid\":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case\"Clip\":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case\"HardSigmoid\":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case\"LeakyRelu\":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case\"Tanh\":return\"let e2x = exp(-2.0 * abs(value));\\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\\n        \";case\"\":return\"\";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ca=(e,t)=>{\"Clip\"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):\"HardSigmoid\"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):\"LeakyRelu\"===e.activation&&t.push({type:1,data:e.alpha})},Sa=(e,t)=>{\"Clip\"===e.activation?t.push({name:\"clip_max\",type:\"f32\"},{name:\"clip_min\",type:\"f32\"}):\"HardSigmoid\"===e.activation?t.push({name:\"alpha\",type:\"f32\"},{name:\"beta\",type:\"f32\"}):\"LeakyRelu\"===e.activation&&t.push({name:\"alpha\",type:\"f32\"})},Pa=e=>{const t=e?.activation||\"\";if(\"HardSigmoid\"===t){const[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if(\"Clip\"===t){const[n,r]=e?.activation_params||[Ct,St];return{activation:t,clipMax:r,clipMin:n}}if(\"LeakyRelu\"===t){const[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),nu=j((()=>{Ea=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Fa=e=>`\\n      ${e?\"value = value + getBiasByOutputCoords(coords);\":\"\"}\\n      `})),ru=j((()=>{Aa=e=>`\\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\\n  return dot(coords, vec4<i32>(\\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\\n}\\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\\n  return dot(coords, vec4<i32>(\\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\\n}\\n`})),au=j((()=>{Ol(),jl(),ql(),tu(),nu(),Ia=(e,t)=>e?`\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n          kStart + inputRow,\\n          globalRowStart / innerElementSize + inputCol${t?\", batchIndices\":\"\"});\\n        `:`\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n          globalRow + innerRow,\\n          kStart / innerElementSize + inputCol${t?\", batchIndices\":\"\"});\\n        `,za=(e,t)=>e?`\\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\\n        ${3===t?\"\":\"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];\"}\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\n          acc[i] = BCached0 * ACached0[i] + acc[i];\\n          acc[i] = BCached1 * ACached1[i] + acc[i];\\n          acc[i] = BCached2 * ACached2[i] + acc[i];\\n          ${3===t?\"\":\"acc[i] = BCached3 * ACached3[i] + acc[i];\"}\\n        }`:`\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\n          let ACached = mm_Asub[tileRow + i][k];\\n          acc[i] = BCached0 * ACached.x + acc[i];\\n          acc[i] = BCached1 * ACached.y + acc[i];\\n          acc[i] = BCached2 * ACached.z + acc[i];\\n          ${3===t?\"\":\"acc[i] = BCached3 * ACached.w + acc[i];\"}\\n        }`,Oa=(e,t,n=\"f32\",r,a=!1,s=32,i=!1,o=32)=>{const l=t[1]*e[1],u=t[0]*e[0],d=a?l:s,c=a?s:l,p=d/t[0],h=s/t[1];if((!a||4!==p||4!==e[1])&&(a||3!==p&&4!==p)||d%t[0]!=0||s%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${a} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\\n      Otherwise, innerElementSize ${p} must be 3 or 4.\\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${d/p}>, ${c}>;\\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${u/e[0]}>, ${s}>;\\n\\nconst rowPerThread = ${e[1]};\\nconst colPerThread = ${e[0]};\\nconst innerElementSize = ${p};\\nconst tileInner = ${s};\\n\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\n  let localRow = i32(localId.y);\\n  let tileRow = localRow * rowPerThread;\\n  let tileCol = i32(localId.x);\\n\\n  let globalRow =i32(globalId.y) * rowPerThread;\\n  let globalCol = i32(globalId.x);\\n  let batch = ${i?\"0\":\"i32(globalId.z)\"};\\n  ${r?`let batchIndices = ${r.offsetToIndices(\"u32(batch)\")};`:\"\"}\\n  let globalRowStart = i32(workgroupId.y) * ${l};\\n\\n  let num_tiles = ${i?`${Math.ceil(o/s)}`:\"(uniforms.dim_inner - 1) / tileInner + 1\"};\\n  var kStart = ${i?`i32(globalId.z) * ${o}`:\"0\"};\\n\\n  var acc: array<vec4<${n}>, rowPerThread>;\\n\\n  // Loop over shared dimension.\\n  let tileRowB = localRow * ${h};\\n  for (var t = 0; t < num_tiles; t = t + 1) {\\n      // Load one tile of A into local memory.\\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n          let inputRow = tileRow + innerRow;\\n          let inputCol = tileCol;\\n          ${Ia(a,r)}\\n      }\\n\\n      // Load one tile of B into local memory.\\n      for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\\n          let inputRow = tileRowB + innerRow;\\n          let inputCol = tileCol;\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?\", batchIndices\":\"\"});\\n      }\\n      kStart = kStart + tileInner;\\n      workgroupBarrier();\\n\\n      // Compute acc values for a single thread.\\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\\n          ${3===p?\"\":\"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];\"}\\n\\n          ${za(a,p)}\\n      }\\n\\n      workgroupBarrier();\\n  }\\n\\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\\n  }\\n}`},Ba=(e,t)=>e?`\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n              kStart + inputRow,\\n              globalRowStart + inputCol${t?\", batchIndices\":\"\"});\\n            `:`\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\n              globalRowStart + inputRow,\\n              kStart + inputCol${t?\", batchIndices\":\"\"});\\n            `,La=e=>e?\"let ACached = mm_Asub[k][tileRow + innerRow];\":\"let ACached = mm_Asub[tileRow + innerRow][k];\",Da=(e,t,n=\"f32\",r,a=!1,s=32,i=!1,o=32,l=!1)=>{const u=e[1]*t[1],d=e[0]*t[0],c=a?u:s,p=a?s:u;if(p%t[1]!=0||c%t[0]!=0||s%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${s} must be divisible by workgroupSize[1]${t[1]}`);const h=p/t[1],m=c/t[0],f=s/t[1],g=l?`\\n    let localRow = i32(localId.y);\\n    let localCol = i32(localId.x);\\n    let globalRowStart = i32(workgroupId.y) * ${u};\\n    let globalColStart = i32(workgroupId.x) * ${d};\\n\\n    // Loop over shared dimension.\\n    for (var t = 0; t < num_tiles; t = t + 1) {\\n      // Load one tile of A into local memory.\\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\\n          ${Ba(a,r)}\\n        }\\n      }\\n      // Load one tile of B into local memory.\\n      for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${t[1]}) {\\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\n            kStart + inputRow,\\n            globalColStart + inputCol${r?\", batchIndices\":\"\"});\\n        }\\n      }\\n      kStart = kStart + tileInner;\\n      workgroupBarrier();\\n\\n      // Compute acc values for a single thread.\\n      var BCached : array<${n}, colPerThread>;\\n      for (var k = 0; k < tileInner; k = k + 1) {\\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\\n        }\\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\\n                ACached * BCached[innerCol];\\n          }\\n        }\\n      }\\n      workgroupBarrier();\\n    }\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\\n      }\\n    }\\n    `:`\\nlet tileRow = i32(localId.y) * rowPerThread;\\nlet tileCol = i32(localId.x) * colPerThread;\\n\\nlet globalRow = i32(globalId.y) * rowPerThread;\\nlet globalCol = i32(globalId.x) * colPerThread;\\nlet globalRowStart = i32(workgroupId.y) * ${u};\\n\\nlet tileRowA = i32(localId.y) * ${h};\\nlet tileColA = i32(localId.x) * ${m};\\nlet tileRowB = i32(localId.y) * ${f};\\n// Loop over shared dimension.\\nfor (var t = 0; t < num_tiles; t = t + 1) {\\n  // Load one tile of A into local memory.\\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\\n    for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {\\n      let inputRow = tileRowA + innerRow;\\n      let inputCol = tileColA + innerCol;\\n      ${Ba(a,r)}\\n    }\\n  }\\n\\n  // Load one tile of B into local memory.\\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n      let inputRow = tileRowB + innerRow;\\n      let inputCol = tileCol + innerCol;\\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\n        kStart + inputRow,\\n        globalCol + innerCol${r?\", batchIndices\":\"\"});\\n    }\\n  }\\n  kStart = kStart + tileInner;\\n  workgroupBarrier();\\n\\n  // Compute acc values for a single thread.\\n  var BCached : array<${n}, colPerThread>;\\n  for (var k = 0; k < tileInner; k = k + 1) {\\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\\n    }\\n\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n      ${La(a)}\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\\n      }\\n    }\\n  }\\n\\n  workgroupBarrier();\\n}\\n\\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\\n        acc[innerRow][innerCol]);\\n  }\\n}\\n`;return`\\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\\n  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${s}>;\\n  const rowPerThread = ${e[1]};\\n  const colPerThread = ${e[0]};\\n  const tileInner = ${s};\\n\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\n    let batch = ${i?\"0\":\"i32(globalId.z)\"};\\n    ${r?`let batchIndices = ${r.offsetToIndices(\"u32(batch)\")};`:\"\"}\\n    let num_tiles = ${i?`${Math.ceil(o/s)}`:\"(uniforms.dim_inner - 1) / tileInner + 1\"};\\n    var kStart = ${i?`i32(globalId.z) * ${o}`:\"0\"};\\n\\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\\n    ${g}\\n  }\\n`},Ra=(e,t,n,r,a,s=!1)=>{const[i,o,l]=a,[u,d,c,p]=r,h=Ut(i,l),m=Ut(o,l),f=Ft(r[0].type.tensor);return`\\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${Ea(e,f)} {\\n      var value = ${Ea(e,f)}(0.0);\\n      let col = colIn * ${e};\\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\\n      {\\n        ${(()=>{let e=d.rank,t=u.rank,n=`var aIndices: ${d.type.indices};`;for(let r=e-2-1,a=t-1;r>=0;r--,a--)n+=`\\naIndices[${r}] = ${t>1?`batchIndices[${a}]`:\"batchIndices\"};`;return h.forEach((e=>{n+=`\\naIndices[${e}] = 0;`})),n+=`\\naIndices[${e-2}] = u32(row);\\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\\n        value = ${d.getByIndices(\"aIndices\")};\\n      }\\n      return value;\\n    }\\n\\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${Ea(e,f)} {\\n      var value = ${Ea(e,f)}(0.0);\\n      let col = colIn * ${e};\\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\\n      {\\n        ${(()=>{let e=c.rank,t=u.rank,n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,a=t-1;r>=0;r--,a--)n+=`\\nbIndices[${r}] = ${t>1?`batchIndices[${a}]`:\"batchIndices\"};`;return m.forEach((e=>{n+=`\\nbIndices[${e}] = 0;`})),n+=`\\nbIndices[${e-2}] = u32(row);\\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\\n        value = ${c.getByIndices(\"bIndices\")};\\n      }\\n      return value;\\n    }\\n\\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ea(e,f)}) {\\n      let col = colIn * ${e};\\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\\n        var value = valueIn;\\n        let coords = vec3<i32>(batch, row, colIn);\\n        ${t?`value = value + ${s?\"bias[colIn]\":`${Ea(e,f)}(bias[row])`};`:\"\"}\\n        ${n}\\n        ${p.setByIndices(\"vec3<u32>(coords)\",\"value\")}\\n      }\\n    }\\n    `},Na=(e,t,n,r,a=!1,s)=>{const i=e[0].dims,o=e[1].dims,l=i.slice(0,-2),u=o.slice(0,-2),d=r?r.slice(0,-2):n.slice(0,-2),c=Tt.size(d),p=i[i.length-2],h=i[i.length-1],m=o[o.length-1],f=h%4==0&&m%4==0,g=p<=8?[4,1,1]:[4,4,1],_=[8,8,1],w=[Math.ceil(m/_[0]/g[0]),Math.ceil(p/_[1]/g[1]),Math.ceil(c/_[2]/g[2])],y=f?4:1,b=[...l,p,h/y],v=b.length,x=[...u,h,m/y],M=x.length,T=[c,p,m/y],k=[{type:6,data:p},{type:6,data:m},{type:6,data:h}];Ca(t,k),k.push(...It(d,b,x));const $=[\"rank\",\"rank\"],C=e.length>2;C&&(k.push(...It(e[2].dims)),$.push(\"rank\")),k.push(...It(T));return{name:\"MatMul\",shaderCache:{hint:`${g};${t.activation};${f};${a}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:s?s(n):n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:k}),getShaderSource:n=>{const r=d.length,s=jt(\"batchDims\",e[0].dataType,r,1),i=Ft(e[0].dataType),o=Nt(\"a\",e[0].dataType,v,y),c=Nt(\"b\",e[1].dataType,M,y),p=Vt(\"result\",e[0].dataType,T.length,y),h=[o,c];if(C){const t=a?y:1;h.push(Nt(\"bias\",e[2].dataType,e[2].dims.length,t))}const m=[{name:\"dim_a_outer\",type:\"i32\"},{name:\"dim_b_outer\",type:\"i32\"},{name:\"dim_inner\",type:\"i32\"}];Sa(t,m);const w=Ft(p.type.tensor),b=$a(t,p.type.value,w),x=Ra(y,C,b,[s,o,c,p],[l,u,d],a);return`\\n  ${n.registerUniforms(m).registerInternalVariables(s).declareVariables(...h,p)}\\n  ${x}\\n  ${f?Oa(g,_,i,s):Da(g,_,i,s)}\\n                   `}}}})),su=j((()=>{Ol(),Ll(),ql(),tu(),nu(),ru(),au(),Va=(e,t,n,r,a=!1,s,i=4,o=4,l=4,u=\"f32\")=>{const d=e?\"\\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\\n    \":\"\\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\\n    \",c=e?\"\\n    let coords = vec4<i32>(\\n      batch,\\n      row / outWidth,\\n      row % outWidth,\\n      col);\\n    \":\"\\n    let coords = vec4<i32>(\\n      batch,\\n      row,\\n      col / outWidth,\\n      col % outWidth);\\n    \",p=e?\"i32(uniforms.x_shape[1])\":\"i32(uniforms.x_shape[2])\",h=e?\"i32(uniforms.x_shape[2])\":\"i32(uniforms.x_shape[3])\",m=e?\"row\":\"col\",f=e?\"col\":\"row\",g=`\\n    let inChannels = i32(uniforms.w_shape[2]);\\n    let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\\n    let outRow = ${m} / outWidth;\\n    let outCol = ${m} % outWidth;\\n\\n    let WRow = ${f} / (i32(uniforms.w_shape[1]) * inChannels);\\n    let WCol = ${f} / inChannels % i32(uniforms.w_shape[1]);\\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\\n    let xCh = ${f} % inChannels;\\n    var resData = ${Ea(i,u)}(0.0);\\n    // The bounds checking is always needed since we use it to pad zero for\\n    // the 'same' padding type.\\n    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${h}) {\\n      ${d}\\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\\n      ${(e=>{switch(e){case 1:return\"resData = x[xIndex];\";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return\"resData = x[xIndex / 4];\";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(i)}\\n    }\\n    return resData;`,_=e?t&&r?`\\n    let col = colIn * ${i};\\n    ${g}`:`\\n    let col = colIn * ${i};\\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\\n      ${g}\\n    }\\n    return ${Ea(i,u)}(0.0);`:r&&n?`\\n    let col = colIn * ${i};\\n    ${g}`:`\\n    let col = colIn * ${i};\\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\\n      ${g}\\n    }\\n    return ${Ea(i,u)}(0.0);`,w=`${(e=>{switch(e){case 1:return\"return w[row * i32(uniforms.w_shape[3]) + colIn];\";case 4:return\"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];\";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}`,y=Ea(l,u),b=Ea(e?i:o,u),v=Ea(e?o:i,u),x=$a(s,y,u);return`\\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {\\n      ${e?_:w}\\n    }\\n\\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\\n      ${e?w:_}\\n    }\\n\\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {\\n      let col = colIn * ${l};\\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\\n      {\\n      var value = valueIn;\\n      let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\\n      ${c}\\n      ${Fa(a)}\\n      ${x}\\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\\n      }\\n    }`},ja=(e,t,n,r,a,s,i,o,l)=>{const u=\"NHWC\"===t.format,d=u?e[0].dims[3]:e[0].dims[1],c=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],m=u?n[3]:n[1],f=u&&(d%4==0||d%3==0)&&m%4==0,g=u?m:p*h,_=u?p*h:m,w=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],b=[Math.ceil(g/w[0]/y[0]),Math.ceil(_/w[1]/y[1]),Math.ceil(c/w[2]/y[2])];ut(\"verbose\",(()=>`[conv2d_mm_webgpu] dispatch = ${b}`));const v=f?u&&d%4!=0?3:4:1,x=w[1]*y[1],M=w[0]*y[0],T=Math.max(w[0]*v,w[1]),k=r%x==0,$=a%M==0,C=s%T==0,S=f?[v,4,4]:[1,1,1],P=[{type:6,data:r},{type:6,data:a},{type:6,data:s},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ca(t,P),P.push(...It(e[0].dims,e[1].dims));const E=[\"rank\",\"rank\"];i&&(P.push(...It(e[2].dims)),E.push(\"rank\")),P.push(...It(n));return{name:\"Conv2DMatMul\",shaderCache:{hint:`${t.cacheKey};${v};${f};${k};${$};${C};${x};${M};${T}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:l?l(n):n,dataType:e[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:P}),getShaderSource:r=>{const a=[{name:\"dim_a_outer\",type:\"i32\"},{name:\"dim_b_outer\",type:\"i32\"},{name:\"dim_inner\",type:\"i32\"},{name:\"pad\",type:\"i32\",length:2},{name:\"stride\",type:\"i32\",length:2},{name:\"dilation\",type:\"i32\",length:2}];Sa(t,a);let s=f?4:1,l=Ft(e[0].dataType),d=`\\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${l}>`:l}) {\\n        result[flatIndex] = ${f?`vec4<${l}>`:l}(value);\\n      }\\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${l}>`:l}) {\\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\\n        setOutputAtIndex(flatIndex ${f?\"/ 4\":\"\"}, value);\\n      }`,c=[Nt(\"x\",e[0].dataType,e[0].dims.length,3===v?1:v),Nt(\"w\",e[1].dataType,e[1].dims.length,s)],p=Vt(\"result\",e[0].dataType,n.length,s);if(i){const t=Nt(\"bias\",e[2].dataType,e[2].dims.length,s);c.push(t),d+=`\\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${l}>`:l} {\\n          return bias[coords.${u?\"w\":\"y\"}${f?\"/ 4\":\"\"}];\\n        }`}return`\\n        ${Aa(\"uniforms.result_strides\")}\\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\\n        ${r.registerUniforms(a).declareVariables(...c,p)}\\n        ${d}\\n        ${Va(u,k,$,C,i,t,S[0],S[1],S[2],l)}\\n        ${f?Oa(y,w,l,void 0,!u,T):Da(y,w,l,void 0,!u,T,!1,void 0,o)}`}}}})),iu=j((()=>{Ol(),Ll(),jl(),ql(),tu(),nu(),qa=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t},Ga=e=>\"number\"==typeof e?[e,e,e]:e,Ua=(e,t)=>t<=1?e:e+(e-1)*(t-1),Wa=(e,t,n,r=1)=>{const a=Ua(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)},Ha=(e,t,n,r,a)=>{null==a&&(a=Wa(e,t[0],r[0]));const s=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(s[n]=Math.trunc((e[n]-t[n]+2*a)/r[n]+1));return s},Xa=(e,t,n,r,a,s,i,o,l,u)=>{let d,c,p,h;if(\"VALID\"===e&&(e=0),\"number\"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e};const m=Ha([t,n,r,1],[o,l,u],1,[a,s,i],e);c=m[0],p=m[1],h=m[2]}else if(Array.isArray(e)){if(!e.every(((e,t,n)=>e===n[0])))throw Error(`Unsupported padding parameter: ${e}`);d={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};const m=Ha([t,n,r,1],[o,l,u],1,[a,s,i],e[0]);c=m[0],p=m[1],h=m[2]}else{if(\"SAME_UPPER\"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/a),p=Math.ceil(n/s),h=Math.ceil(r/i);const e=(c-1)*a+o-t,m=(p-1)*s+l-n,f=(h-1)*i+u-r,g=Math.floor(e/2),_=e-g,w=Math.floor(m/2),y=m-w,b=Math.floor(f/2);d={top:w,bottom:y,left:b,right:f-b,front:g,back:_}}}return{padInfo:d,outDepth:c,outHeight:p,outWidth:h}},Ka=(e,t,n,r,a,s=!1,i=\"channelsLast\")=>{let o,l,u,d,c;if(\"channelsLast\"===i)[o,l,u,d,c]=e;else{if(\"channelsFirst\"!==i)throw new Error(`Unknown dataFormat ${i}`);[o,c,l,u,d]=e}let[p,,h,m,f]=t,[g,_,w]=Ga(n),[y,b,v]=Ga(r),x=Ua(h,y),M=Ua(m,b),T=Ua(f,v),{padInfo:k,outDepth:$,outHeight:C,outWidth:S}=Xa(a,l,u,d,g,_,w,x,M,T),P=s?p*c:p,E=[0,0,0,0,0];return\"channelsFirst\"===i?E=[o,P,$,C,S]:\"channelsLast\"===i&&(E=[o,$,C,S,P]),{batchSize:o,dataFormat:i,inDepth:l,inHeight:u,inWidth:d,inChannels:c,outDepth:$,outHeight:C,outWidth:S,outChannels:P,padInfo:k,strideDepth:g,strideHeight:_,strideWidth:w,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:x,effectiveFilterHeight:M,effectiveFilterWidth:T,dilationDepth:y,dilationHeight:b,dilationWidth:v,inShape:e,outShape:E,filterShape:t}},Qa=(e,t,n,r,a,s)=>{const i=\"channelsLast\"===s,o=(i?e[0].dims[3]:e[0].dims[1],{x:n.map(((e,t)=>t))}),l=[Math.ceil(qa(o.x.map((e=>n[e])))/64),1,1];ut(\"verbose\",(()=>`[conv3d_naive_webgpu] dispatch = ${l}`));const u=[{type:12,data:Tt.size(n)},{type:12,data:r},{type:12,data:a},{type:12,data:t.strides},{type:12,data:t.dilations}];Ca(t,u),u.push(...It(e[0].dims,e[1].dims));const d=[\"rank\",\"rank\"],c=3===e.length;c&&(u.push(...It(e[2].dims)),d.push(\"rank\")),u.push(...It(n));return{name:\"Conv3DNaive\",shaderCache:{hint:`${t.cacheKey};${i};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:s=>{const o=[{name:\"output_size\",type:\"u32\"},{name:\"filter_dims\",type:\"u32\",length:r.length},{name:\"pads\",type:\"u32\",length:a.length},{name:\"strides\",type:\"u32\",length:t.strides.length},{name:\"dilations\",type:\"u32\",length:t.dilations.length}];Sa(t,o);let l=Ft(e[0].dataType),u=Nt(\"x\",e[0].dataType,e[0].dims.length,1),d=Nt(\"W\",e[1].dataType,e[1].dims.length,1),p=[u,d],h=Vt(\"result\",e[0].dataType,n.length,1),m=\"\";if(c){const t=Nt(\"bias\",e[2].dataType,e[2].dims.length,1);p.push(t),m+=`\\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${l} {\\n          return bias[${Dt(\"coords\",i?4:1,5)}];\\n        }`}const f=Ea(1,l),g=$a(t,f,l);return`\\n            ${m}\\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\\n              return ${u.getByIndices(\"aIndices\")};\\n            }\\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\\n              return ${d.getByIndices(\"aIndices\")};\\n            }\\n          ${s.registerUniforms(o).declareVariables(...p,h)}\\n          ${s.mainStart()}\\n          ${s.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n              let coords = ${h.offsetToIndices(\"global_idx\")};\\n              let batch = ${Dt(\"coords\",0,u.rank)};\\n              let d2 = ${Dt(\"coords\",i?u.rank-1:1,u.rank)};\\n              let xFRCCorner = vec3<u32>(${Dt(\"coords\",i?1:2,u.rank)},\\n              ${Dt(\"coords\",i?2:3,u.rank)},\\n              ${Dt(\"coords\",i?3:4,u.rank)}) * uniforms.strides - uniforms.pads;\\n              let xFCorner = xFRCCorner.x;\\n              let xRCorner = xFRCCorner.y;\\n              let xCCorner = xFRCCorner.z;\\n              let xShapeY = ${Dt(\"uniforms.x_shape\",i?1:2,u.rank)};\\n              let xShapeZ = ${Dt(\"uniforms.x_shape\",i?2:3,u.rank)};\\n              let xShapeW = ${Dt(\"uniforms.x_shape\",i?3:4,u.rank)};\\n              let xShapeU = ${Dt(\"uniforms.x_shape\",i?4:1,u.rank)};\\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\\n              let inputDepthVec4Remainder = xShapeU % 4;\\n\\n              var value = 0.0;\\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\\n                let xF = xFCorner + wF * uniforms.dilations[0];\\n                if (xF < 0 || xF >= xShapeY) {\\n                  continue;\\n                }\\n\\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\\n                  let xR = xRCorner + wR * uniforms.dilations[1];\\n                  if (xR < 0 || xR >= xShapeZ) {\\n                    continue;\\n                  }\\n\\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\\n                    let xC = xCCorner + wC * uniforms.dilations[2];\\n                    if (xC < 0 || xC >= xShapeW) {\\n                      continue;\\n                    }\\n\\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\\n                      ${i?\"let xValues = vec4<f32>(\\n                               getX(batch, xF, xR, xC, d1),\\n                               getX(batch, xF, xR, xC, d1 + 1),\\n                               getX(batch, xF, xR, xC, d1 + 2),\\n                               getX(batch, xF, xR, xC, d1 + 3));\\n                            \":\"let xValues = vec4<f32>(\\n                               getX(batch, d1, xF, xR, xC),\\n                               getX(batch, d1 + 1, xF, xR, xC),\\n                               getX(batch, d1 + 2, xF, xR, xC),\\n                               getX(batch, d1 + 3, xF, xR, xC));\\n                            \"}\\n                            let wValues = vec4<f32>(\\n                              getW(d2, d1, wF, wR, wC),\\n                              getW(d2, d1 + 1, wF, wR, wC),\\n                              getW(d2, d1 + 2, wF, wR, wC),\\n                              getW(d2, d1 + 3, wF, wR, wC));\\n                      value += dot(xValues, wValues);\\n                    }\\n                    if (inputDepthVec4Remainder == 1) {\\n                        ${i?\"value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);\":\"value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);\"}\\n                    } else if (inputDepthVec4Remainder == 2) {\\n                      ${i?\"let xValues = vec2<f32>(\\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\\n                      \":\"let xValues = vec2<f32>(\\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\\n                    \"}\\n                    let wValues = vec2<f32>(\\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\\n                      value += dot(xValues, wValues);\\n                    } else if (inputDepthVec4Remainder == 3) {\\n                      ${i?\"let xValues = vec3<f32>(\\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\\n                      \":\"let xValues = vec3<f32>(\\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\\n                    \"}\\n                    let wValues = vec3<f32>(\\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\\n                      value += dot(xValues, wValues);\\n                    }\\n                  }\\n                }\\n              }\\n              ${c?\"value = value + getBiasByOutputCoords(coords)\":\"\"};\\n              ${g}\\n              result[global_idx] = f32(value);\\n          }`}}}})),ou=j((()=>{Ol(),jl(),ql(),tu(),Ya=(e,t,n,r)=>{const a=e.length>2,s=a?\"value += b[output_channel];\":\"\",i=e[0].dims,o=e[1].dims,l=\"NHWC\"===t.format,u=l?n[3]:n[1],d=u/t.group,c=l&&d>=4?zt(u):1,p=Tt.size(n)/c,h=[{type:12,data:p},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:d}];Ca(t,h),h.push(...It(i,[o[0],o[1],o[2],o[3]/c]));const m=a?[\"rank\",\"rank\",\"rank\"]:[\"rank\",\"rank\"];h.push(...It([n[0],n[1],n[2],n[3]/c]));return{name:\"GroupedConv\",shaderCache:{hint:`${t.cacheKey}_${c}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:r=>{const u=Vt(\"output\",e[0].dataType,n.length,c),d=Ft(u.type.tensor),p=$a(t,u.type.value,d),h=Nt(\"x\",e[0].dataType,i.length),m=Nt(\"w\",e[1].dataType,o.length,c),f=[h,m];a&&f.push(Nt(\"b\",e[2].dataType,e[2].dims,c));const g=[{name:\"output_size\",type:\"u32\"},{name:\"dilations\",type:\"u32\",length:t.dilations.length},{name:\"strides\",type:\"u32\",length:2},{name:\"pads\",type:\"u32\",length:2},{name:\"output_channels_per_group\",type:\"u32\"}];Sa(t,g);const _=l?`\\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {\\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\\n\\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {\\n          continue;\\n        }\\n\\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {\\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {\\n            continue;\\n          }\\n\\n          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {\\n            let input_channel = in_channel_offset + wInChannel;\\n            let xVal = ${h.get(\"batch\",\"xHeight\",\"xWidth\",\"input_channel\")};\\n            let wVal = ${m.get(\"wHeight\",\"wWidth\",\"wInChannel\",\"output_channel\")};\\n            value += xVal * wVal;\\n          }\\n        }\\n      }\\n      `:`\\n      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\\n        let input_channel = in_channel_offset + wInChannel;\\n        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\\n          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\\n\\n          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {\\n            continue;\\n          }\\n\\n          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\\n            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\\n            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {\\n              continue;\\n            }\\n\\n            let xVal = ${h.get(\"batch\",\"input_channel\",\"xHeight\",\"xWidth\")};\\n            let wVal = ${m.get(\"output_channel\",\"wInChannel\",\"wHeight\",\"wWidth\")};\\n            value += xVal * wVal;\\n          }\\n        }\\n      }\\n      `;return`\\n  ${r.registerUniforms(g).declareVariables(...f,u)}\\n\\n  ${r.mainStart()}\\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n\\n    let outputIndices = ${u.offsetToIndices(\"global_idx\")};\\n    let batch: u32 = outputIndices[0];\\n    let output_channel: u32 = outputIndices[${l?3:1}];\\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\\n    let group_id: u32 = output_channel * ${c} / uniforms.output_channels_per_group;\\n    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];\\n\\n    var value: ${u.type.value} = ${u.type.value}(0);\\n    ${_}\\n    ${s}\\n    ${p}\\n    ${u.setByOffset(\"global_idx\",\"value\")}\\n  }`}}},Za=(e,t,n,r)=>{const a=e.length>2,s=zt(n[3]),i=zt(n[2]),o=Tt.size(n)/s/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],u=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],d=[n[0],n[1],n[2],n[3]/s],c=[{type:12,data:o},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Ca(t,c),c.push(...It(l,u,d));const p=(i-1)*t.strides[1]+u[1];return{name:\"GroupedConv-Vectorize\",shaderCache:{hint:`${t.cacheKey};${s};${i};${p};${u[0]};${u[1]}`,inputDependencies:a?[\"rank\",\"rank\",\"type\"]:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:n=>{const r=Vt(\"output\",e[0].dataType,d.length,s),o=Ft(r.type.tensor),c=$a(t,r.type.value,o),h=Nt(\"x\",e[0].dataType,l.length,s),m=Nt(\"w\",e[1].dataType,u.length,s),f=[h,m];a&&f.push(Nt(\"b\",e[2].dataType,e[2].dims,s));const g=a?\"value += b[output_channel];\":\"\",_=[{name:\"output_size\",type:\"u32\"},{name:\"strides\",type:\"i32\",length:2},{name:\"pads\",type:\"i32\",length:2}];return Sa(t,_),`\\n  ${n.registerUniforms(_).declareVariables(...f,r)}\\n  ${n.mainStart()}\\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n    let width0 = uniforms.output_shape[3];\\n    let output_channel = global_idx % width0;\\n    var index1 = global_idx / width0;\\n    let width1 = uniforms.output_shape[2] / ${i}u;\\n    let col = (index1 % width1) * ${i}u;\\n    index1 = index1 / width1;\\n    let row = index1 % uniforms.output_shape[1];\\n    let batch = index1 / uniforms.output_shape[1];\\n\\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\\n\\n    var x_vals: array<${h.type.value}, ${p}>;\\n    var values: array<${r.type.value}, ${i}>;\\n    let input_channel = output_channel;\\n    // Use constant instead of uniform can give better performance for w's height/width.\\n    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {\\n      let x_height = x_corner.x + i32(w_height);\\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\\n        for (var i = 0; i < ${p}; i++) {\\n          let x_width = x_corner.y + i;\\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\\n            x_vals[i] = ${h.get(\"batch\",\"u32(x_height)\",\"u32(x_width)\",\"input_channel\")};\\n          } else {\\n            x_vals[i] = ${h.type.value}(0);\\n          }\\n        }\\n        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {\\n          let w_val = ${m.get(\"w_height\",\"w_width\",\"0\",\"output_channel\")};\\n          for (var i = 0u; i < ${i}u; i++) {\\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\\n          }\\n        }\\n      }\\n    }\\n\\n    for (var i = 0u; i < ${i}u; i++) {\\n      var value = values[i];\\n      ${g}\\n      ${c}\\n      ${r.set(\"batch\",\"row\",\"col + i\",\"output_channel\",\"value\")};\\n    }\\n  }`}}}})),lu=j((()=>{Ol(),jl(),au(),ql(),tu(),Ja=(e,t,n,r,a=!1,s)=>{const i=e[0].dims,o=e[1].dims,l=i[i.length-2],u=o[o.length-1],d=i[i.length-1],c=zt(u),p=zt(d),h=zt(l),m=Tt.size(n)/c/h,f=e.length>2,g=r?r.slice(0,-2):n.slice(0,-2),_=[Tt.size(g),l,u],w=[{type:12,data:m},{type:12,data:l},{type:12,data:u},{type:12,data:d}];Ca(t,w),w.push(...It(g,i,o)),f&&w.push(...It(e[2].dims)),w.push(...It(_));return{name:\"MatMulNaive\",shaderCache:{hint:`${t.activation};${c};${p};${h};${a}`,inputDependencies:f?[\"rank\",\"rank\",\"rank\"]:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:s?s(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}),getShaderSource:r=>{let s=jt(\"batch_dims\",e[0].dataType,g.length),l=Nt(\"a\",e[0].dataType,i.length,p),u=Nt(\"b\",e[1].dataType,o.length,c),d=Vt(\"output\",e[0].dataType,_.length,c),m=Ft(d.type.tensor),w=$a(t,d.type.value,m),y=[l,u],b=\"\";if(f){const t=a?c:1;y.push(Nt(\"bias\",e[2].dataType,e[2].dims.length,t)),b=\"\"+(a?`value += bias[col / ${t}];`:`value += ${d.type.value}(bias[row + i]);`)}const v=i.slice(0,-2),x=o.slice(0,-2),M=Ut(v,g),T=Ut(x,g),k=[{name:\"output_size\",type:\"u32\"},{name:\"M\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"K\",type:\"u32\"}];Sa(t,k);const $=(e,t)=>{const n=e.rank,r=e.name;if(2===n)return`var ${r}_indices = ${e.type.indices}(0u, 0u);`;let a=s.rank,i=`var ${r}_indices: ${e.type.indices};`;for(let e=n-2-1,t=a-1;e>=0;e--,t--)i+=`\\n${r}_indices[${e}] = ${a>1?`batch_indices[${t}]`:\"batch_indices\"};`;return t.forEach((e=>{i+=`\\n${r}_indices[${e}] = 0;`})),i+=`${r}_indices[${n-2}] = 0u;\\n                     ${r}_indices[${n-1}] = 0u;`,i};return`\\n  ${r.registerUniforms(k).registerInternalVariables(s).declareVariables(...y,d)}\\n  ${r.mainStart()}\\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n    let col = (global_idx % (uniforms.N / ${c})) * ${c};\\n    var index1 = global_idx / (uniforms.N / ${c});\\n    let stride1 = uniforms.M / ${h};\\n    let row = (index1 % stride1) * ${h};\\n    let batch = index1 / stride1;\\n\\n    ${2===n.length?\"\":`let batch_indices = ${s.offsetToIndices(\"batch\")};`}\\n    ${$(l,M)}\\n    let a_offset = ${l.indicesToOffset(\"a_indices\")};\\n    ${$(u,T)}\\n    let b_offset = ${u.indicesToOffset(\"b_indices\")};\\n    var values: array<${d.type.value}, ${h}>;\\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {\\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<p;t++)e+=`\\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${c}];`;for(let t=0;t<h;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${p}];`;for(let n=0;n<p;n++)e+=`\\n            values[${t}] = fma(${u.type.value}(a_data${1===p?\"\":`[${n}]`}), b_data${n}, values[${t}]);\\n`}return e})()}\\n    }\\n    for (var i = 0u; i < ${h}u; i++) {\\n      var value = values[i];\\n      ${b}\\n      ${w}\\n      let cur_indices = ${d.type.indices}(batch, row + i, col);\\n      let offset = ${d.indicesToOffset(\"cur_indices\")};\\n      ${d.setByOffset(`offset / ${c}`,\"value\")};\\n    }\\n  }\\n  `}}},es=e=>{if(!e||2!==e.length)throw new Error(\"MatMul requires 2 inputs.\");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error(\"shared dimension does not match.\")},ts=e=>{es(e.inputs);const t=Mt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error(\"Can't use matmul on the given tensors\");const n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];n<8&&r<8?e.compute(Ja(e.inputs,{activation:\"\"},t)):e.compute(Na(e.inputs,{activation:\"\"},t))}})),uu=j((()=>{jl(),su(),iu(),au(),ou(),tu(),lu(),Gl(),ns=(e,t,n,r,a,s)=>{const i=e[0],o=e.slice(s?1:2,s?3:4),l=o.length,u=t[0],d=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=o.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-d[t]+a[t])/a[t])));return c.splice(0,0,i),c.splice(s?3:1,0,u),c},rs=[2,3,1,0],as=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error(\"Conv requires 2 or 3 inputs\");if(e[0].dims.length>5)throw new Error(\"greater than 5D is not supported\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\"filter does not have same dimension as input\");if(e[0].dims[\"NHWC\"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error(\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error(\"invalid bias\");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error(\"invalid kernel shape\")},ss=(e,t)=>{const n=e.kernelShape.slice();n.length<t[1].dims.length-2&&n.push(...Array(t[1].dims.length-2-n.length).fill(0));for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const r=e.pads.slice();kt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,\"NHWC\"===e.format,e.autoPad);const a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:r}),a},is=e=>{const t=Pa(e),n=e.format;return{autoPad:[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},os=(e,t,n,r)=>{const a=\"NHWC\"===n.format,s=ns(t[0].dims,t[1].dims,n.dilations,n.pads,n.strides,a);if(1!==n.group){const i=[t[0]];if(a){const r=e.kernelCustomData.wT??e.compute(Yt(t[1],rs),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),i.push(r)}else i.push(t[1]);return 3===t.length&&i.push(t[2]),void(!e.adapterInfo.isArchitecture(\"ampere\")&&a&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]?e.compute(Za(i,n,s,r),{inputs:i}):e.compute(Ya(i,n,s,r),{inputs:i}))}const i=3===t.length,o=t[0].dims[a?1:2],l=t[0].dims[a?2:3],u=t[0].dims[a?3:1],d=t[1].dims[2],c=t[1].dims[3],p=s[a?1:2],h=s[a?2:3],m=s[a?3:1],f=a&&d===o&&c===l&&0===n.pads[0]&&0===n.pads[1];if(f||1===d&&1===c&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let d,c,g,_=s[0],w=[];if(a){const r=e.kernelCustomData.wT??e.compute(Yt(t[1],rs),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),f){const e=o*l*u;d=t[0].reshape([1,_,e]),c=r.reshape([1,e,m]),g=[1,_,m]}else d=t[0].reshape([_,o*l,u]),c=r.reshape([1,u,m]),g=[_,p*h,m];w.push(d),w.push(c)}else d=t[0].reshape([_,u,o*l]),c=t[1].reshape([1,m,u]),g=[_,m,p*h],w.push(c),w.push(d);i&&w.push(t[2]);const y=g[2],b=w[0].dims[w[0].dims.length-1];return void(y<8&&b<8?e.compute(Ja(w,n,s,g,a,r),{inputs:w}):e.compute(Na(w,n,s,g,a,r),{inputs:w}))}const g=e.kernelCustomData.wT??e.compute(Yt(t[1],rs),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);const _=[t[0],g];i&&_.push(t[2]);const w=a?p*h:m,y=a?m:p*h,b=d*c*u;e.compute(ja(_,n,s,w,y,b,i,!0,r),{inputs:_})},ls=(e,t)=>{const n=\"NHWC\"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const a=[0,t.pads[0],0,t.pads[1]],s=[1].concat(t.strides),i=[1].concat(t.dilations),o=[1].concat(t.kernelShape),l=ss({...t,pads:a,strides:s,dilations:i,kernelShape:o},r);os(e,r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]]))},us=(e,t,n)=>{const r=\"NHWC\"===n.format?\"channelsLast\":\"channelsFirst\",a=ss(n,t),s=\"NOTSET\"===n.autoPad?n.pads:n.autoPad,i=Ka(t[0].dims,t[1].dims,n.strides,n.dilations,s,!1,r);e.compute(Qa(t,a,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],r))},ds=(e,t)=>{if(as(e.inputs,t),3===e.inputs[0].dims.length)ls(e,t);else if(5===e.inputs[0].dims.length)us(e,e.inputs,t);else{const n=ss(t,e.inputs);os(e,e.inputs,n)}}})),du=j((()=>{Ol(),Ll(),ql(),tu(),nu(),ru(),au(),cs=(e,t=!1,n,r,a=4)=>{const s=e?\"\\n    let coords = vec4<i32>(\\n      batch,\\n      row / outWidth,\\n      row % outWidth,\\n      col);\\n    \":\"\\n    let coords = vec4<i32>(\\n      batch,\\n      row,\\n      col / outWidth,\\n      col % outWidth);\\n    \",i=e?\"row\":\"col\",o=e?\"col\":\"row\",l=`\\n      let inChannels = ${e?\"i32(uniforms.x_shape[3])\":\"i32(uniforms.x_shape[1])\"};\\n      let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\\n      let outRow = ${i} / outWidth;\\n      let outCol = ${i} % outWidth;\\n\\n      let WRow = ${o} / (uniforms.filter_dims[1] * inChannels);\\n      let WCol = ${o} / inChannels % uniforms.filter_dims[1];\\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\\n      if (xR < 0.0 || xR >= f32(${e?\"i32(uniforms.x_shape[1])\":\"i32(uniforms.x_shape[2])\"}) || fract(xR) > 0.0) {\\n        return ${r}(0.0);\\n      }\\n      if (xC < 0.0 || xC >= f32(${e?\"i32(uniforms.x_shape[2])\":\"i32(uniforms.x_shape[3])\"}) || fract(xC) > 0.0) {\\n        return ${r}(0.0);\\n      }\\n      let iXR = i32(xR);\\n      let iXC = i32(xC);\\n      let xCh = ${o} % inChannels;\\n      ${e?\"\\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\\n      \":\"\\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\\n      \"}\\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${a}];`,u=e?`\\n      let col = colIn * ${a};\\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\\n        ${l}\\n      }\\n      return ${r}(0.0);`:`\\n      let col = colIn * ${a};\\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\\n        ${l}\\n      }\\n      return ${r}(0.0);`,d=`\\n      let col = colIn * ${a};\\n      let inChannels = ${e?\"i32(uniforms.x_shape[3])\":\"i32(uniforms.x_shape[1])\"};\\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\\n      if (${e?\"row < uniforms.dim_inner && col < uniforms.dim_b_outer\":\"row < uniforms.dim_inner && col < uniforms.dim_a_outer\"}  && coordX >= 0 && coordY >= 0) {\\n        let rowInner = row % inChannels;\\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\\n        ${(e=>{switch(e){case 1:return\"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\";case 4:return`\\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\\n            return ${r}(v0, v1, v2, v3);\\n            `;default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}\\n      }\\n      return ${r}(0.0);\\n      `,c=$a(n,r);return`\\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${r} {\\n    ${e?u:d}\\n  }\\n\\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${r} {\\n    ${e?d:u}\\n  }\\n\\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${r}) {\\n    let col = colIn * ${a};\\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\\n      var value = valueInput;\\n      let outWidth = ${e?\"i32(uniforms.result_shape[2])\":\"i32(uniforms.result_shape[3])\"};\\n      ${s}\\n      ${Fa(t)}\\n      ${c}\\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${a}] = value;\\n    }\\n  }`},ps=(e,t,n,r,a,s,i,o)=>{const l=\"NHWC\"===t.format,u=l?e[0].dims[3]:e[0].dims[1],d=n[0],c=l?n[2]:n[3],p=l?n[1]:n[2],h=l?n[3]:n[1],m=l&&u%4==0&&u%3&&h%4==0,f=l?h:c*p,g=l?c*p:h,_=[8,8,1],w=r<=8?[4,1,1]:[4,4,1],y=[Math.ceil(f/_[0]/w[0]),Math.ceil(g/_[1]/w[1]),Math.ceil(d/_[2]/w[2])];ut(\"verbose\",(()=>`[conv_backprop_mm_webgpu] dispatch = ${y}`));const b=m?4:1,v=Math.max(_[0]*b,_[1]),x=m?4:1,M=[t.kernelShape[l?1:2],t.kernelShape[l?2:3]],T=[M[0]+(t.dilations[0]<=1?0:(M[0]-1)*(t.dilations[0]-1)),M[1]+(t.dilations[1]<=1?0:(M[1]-1)*(t.dilations[1]-1))],k=[T[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),T[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],$=[{type:6,data:r},{type:6,data:a},{type:6,data:s},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:M},{type:6,data:k}];Ca(t,$),$.push(...It(e[0].dims,e[1].dims));const C=[\"rank\",\"rank\"];i&&($.push(...It(e[2].dims)),C.push(\"rank\")),$.push(...It(n));return{name:\"Conv2DTransposeMatMul\",shaderCache:{hint:`${t.cacheKey};${w};${_};${m}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:$}),getShaderSource:r=>{let a=Nt(\"x\",e[0].dataType,e[0].dims.length,x),s=Nt(\"w\",e[1].dataType,e[1].dims.length,1),u=Vt(\"result\",e[0].dataType,n.length,x),d=[a,s],c=\"\";if(i){const t=Nt(\"bias\",e[2].dataType,e[2].dims.length,x);d.push(t),c+=`\\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${t.type.value} {\\n            return bias[coords.${l?\"w\":\"y\"}${m?\"/ 4\":\"\"}];\\n          }`}const p=[{name:\"dim_a_outer\",type:\"i32\"},{name:\"dim_b_outer\",type:\"i32\"},{name:\"dim_inner\",type:\"i32\"},{name:\"strides\",type:\"i32\",length:2},{name:\"dilations\",type:\"i32\",length:2},{name:\"filter_dims\",type:\"i32\",length:M.length},{name:\"pads\",type:\"i32\",length:k.length}];Sa(t,p);const h=Ft(e[0].dataType,1);if(\"f16\"!==h&&\"f32\"!==h)throw new Error(`elemType ${h} is not supported.`);return`\\n        ${Aa(\"uniforms.result_strides\")}\\n        ${r.registerUniforms(p).declareVariables(...d,u)};\\n        ${c}\\n        ${cs(l,i,t,a.type.value,b)}\\n        ${m?Oa(w,_,h,void 0,!l,v):Da(w,_,h,void 0,!l,v,!1,void 0,o)}`}}}})),cu=j((()=>{Ol(),Ll(),jl(),ql(),hs=(e,t,n,r,a,s=!1,i,o,l=!1)=>{let u=l?1:2,d=l?2:3,c=l?3:1,p=s?2:1,h=`\\n  fn setOutputAtIndex(flatIndex : u32, value : ${s?`vec4<${i}>`:i}) {\\n    result[flatIndex] = ${s?`vec4<${i}>`:i}(value);\\n  }`;r&&(h+=`\\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${s?`vec4<${i}>`:i} {\\n      return bias[coords.${l?\"w\":\"y\"}${s?\"/ 4\":\"\"}];\\n    }`);const m=s?4:1,f=Nt(\"W\",t[1].dataType,t[1].dims.length,m),g=Nt(\"Dy\",t[0].dataType,t[0].dims.length,m),_=[g,f];r&&_.push(Nt(\"bias\",t[2].dataType,[n[c]].length,m));const w=Vt(\"result\",t[0].dataType,n.length,m),y=`{\\n        let batch: u32 = ${a?\"global_id.z\":\"workgroup_id.z\"} / uniforms.result_shape[1];\\n        let r = ${a?\"global_id.z\":\"workgroup_id.z\"} % uniforms.result_shape[1];\\n        let c = ${a?\"global_id.y\":\"workgroup_id.y\"} * ${p};\\n        let d1: u32 = ${a?\"global_id.x\":\"workgroup_id.x\"} * 4;\\n\\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        var dotProd: array<vec4<${i}>, ${p}>;\\n        for (var i = 0; i < ${p}; i++) {\\n          dotProd[i] = vec4<${i}>(0.0);\\n        }\\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\\n          var dyR = (${i}(dyCorner.x) + ${i}(wR)) / ${i}(uniforms.strides.x);\\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\\n          if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[1]) ||\\n              fract(dyR) > 0.0 || wRPerm < 0) {\\n            continue;\\n          }\\n          let idyR: u32 = u32(dyR);\\n\\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\\n            let dyC = (${i}(dyCorner.y) + ${i}(wC)) / ${i}(uniforms.strides.y);\\n            let dyC2 = (${i}(dyCorner.y) + 1.0 + ${i}(wC)) / ${i}(uniforms.strides.y);\\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\\n            if (wCPerm < 0) {\\n              continue;\\n            }\\n            var bDyCVal = true;\\n            var bDyCVal2 = true;\\n            if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[2]) ||\\n                fract(dyC) > 0.0) {\\n              bDyCVal = false;\\n            }\\n            if (dyC2 < 0.0 || dyC2 >= ${i}(uniforms.Dy_shape[2]) ||\\n                fract(dyC2) > 0.0) {\\n              bDyCVal2 = false;\\n            }\\n\\n            let idyC: u32 = u32(dyC);\\n            let idyC2: u32 = u32(dyC2);\\n            if (bDyCVal && bDyCVal2) {\\n              let d2Length = uniforms.Dy_shape[3];\\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\\n                let wValue1 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\\n                let wValue2 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\\n                let wValue3 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\\n\\n                var xValue = ${g.get(\"batch\",\"idyR\",\"idyC\",\"d2\")};\\n                let tmpval = vec4<${i}>(dot(xValue, wValue0),\\n                                      dot(xValue, wValue1),\\n                                      dot(xValue, wValue2),\\n                                      dot(xValue, wValue3));\\n                dotProd[0] = dotProd[0] + tmpval;\\n\\n                xValue =  ${g.get(\"batch\",\"idyR\",\"idyC2\",\"d2\")};\\n\\n                dotProd[1] = dotProd[1] + vec4<${i}>(dot(xValue, wValue0),\\n                                                    dot(xValue, wValue1),\\n                                                    dot(xValue, wValue2),\\n                                                    dot(xValue, wValue3));\\n              }\\n            } else if (bDyCVal) {\\n              let d2Length = uniforms.Dy_shape[${c}];\\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\\n                let wValue1 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\\n                let wValue2 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\\n                let wValue3 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\\n\\n                var xValue = ${g.get(\"batch\",\"idyR\",\"idyC\",\"d2\")};\\n                let tmpval = vec4<${i}>(dot(xValue, wValue0),\\n                                      dot(xValue, wValue1),\\n                                      dot(xValue, wValue2),\\n                                      dot(xValue, wValue3));\\n                dotProd[0] = dotProd[0] + tmpval;\\n              }\\n            } else if (bDyCVal2) {\\n              let d2Length = uniforms.Dy_shape[3];\\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\\n                let wValue0 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1\",\"d2\")};\\n                let wValue1 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 1\",\"d2\")};\\n                let wValue2 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 2\",\"d2\")};\\n                let wValue3 = ${f.get(\"u32(wRPerm)\",\"u32(wCPerm)\",\"d1 + 3\",\"d2\")};\\n\\n                var xValue = ${g.get(\"batch\",\"idyR\",\"idyC2\",\"d2\")};\\n                let tmpval = vec4<${i}>(dot(xValue, wValue0),\\n                                      dot(xValue, wValue1),\\n                                      dot(xValue, wValue2),\\n                                      dot(xValue, wValue3));\\n                dotProd[1] = dotProd[1] + tmpval;\\n              }\\n            }\\n          }\\n        }\\n\\n        for (var i: u32 = 0; i < ${p}; i = i + 1) {\\n          let value = dotProd[i] + ${r?\"bias[c+i]\":`vec4<${i}>(0.0)`};\\n          ${w.set(\"batch\",\"r\",\"c + i\",\"d1\",\"value\")};\\n        }\\n      }`,b=`\\n          let outputIndices = ${w.offsetToIndices(\"global_idx\")};\\n          let batch = ${w.indicesGet(\"outputIndices\",0)};\\n          let d1 = ${w.indicesGet(\"outputIndices\",c)};\\n          let r = ${w.indicesGet(\"outputIndices\",u)};\\n          let c = ${w.indicesGet(\"outputIndices\",d)};\\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\\n          let dyRCorner = dyCorner.x;\\n          let dyCCorner = dyCorner.y;\\n          let groupId = d1 / uniforms.output_channels_per_group;\\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n          // ? = to be determined. : = across all values in that axis.\\n          var dotProd = ${i}(0.0);\\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\\n            if (wR % uniforms.dilations.x != 0) {\\n              continue;\\n            }\\n            let dyR = (${i}(dyRCorner) + ${i}(wR)) / ${i}(uniforms.strides[0]);\\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\\n            if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[${u}]) || fract(dyR) > 0.0 ||\\n                wRPerm < 0) {\\n              continue;\\n            }\\n            let idyR: u32 = u32(dyR);\\n\\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\\n              if (wC % uniforms.dilations.y != 0) {\\n                continue;\\n              }\\n              let dyC = (${i}(dyCCorner) + ${i}(wC)) / ${i}(uniforms.strides.y);\\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\\n              if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[${d}]) ||\\n                  fract(dyC) > 0.0 || wCPerm < 0) {\\n                continue;\\n              }\\n              let idyC: u32 = u32(dyC);\\n              var inputChannel = groupId * uniforms.input_channels_per_group;\\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\\n                let xValue = ${l?g.get(\"batch\",\"idyR\",\"idyC\",\"inputChannel\"):g.get(\"batch\",\"inputChannel\",\"idyR\",\"idyC\")};\\n                let wValue = ${f.get(\"inputChannel\",\"wOutChannel\",\"u32(wRPerm)\",\"u32(wCPerm)\")};\\n                dotProd = dotProd + xValue * wValue;\\n                inputChannel = inputChannel + 1;\\n              }\\n            }\\n          }\\n          let value = dotProd + ${r?\"bias[d1]\":`${i}(0.0)`};\\n          ${w.setByOffset(\"global_idx\",\"value\")};\\n        `;return`\\n  ${e.registerUniforms(o).declareVariables(..._,w)}\\n  ${h}\\n\\n    ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")};\\n  ${s?y:b}}`},ms=(e,t,n)=>{const r=e.length>2,a=t.outputShape,s=Tt.size(a),i=[Math.ceil(s/64),1,1];ut(\"verbose\",(()=>`[conv2d_backprop_webgpu] dispatch = ${i}`));const o=\"NHWC\"===t.format,l=[\"rank\",\"rank\"],u=[t.strides[0],t.strides[1]],d=[t.kernelShape[o?1:2],t.kernelShape[o?2:3]],c=[t.dilations[0],t.dilations[1]],p=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1))],h=[p[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),p[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],m=t.group,f=e[1].dims,g=f[0]/m,_=f[1],w=[{type:12,data:s},{type:12,data:u},{type:12,data:d},{type:12,data:c},{type:12,data:p},{type:6,data:h},{type:12,data:g},{type:12,data:_},...It(e[0].dims,e[1].dims)];r&&(w.push(...It(e[2].dims)),l.push(\"rank\")),w.push(...It(a));const y=1===i[1]&&1===i[2];return{name:\"ConvTranspose2D\",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:i[0],y:i[1],z:i[2]},outputs:[{dims:n?n(a):a,dataType:e[0].dataType}],programUniforms:w}),getShaderSource:t=>{const n=[{name:\"output_size\",type:\"u32\"},{name:\"strides\",type:\"u32\",length:u.length},{name:\"filter_dims\",type:\"u32\",length:d.length},{name:\"dilations\",type:\"u32\",length:d.length},{name:\"effective_filter_dims\",type:\"u32\",length:p.length},{name:\"pads\",type:\"i32\",length:h.length},{name:\"input_channels_per_group\",type:\"u32\"},{name:\"output_channels_per_group\",type:\"u32\"}],s=Ft(e[0].dataType);return`${hs(t,e,a,r,y,false,s,n,o)}`}}}})),pu=j((()=>{du(),cu(),tu(),Gl(),fs=(e,t,n,r,a,s)=>(e-1)*t+n+(r-1)*a+1-s,gs=(e,t,n,r,a)=>{const s=Math.floor(e/2);\"SAME_UPPER\"===t?(n[r]=s,n[a]=e-s):\"SAME_LOWER\"===t&&(n[r]=e-s,n[a]=s)},_s=(e,t,n,r,a,s,i,o,l,u)=>{const d=e.length-2,c=0===u.length;l.length<d&&l.push(...Array(d-l.length).fill(0));const p=e[0],h=t[o?3:1]*a;for(let a=0,p=e.length-d-(o?1:0);a<d;++a,++p){const o=e[p],h=c?o*i[a]:u[a],m=fs(o,i[a],s[a],t[p],n[a],h);gs(m,r,s,a,a+d),c&&u.push(i[a]*(o-1)+l[a]+(t[p]-1)*n[a]+1-s[a]-s[a+d])}u.splice(0,0,p),u.splice(o?3:1,0,h)},ws=(e,t)=>{const n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}const r=\"NHWC\"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let a=e.pads.slice(),s=e.outputShape.slice(),i=e.outputPadding.slice(),o=t[0].dims,l=e.dilations.slice();if(0===l.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;l=new Array(e).fill(1)}let u=e.strides.slice();if(0===u.reduce(((e,t)=>e+t),0)){const e=t[0].dims.length-2;u=new Array(e).fill(1)}_s(o,n,l,e.autoPad,e.group,a,u,r,i,s);const d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:a,outputPadding:i,outputShape:s,dilations:l,strides:u}),d},ys=e=>{const t=Pa(e),n=e.format,r=[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][typeof e.autoPad>\"u\"?0:e.autoPad],a=e.dilations,s=e.group,i=e.kernelShape,o=e.pads,l=e.strides,u=e.wIsConst();return{autoPad:r,format:n,dilations:a,group:s,kernelShape:i,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:o,strides:l,wIsConst:u,...t,cacheKey:`${e.format};${t.activation};`}},bs=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error(\"Conv requires 2 or 3 inputs\");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error(\"currently only support 2-dimensional conv\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\"filter does not have same dimension as input\");if(e[0].dims[\"NHWC\"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error(\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\");const n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error(\"invalid bias\");const r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error(\"invalid kernel shape\");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error(\"invalid output shape\")},vs=[2,3,1,0],xs=(e,t,n)=>{const r=ws(n,t),a=\"NHWC\"===n.format,s=r.outputShape,i=s[a?3:1],o=t[0].dims[a?3:1];if(1!==r.group||1===i&&1===o)return void e.compute(ms(t,r));const l=s[a?1:2],u=s[a?2:3],d=a?l*u:i,c=a?i:l*u,p=t[1].dims[2]*t[1].dims[3]*o,h=e.kernelCustomData.wT??e.compute(Yt(t[1],vs),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=h);const m=[t[0],h],f=3===t.length;f&&(a||1!==t[2].dims.length?m.push(t[2]):m.push(t[2].reshape([t[2].dims[0],1,1]))),e.compute(ps(m,r,s,d,c,p,f,!0),{inputs:m})},Ms=(e,t)=>{const n=\"NHWC\"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let a=t.kernelShape;(0===a.length||0===a[0])&&(a=[e.inputs[1].dims[2]]);let s=t.dilations;(0===s.length||0===s[0])&&(s=[1]);let i=t.strides;(0===i.length||0===i[0])&&(i=[1]);let o=t.pads;0===o.length&&(o=[0,0]),o=[0,o[0],0,o[1]],i=[1].concat(i),s=[1].concat(s),a=[1].concat(a);const l=ws({...t,pads:o,strides:i,dilations:s,kernelShape:a},r);e.compute(ms(r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))},Ts=(e,t)=>{bs(e.inputs,t),3===e.inputs[0].dims.length?Ms(e,t):xs(e,e.inputs,t)}})),hu=j((()=>{Ol(),jl(),Vl(),ql(),ks=(e,t,n,r)=>{const a=Tt.size(t),s=t.length,i=Nt(\"input\",e,s),o=Vt(\"output\",e,s),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),u=Tt.normalizeAxis(l,s);return{name:\"CumSum\",shaderCache:{hint:r.cacheKey,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:u},...It(t,t)]}),getShaderSource:e=>{const t=` i32(${i.indicesGet(\"inputIndices\",\"uniforms.axis\")}) `,n=Dt(\"uniforms.input_shape\",\"uniforms.axis\",s),a=r.reverse?t+(r.exclusive?\" + 1\":\"\"):\"0\",l=r.reverse?n:t+(r.exclusive?\"\":\" + 1\");return`\\n                ${e.registerUniform(\"outputSize\",\"u32\").registerUniform(\"axis\",\"u32\").declareVariables(i,o)}\\n                ${e.mainStart()}\\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n                  var inputIndices = ${o.offsetToIndices(\"global_idx\")};\\n                  var sum = ${o.type.value}(0);\\n                  let first : i32 = ${a};\\n                  let last : i32 = ${l};\\n                  for (var i : i32 = first; i < last; i++) {\\n                    ${i.indicesSet(\"inputIndices\",\"uniforms.axis\",\"u32(i)\")};\\n                    sum = sum + ${i.getByIndices(\"inputIndices\")};\\n                  }\\n                  ${o.setByOffset(\"global_idx\",\"sum\")};\\n                }`}}},$s=(e,t)=>{const n=e.inputs[0].dims,r=e.inputs[0].dataType,a=e.inputs[1];e.compute(ks(r,n,a,t),{inputs:[0]})},Cs=e=>{const t=1===e.exclusive,n=1===e.reverse;return vt({exclusive:t,reverse:n})}})),mu=j((()=>{Ol(),jl(),Vl(),ql(),Ss=e=>{if(!e||1!==e.length)throw new Error(\"DepthToSpace requires 1 input.\");if(4!==e[0].dims.length)throw new Error(\"DepthToSpace requires 4D input.\")},Ps=(e,t,n,r)=>{const a=[];a.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)a.push(n.indicesSet(\"a\",e[r],`i[${r}]`));return a.push(\"return a;}\"),a.join(\"\\n\")},Es=(e,t)=>{let n,r,a,s,i,o,l=\"NHWC\"===t.format,u=t.blocksize,d=\"DCR\"===t.mode;l?([n,r,a,s]=e.dims,i=d?[n,r,a,u,u,s/u**2]:[n,r,a,s/u**2,u,u],o=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,a,s]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=d?[n,u,u,s/u**2,r,a]:[n,s/u**2,u,u,r,a],o=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);const c=e.reshape(i),p=c.dims.length,h=e.dataType,m=Nt(\"a\",h,p),f=Vt(\"output\",h,p);return{name:\"DepthToSpace\",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:[\"rank\"]},getRunData:e=>{const t=l?[n,r*u,a*u,s/u**2]:[n,s/u**2,r*u,a*u],i=Tt.size(t),d=c.dims,p=Tt.sortBasedOnPerm(d,o);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...It(d,p)]}},getShaderSource:e=>`\\n  ${e.registerUniform(\"output_size\",\"u32\").declareVariables(m,f)}\\n\\n  ${Ps(o,p,m,f)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n\\n    let indices = ${f.offsetToIndices(\"global_idx\")};\\n    let aIndices = perm(indices);\\n\\n    ${f.setByOffset(\"global_idx\",m.getByIndices(\"aIndices\"))}\\n  }`}},Fs=(e,t)=>{Ss(e.inputs),e.compute(Es(e.inputs[0],t))},As=e=>vt({blocksize:e.blocksize,mode:e.mode,format:e.format})})),fu=j((()=>{Ol(),jl(),Vl(),ql(),Os=\"^\"+(zs=\"(\"+(Is=\"[a-zA-Z]|\\\\.\\\\.\\\\.\")+\")+\")+\"$\",Bs=\"^\"+(\"(\"+zs+\",)*\"+zs)+\"$\",Ls=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},Ds=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes(\"->\")?t.split(\"->\",2):[t,\"\"];if(!n.match(RegExp(Bs)))throw new Error(\"Invalid LHS term\");if(n.split(\",\").forEach(((t,n)=>{const r=e[n].dims.slice();if(!t.match(RegExp(Os)))throw new Error(\"Invalid LHS term\");const a=this.processTerm(t,!0,r,n);this.lhs.push(a)})),\"\"===r)r+=[...this.symbolToInfo.entries()].filter((([e,t])=>1===t.count||\"...\"===e)).map((([e])=>e)).join(\"\");else if(!r.match(RegExp(zs)))throw new Error(\"Invalid RHS\");r.match(RegExp(Is,\"g\"))?.forEach((e=>{if(\"...\"===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{const t=this.symbolToInfo.get(e);if(void 0===t)throw new Error(\"Invalid RHS symbol\");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error(\"Dimension mismatch\");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let a=n.length,s=!1,i=[],o=0;if(!e.match(RegExp(Os))&&!t&&\"\"!==e)throw new Error(\"Invalid LHS term\");const l=e.match(RegExp(Is,\"g\")),u=new Ls(r);return l?.forEach(((e,d)=>{if(\"...\"===e){if(s)throw new Error(\"Only one ellipsis is allowed per input term\");s=!0;const e=a-l.length+1;if(e<0)throw new Error(\"Ellipsis out of bounds\");if(i=n.slice(o,o+e),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error(\"Ellipsis dimensions mismatch\")}else{if(!t)throw new Error(\"Ellipsis must be specified in the LHS\");this.hasEllipsis=!0,this.ellipsisDims=i}for(let e=0;e<i.length;e++){const t=String.fromCharCode(\"0\".charCodeAt(0)+e);u.addSymbol(t,d+e),this.addSymbol(t,n[o++],r)}}else u.addSymbol(e,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[o++],r)})),u}},Rs=e=>e+\"_max\",Ns=(e,t,n,r)=>{const a=e.map((e=>e.length)).map(((e,n)=>Nt(`input${n}`,t,e))),s=Tt.size(r),i=Vt(\"output\",t,r.length),o=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:\"Einsum\",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>\"rank\"))},getRunData:()=>{const a=o.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));a.push({type:12,data:s});const i=e.map(((e,t)=>[...It(e)])).reduce(((e,t)=>e.concat(t)),a);return i.push(...It(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:i}},getShaderSource:e=>{const t=[],r=[],s=[],l=[],u=[],d=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,o)=>{if(n.rhs.symbolToIndices.has(o)){const r=n.rhs.symbolToIndices.get(o)?.[0];void 0!==r&&n.lhs.forEach(((n,s)=>{if(e.inputIndices.includes(s)){const e=n.symbolToIndices.get(o);if(void 0===e)throw new Error(\"Invalid symbol error\");e.forEach((e=>{t.push(`${a[s].indicesSet(`input${s}Indices`,e,i.indicesGet(\"outputIndices\",r))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){const e=t.symbolToIndices.get(o);if(void 0===e)throw new Error(\"Invalid symbol error\");e.forEach((e=>{r.push(`${a[n].indicesSet(`input${n}Indices`,e,`${o}`)}`)})),u.push(`prod *= ${a[n].getByIndices(`input${n}Indices`)};`)}})),s.push(`for(var ${o}: u32 = 0; ${o} < uniforms.${Rs(o)}; ${o}++) {`),l.push(\"}\")}));const c=d?[...t,`let sum = ${a.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(\" * \")};`]:[...t,\"var sum = 0.0;\",...s,...r,\"var prod = 1.0;\",...u,\"sum += prod;\",...l];return`\\n            ${e.registerUniforms(o.map((e=>({name:`${Rs(e)}`,type:\"u32\"})))).registerUniform(\"outputSize\",\"u32\").declareVariables(...a,i)}\\n\\n            ${e.mainStart()}\\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n            var outputIndices = ${i.offsetToIndices(\"global_idx\")};\\n            ${a.map(((e,t)=>`var input${t}Indices: ${a[t].type.indices};`)).join(\"\\n\")}\\n            ${c.join(\"\\n\")};\\n            ${i.setByOffset(\"global_idx\",\"sum\")};\\n          }`}}},Vs=(e,t)=>{const n=new Ds(e.inputs,t.equation),r=n.outputDims,a=e.inputs.map(((e,t)=>e.dims));e.compute(Ns(a,e.inputs[0].dataType,n,r))},js=e=>{const t=e.equation.replace(/\\s+/g,\"\");return vt({equation:t})}})),gu=j((()=>{Ol(),jl(),ql(),qs=e=>{if(!e||2!==e.length)throw new Error(\"Expand requires 2 input.\");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,a=t.length<n.length?0:t.length-n.length;for(;r<n.length&&a<t.length;++r,++a)if(n[r]!==t[a]&&1!==n[r]&&1!==t[a])throw new Error(\"Expand requires shape to be broadcastable to input\")},Gs=(e,t)=>{const n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let a=0;a<t.length;++a)r.push(1===t[a]?e[a+n]:t[a]);return r},Us=(e,t)=>e.length>t.length?Gs(e,t):Gs(t,e),Ws=e=>{const t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=Us(t,n),a=e[0].dataType,s=9===a?4:1,i=Math.ceil(Tt.size(r)/s),o=[{type:12,data:i},...It(t,r)];return{name:\"Expand\",shaderCache:{hint:`${r.length}`,inputDependencies:[\"rank\"]},getShaderSource:e=>{let n,i=Nt(\"input\",a,t.length,s),o=Vt(\"output\",a,r.length,s);if(9===a){const e=(e,t,n=\"\")=>`\\n          let outputIndices${t} = ${o.offsetToIndices(`outputOffset + ${t}u`)};\\n          let offset${t} = ${i.broadcastedIndicesToOffset(`outputIndices${t}`,o)};\\n          let index${t} = offset${t} / 4u;\\n          let component${t} = offset${t} % 4u;\\n          ${e}[${t}] = ${n}(${i.getByOffset(`index${t}`)}[component${t}]);\\n        `;n=`\\n        let outputOffset = global_idx * ${s};\\n        var data = vec4<u32>(0);\\n        ${e(\"data\",0,\"u32\")}\\n        ${e(\"data\",1,\"u32\")}\\n        ${e(\"data\",2,\"u32\")}\\n        ${e(\"data\",3,\"u32\")}\\n        ${o.setByOffset(\"global_idx\",\"data\")}\\n      }`}else n=`\\n        let outputIndices = ${o.offsetToIndices(\"global_idx\")};\\n        let inputOffset = ${i.broadcastedIndicesToOffset(\"outputIndices\",o)};\\n        ${o.setByOffset(\"global_idx\",i.getByOffset(\"inputOffset\"))}\\n      }`;return`\\n    ${e.registerUniform(\"vec_size\",\"u32\").declareVariables(i,o)}\\n    ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:o})}},Hs=e=>{qs(e.inputs),e.compute(Ws(e.inputs),{inputs:[0]})}})),_u=j((()=>{Ol(),jl(),ql(),Yl(),Xs=e=>{const t=e[0].dataType,n=Tt.size(e[0].dims),r=Tt.size(e[1].dims),a=r%4==0;return{name:\"FastGeluWithBias\",shaderCache:{hint:`${a}`,inputDependencies:[\"type\",\"type\"]},getShaderSource:e=>{const n=Nt(\"x\",t,[1],4),r=Nt(\"bias\",t,[1],4),s=Vt(\"y\",t,[1],4),i=e=>`\\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,o=a?`\\n      let bias = ${r.getByOffset(\"global_idx % (uniforms.bias_size / 4)\")};`:`${i(0)}${i(1)}${i(2)}${i(3)}\\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:\"output_vec_size\",type:\"u32\"},{name:\"bias_size\",type:\"u32\"}]).declareVariables(n,r,s)}\\n\\n    ${Qr(At(t))}\\n\\n    ${e.mainStart(Pt)}\\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_vec_size\")}\\n\\n      let x = ${n.getByOffset(\"global_idx\")};\\n      ${o}\\n      let x_in = x + bias;\\n      ${s.setByOffset(\"global_idx\",Yr(\"x_in\"))}\\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/Pt/4)}})}},Ks=e=>{e.inputs.length<2||0===Tt.size(e.inputs[1].dims)?Zr(e):e.compute(Xs(e.inputs))}})),wu=j((()=>{Ol(),jl(),Vl(),ql(),Qs=e=>{if(!e||2!==e.length)throw new Error(\"Gather requires 2 inputs.\")},Ys=(e,t)=>{const n=e[0].dims,r=e[1].dims,a=n.length,s=Tt.normalizeAxis(t.axis,a),i=n.slice(0);i.splice(s,1,...r);const o=n[s],l=9===e[0].dataType?4:1,u=Math.ceil(Tt.size(i)/l),d=[{type:12,data:u},{type:6,data:o},{type:12,data:s},...It(e[0].dims,e[1].dims,i)];return{name:\"Gather\",shaderCache:{hint:t.cacheKey,inputDependencies:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let n,o=Nt(\"data\",e[0].dataType,e[0].dims.length,l),u=Nt(\"inputIndices\",e[1].dataType,e[1].dims.length),d=Vt(\"output\",e[0].dataType,i.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${u.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${i.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\\n          var idx${e} = ${u.getByIndices(`indicesIndices${e}`)};\\n          if (idx${e} < 0) {\\n            idx${e} = idx${e} + uniforms.axisDimLimit;\\n          }\\n          var dataIndices${e} : ${o.type.indices};\\n        `;for(let r=0,o=0;r<a;r++)r===s?(n+=`${a>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,o+=t):(n+=`${a>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${i.length>1?`outputIndices${e}[${o}]`:`outputIndices${e}`};`,o++);return n};if(9===e[0].dataType){const e=(e,t,n=\"\")=>`\\n          let outputIndices${t} = ${d.offsetToIndices(`outputOffset + ${t}u`)};\\n          ${c(t)};\\n          let offset${t} = ${o.indicesToOffset(`dataIndices${t}`)};\\n          let index${t} = offset${t} / 4u;\\n          let component${t} = offset${t} % 4u;\\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\\n        `;n=`\\n        let outputOffset = global_idx * ${l};\\n        var value = vec4<u32>(0);\\n        ${e(\"value\",0,\"u32\")}\\n        ${e(\"value\",1,\"u32\")}\\n        ${e(\"value\",2,\"u32\")}\\n        ${e(\"value\",3,\"u32\")}\\n        ${d.setByOffset(\"global_idx\",\"value\")}\\n      `}else n=`\\n      let outputIndices = ${d.offsetToIndices(\"global_idx\")};\\n      ${c(\"\")};\\n      let value = ${o.getByIndices(\"dataIndices\")};\\n      ${d.setByOffset(\"global_idx\",\"value\")};\\n      `;return`\\n      ${t.registerUniform(\"outputSize\",\"u32\").registerUniform(\"axisDimLimit\",\"i32\").registerUniform(\"axis\",\"u32\").declareVariables(o,u,d)}\\n      ${t.mainStart()}\\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n        ${n}\\n      }`}}},Zs=e=>vt({axis:e.axis}),Js=(e,t)=>{const n=e.inputs;Qs(n),e.compute(Ys(e.inputs,t))}})),yu=j((()=>{Ol(),jl(),Vl(),ql(),ei=(e,t)=>{if(e.length<3||e.length>4)throw new Error(\"GatherBlockQuantized requires 3 or 4 inputs.\");const n=Tt.normalizeAxis(t.quantizeAxis,e[0].dims.length),r=t.blockSize,a=e[0],s=e[2],i=4===e.length?e[3]:void 0;if(s.dims.length!==a.dims.length||!a.dims.map(((e,t)=>t===n?Math.ceil(e/r)===s.dims[t]:e===s.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error(\"Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.\");if(i){if(i.dataType!==a.dataType)throw new Error(\"Zero point must have the same data type as the input tensor.\");if(i.dims.length!==s.dims.length||!i.dims.map(((e,t)=>e===s.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error(\"Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.\")}},ti=(e,t)=>{const n=e[0].dims,r=e[1].dims,a=n.length,s=Tt.normalizeAxis(t.gatherAxis,a),i=Tt.normalizeAxis(t.quantizeAxis,a),o=n.slice(0);o.splice(s,1,...r);const l=Tt.size(o),u=e[2].dataType,d=22===e[0].dataType,c=[{type:12,data:l},{type:12,data:i},{type:12,data:s},{type:12,data:t.blockSize},...It(...e.map(((e,t)=>e.dims)),o)];return{name:\"GatherBlockQuantized\",shaderCache:{hint:`${t.cacheKey};${e.filter(((e,t)=>1!==t)).map((e=>e.dims.join(\"_\"))).join(\";\")}`,inputDependencies:Array.from({length:e.length},((e,t)=>\"rank\"))},getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:t=>{const a=Nt(\"data\",e[0].dataType,e[0].dims.length),i=Nt(\"inputIndices\",e[1].dataType,e[1].dims.length),l=Nt(\"scales\",e[2].dataType,e[2].dims.length),c=e.length>3?Nt(\"zeroPoint\",e[3].dataType,e[3].dims.length):void 0,p=Vt(\"output\",u,o.length),h=[a,i,l];c&&h.push(c);return`\\n        ${t.registerUniforms([{name:\"output_size\",type:\"u32\"},{name:\"quantize_axis\",type:\"u32\"},{name:\"gather_axis\",type:\"u32\"},{name:\"block_size\",type:\"u32\"}]).declareVariables(...h,p)}\\n        ${t.mainStart()}\\n        let output_indices = ${p.offsetToIndices(\"global_idx\")};\\n        var indices_indices = ${i.type.indices}(0);\\n        ${r.length>1?`\\n          for (var i: u32 = 0; i < ${r.length}; i++) {\\n            let index = ${p.indicesGet(\"output_indices\",\"uniforms.gather_axis + i\")};\\n            ${i.indicesSet(\"indices_indices\",\"i\",\"index\")};\\n          }`:`indices_indices = ${p.indicesGet(\"output_indices\",\"uniforms.gather_axis\")};`};\\n        var data_indices = ${a.type.indices}(0);\\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\\n          let index = ${p.indicesGet(\"output_indices\",\"i\")};\\n          ${a.indicesSet(\"data_indices\",\"i\",\"index\")};\\n        }\\n        var index_from_indices = ${i.getByIndices(\"indices_indices\")};\\n        if (index_from_indices < 0) {\\n          index_from_indices += ${n[s]};\\n        }\\n        ${a.indicesSet(\"data_indices\",\"uniforms.gather_axis\",\"u32(index_from_indices)\")};\\n        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {\\n          let index = ${p.indicesGet(\"output_indices\",`i + ${r.length} - 1`)};\\n          ${a.indicesSet(\"data_indices\",\"i\",\"index\")};\\n        }\\n        let data_offset = ${a.indicesToOffset(\"data_indices\")};\\n        let data_index = data_offset % 8;\\n        // Convert 4-bit packed data to 8-bit packed data.\\n        let packed_4bit_quantized_data = ${a.getByOffset(\"data_offset / 8\")};\\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\\n        let quantized_data_vec = ${d?\"unpack4xI8\":\"unpack4xU8\"}(u32(packed_8bit_quantized_data));\\n        let quantized_data = quantized_data_vec[data_index / 2];\\n        var scale_indices = data_indices;\\n        let quantize_axis_index = ${l.indicesGet(\"data_indices\",\"uniforms.quantize_axis\")} / uniforms.block_size;\\n        ${l.indicesSet(\"scale_indices\",\"uniforms.quantize_axis\",\"quantize_axis_index\")};\\n        var scale = ${l.getByIndices(\"scale_indices\")};\\n        ${c?`\\n              let zero_point_indices = scale_indices;\\n              let zero_point_offset = ${c.indicesToOffset(\"zero_point_indices\")};\\n              let zero_point_index = zero_point_offset % 8;\\n              let packed_4bit_zero_points = ${c.getByOffset(\"zero_point_offset / 8\")};\\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\\n              let zero_point_vec = ${d?\"unpack4xI8\":\"unpack4xU8\"}(u32(packed_8bit_zero_points));\\n              let zero_point = zero_point_vec[zero_point_index / 2];`:\"var zero_point = 0\"};\\n        let dequantized_data = ${At(u)}(quantized_data - zero_point) * scale;\\n        ${p.setByOffset(\"global_idx\",\"dequantized_data\")};\\n    }`}}},ni=(e,t)=>{const n=e.inputs;ei(n,t),e.compute(ti(e.inputs,t))},ri=e=>vt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})})),bu=j((()=>{Ol(),jl(),Vl(),ql(),ai=e=>{if(!e||2!==e.length)throw new Error(\"GatherElements requires 2 inputs.\");if(e[0].dims.length<1)throw new Error(\"GatherElements requires that the data input be rank >= 1.\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\"GatherElements requires that the data input and\\n                     indices input tensors be of same rank.\")},si=(e,t)=>{const n=e[0].dims,r=e[0].dataType,a=n.length,s=e[1].dims,i=e[1].dataType,o=Tt.normalizeAxis(t.axis,a),l=n[o],u=s.slice(0),d=Tt.size(u),c=Nt(\"input\",r,a),p=Nt(\"indicesInput\",i,s.length),h=Vt(\"output\",r,u.length),m=[{type:12,data:d},{type:6,data:l},{type:12,data:o}];return m.push(...It(n,s,u)),{name:\"GatherElements\",shaderCache:{inputDependencies:[\"rank\",\"rank\"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:m}),getShaderSource:e=>`\\n      ${e.registerUniform(\"outputSize\",\"u32\").registerUniform(\"axisDimLimit\",\"i32\").registerUniform(\"axis\",\"u32\").declareVariables(c,p,h)}\\n      ${e.mainStart()}\\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n\\n      let outputIndices = ${h.offsetToIndices(\"global_idx\")};\\n\\n      var idx = ${p.getByOffset(\"global_idx\")};\\n      if (idx < 0) {\\n        idx = idx + uniforms.axisDimLimit;\\n      }\\n      var inputIndices = ${c.type.indices}(outputIndices);\\n      ${c.indicesSet(\"inputIndices\",\"uniforms.axis\",\"u32(idx)\")};\\n      let value = ${c.getByIndices(\"inputIndices\")};\\n\\n      ${h.setByOffset(\"global_idx\",\"value\")};\\n  }`}},ii=e=>vt({axis:e.axis}),oi=(e,t)=>{const n=e.inputs;ai(n),e.compute(si(e.inputs,t))}})),vu=j((()=>{Ol(),jl(),ql(),li=e=>{if(!e)throw new Error(\"Input is missing\");if(e.length<2||e.length>3)throw new Error(\"Invaid input number.\");if(3===e.length&&e[2].dims.length>2)throw new Error(\"Invalid input shape of C\");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error(\"Input types are mismatched\")},ui=(e,t)=>{const n=e[0].dims.slice(),r=e[1].dims.slice(),[a,s,i]=$t.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),o=[a,s];if(!o)throw new Error(\"Can't use gemm on the given tensors\");const l=Tt.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:s},{type:12,data:i},{type:1,data:t.alpha},{type:1,data:t.beta}],d=[\"type\",\"type\"];3===e.length&&(u.push(...It(e[2].dims)),d.push(\"rank\")),u.push(...It(o));return{name:\"Gemm\",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:n=>{let r=\"\";t.transA&&t.transB?r=\"value += a[k * uniforms.M + m] * b[n * uniforms.K + k];\":t.transA&&!t.transB?r=\"value += a[k * uniforms.M + m] * b[k * uniforms.N + n];\":!t.transA&&t.transB?r=\"value += a[m * uniforms.K + k] * b[n * uniforms.K + k];\":!t.transA&&!t.transB&&(r=\"value += a[m * uniforms.K + k] * b[k * uniforms.N + n];\");let a=1===t.alpha?\"\":\"value *= uniforms.alpha;\",s=Nt(\"a\",e[0].dataType,e[0].dims),i=Nt(\"b\",e[1].dataType,e[1].dims),l=s.type.value,u=null,d=[s,i];3===e.length&&(u=Nt(\"c\",e[2].dataType,e[2].dims.length),d.push(u));const c=Vt(\"output\",e[0].dataType,o.length);d.push(c);return`\\n  ${n.registerUniforms([{name:\"output_size\",type:\"u32\"},{name:\"M\",type:\"u32\"},{name:\"N\",type:\"u32\"},{name:\"K\",type:\"u32\"},{name:\"alpha\",type:\"f32\"},{name:\"beta\",type:\"f32\"}]).declareVariables(...d)}\\n\\n  ${n.mainStart()}\\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n\\n    let m = global_idx / uniforms.N;\\n    let n = global_idx % uniforms.N;\\n\\n    var value = ${l}(0);\\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\\n      ${r}\\n    }\\n\\n    ${a}\\n    ${null!=u?`let cOffset = ${u.broadcastedIndicesToOffset(\"vec2(m, n)\",c)}; value += ${l}(uniforms.beta) * ${u.getByOffset(\"cOffset\")};`:\"\"}\\n    output[global_idx] = value;\\n  }`}}},di=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),ci=(e,t)=>{li(e.inputs),e.compute(ui(e.inputs,t))}})),xu=j((()=>{Ol(),jl(),Vl(),Rl(),Xl(),ql(),Gl(),pi=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,hi=(e,t)=>{const n=e[0],r=pi(e,1),a=pi(e,2),s=pi(e,3),i=pi(e,4),o=pi(e,5),l=pi(e,6),u=pi(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error(\"Input query is expected to have 3 or 5 dimensions\");let d,c=n.dims[0],p=n.dims[1],h=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],m=p,f=0,g=0,_=Math.floor(h/t.numHeads);if(l&&u&&Tt.size(l.dims)&&Tt.size(u.dims)){if(4!==l.dims.length)throw new Error('Input \"past_key\" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==t.numHeads||l.dims[3]!==_)throw new Error('Input \"past_key\" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[3]!==_)throw new Error('Input \"past_value\" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input \"past_key\" and \"past_value\" shall have same dim 2 (past_sequence_length)');if(4!==u.dims.length)throw new Error('Input \"past_value\" is expected to have 4 dimensions');f=l.dims[2],g=l.dims[2]}else if(l&&Tt.size(l.dims)||u&&Tt.size(u.dims))throw new Error('Input \"past_key\" and \"past_value\" shall be both present or both absent');if(r&&Tt.size(r.dims)>0){if(3!==n.dims.length)throw new Error('Input \"query\" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input \"key\" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input \"query\" and \"key\" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input \"query\" and \"key\" shall have same dim 2 (hidden_size)');d=2,m=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==_)throw new Error('Expect \"key\" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect \"value\" be none when \"key\" has packed kv format.');d=5,m=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==_)throw new Error('Expect \"key\" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=0,m=r.dims[2]}}else{if(5!==n.dims.length)throw new Error('Input \"query\" is expected to have 5 dimensions when key is empty');if(n.dims[2]!==t.numHeads||3!==n.dims[3])throw new Error('Expect \"query\" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');d=3}if(s&&Tt.size(s.dims)>0){if(1!==s.dims.length)throw new Error('Input \"bias\" is expected to have 1 dimension');if(r&&5===r.dims.length&&2===r.dims[3])throw new Error(\"bias is not allowed for packed kv.\")}let w=f+m,y=0;if(i&&Tt.size(i.dims)>0){y=8;const e=i.dims;throw 1===e.length?e[0]===c?y=1:e[0]===3*c+2&&(y=3):2===e.length&&e[0]===c&&e[1]===w&&(y=5),8===y?new Error('Input \"key_padding_mask\" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error(\"Mask not supported\")}let b=!1,v=h;if(a&&Tt.size(a.dims)>0){if(3!==a.dims.length&&4!==a.dims.length)throw new Error('Input \"value\" is expected to have 3 or 4 dimensions');if(n.dims[0]!==a.dims[0])throw new Error('Input \"query\" and \"value\" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(m!==a.dims[1])throw new Error('Input \"key\" and \"value\" shall have the same dim 1 (kv_sequence_length)');v=a.dims[2]}else{if(m!==a.dims[2])throw new Error('Input \"key\" and \"value\" shall have the same dim 2 (kv_sequence_length)');v=a.dims[1]*a.dims[3],b=!0}}if(i&&Tt.size(i.dims)>0)throw new Error(\"Key padding mask is not supported\");if(o&&Tt.size(o.dims)>0){if(4!==o.dims.length)throw new Error('Input \"attention_bias\" is expected to have 4 dimensions');if(o.dims[0]!==c||o.dims[1]!==t.numHeads||o.dims[2]!==p||o.dims[3]!==w)throw new Error('Expect \"attention_bias\" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:w,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:h,vHiddenSize:v,headSize:_,vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:b,qkvFormat:d}},mi=e=>vt({...e}),fi=vt({perm:[0,2,1,3]}),gi=(e,t,n,r,a,s,i)=>{const o=[r,a,s],l=Tt.size(o),u=[{type:12,data:l},{type:12,data:i},{type:12,data:s}];return e.compute({name:\"MultiHeadAttentionAddBias\",shaderCache:{inputDependencies:[\"type\",\"type\"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:e=>{const r=Vt(\"qkv_with_bias\",t.dataType,o),a=Nt(\"qkv\",t.dataType,o),s=Nt(\"bias\",n.dataType,o);return`\\n  ${e.registerUniforms([{name:\"output_size\",type:\"u32\"},{name:\"bias_offset\",type:\"u32\"},{name:\"hidden_size\",type:\"u32\"}]).declareVariables(a,s,r)}\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\\n\\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},_i=(e,t,n,r,a,s,i,o)=>{let l=s;if(i&&Tt.size(i.dims)>0){if(1===r)throw new Error(\"AddBiasReshape is not implemented. Please export your model with packed QKV or KV\");return l=gi(e,s,i,t,r,n*a,o),l=l.reshape([t,r,n,a]),1===n||1===r?l:e.compute(Yt(l,fi.perm),{inputs:[l],outputs:[-1]})[0]}return 3===s.dims.length&&(l=s.reshape([t,r,n,a])),1===n||1===r?l:e.compute(Yt(l,fi.perm),{inputs:[l],outputs:[-1]})[0]},wi=(e,t)=>{const n=hi(e.inputs,t),r=e.inputs[0],a=pi(e.inputs,1),s=pi(e.inputs,2),i=pi(e.inputs,3),o=pi(e.inputs,4),l=pi(e.inputs,5),u=pi(e.inputs,6),d=pi(e.inputs,7);if(5===r.dims.length)throw new Error(\"Packed QKV is not implemented\");if(5===a?.dims.length)throw new Error(\"Packed KV is not implemented\");const c=a&&s&&4===a.dims.length&&4===s.dims.length,p=_i(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,i,0);if(c)return rr(e,p,a,s,o,void 0,u,d,l,n);if(!a||!s)throw new Error(\"key and value must be provided\");const h=_i(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,a,i,n.hiddenSize),m=_i(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,s,i,2*n.hiddenSize);rr(e,p,h,m,o,void 0,u,d,l,n)}})),Mu=j((()=>{Ol(),jl(),Vl(),ql(),yi=e=>{if(!e||e.length<1)throw new Error(\"too few inputs\")},bi=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),vt({numOutputs:r,axis:t.axis,splitSizes:n})},vi=e=>`\\nfn calculateOutputIndex(index: u32) -> u32 {\\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\\n    if (index < ${Dt(\"uniforms.size_in_split_axis\",\"i\",e)}) {\\n        return i;\\n    }\\n    }\\n    return ${e}u;\\n}`,xi=e=>{const t=e.length,n=[];for(let r=0;r<t;++r){const a=e[r].setByIndices(\"indices\",\"input[global_idx]\");1===t?n.push(a):0===r?n.push(`if (output_number == ${r}u) { ${a} }`):r===t-1?n.push(`else { ${a} }`):n.push(`else if (output_number == ${r}) { ${a} }`)}return`\\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\\n        ${n.join(\"\\n\")}\\n      }`},Mi=(e,t)=>{let n=e[0].dims,r=Tt.size(n),a=e[0].dataType,s=Tt.normalizeAxis(t.axis,n.length),i=new Array(t.numOutputs),o=Nt(\"input\",a,n.length),l=new Array(t.numOutputs),u=[],d=[],c=0,p=[{type:12,data:r}];for(let r=0;r<t.numOutputs;r++){c+=t.splitSizes[r],l[r]=c;const o=n.slice();o[s]=t.splitSizes[r],d.push(o),i[r]=Vt(`output${r}`,a,o.length),u.push({dims:d[r],dataType:e[0].dataType})}p.push({type:12,data:l},...It(n,...d));return{name:\"Split\",shaderCache:{hint:t.cacheKey,inputDependencies:[\"rank\"]},getShaderSource:e=>`\\n  ${e.registerUniform(\"input_size\",\"u32\").registerUniform(\"size_in_split_axis\",\"u32\",l.length).declareVariables(o,...i)}\\n  ${vi(l.length)}\\n  ${xi(i)}\\n\\n  ${e.mainStart()}\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.input_size\")}\\n\\n    var indices = ${o.offsetToIndices(\"global_idx\")};\\n    var index = ${o.indicesGet(\"indices\",s)};\\n    let output_number = calculateOutputIndex(index);\\n    if (output_number != 0) {\\n      index -= ${Dt(\"uniforms.size_in_split_axis\",\"output_number - 1u\",l.length)};\\n      ${o.indicesSet(\"indices\",s,\"index\")};\\n    }\\n    writeBufferData(output_number, indices, global_idx);\\n  }`,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},Ti=(e,t)=>{yi(e.inputs);const n=1===e.inputs.length?t:bi(e.inputs,t);e.compute(Mi(e.inputs,n),{inputs:[0]})},ki=e=>{const t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error(\"numOutputs and splitSizes lengh must be equal\");return vt({axis:t,numOutputs:r,splitSizes:n})}})),Tu=j((()=>{Vl(),Xl(),xu(),Mu(),Gl(),$i=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error(\"cos_cache and sin_cache inputs are required if do_rotary is specified\");const n=e[0],r=e[1],a=e[2],s=e[3],i=e[4];if(-1!==t.localWindowSize)throw new Error(\"Local attention is not supported\");if(0!==t.softcap)throw new Error(\"Softcap is not supported\");if(0!==t.rotaryInterleaved)throw new Error(\"Rotary interleaved is not supported\");if(t.smoothSoftmax)throw new Error(\"Smooth softmax is not supported\");if(3!==n.dims.length&&5!==n.dims.length)throw new Error(\"Input query is expected to have 3 or 5 dimensions\");let o=n.dims[0],l=n.dims[1],u=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],d=l,c=0,p=!r||0===r.dims.length,h=Math.floor(p?u/(t.numHeads+2*t.kvNumHeads):u/t.numHeads);p&&(u=h*t.numHeads);const m=s&&0!==s.dims.length,f=i&&0!==i.dims.length;if(m&&4===s.dims.length&&s.dims[0]===o&&s.dims[1]!==t.kvNumHeads&&s.dims[2]===t.kvNumHeads&&s.dims[3]===h)throw new Error(\"BSNH pastKey/pastValue is not supported\");if(m&&f){if(4!==s.dims.length)throw new Error('Input \"past_key\" is expected to have 4 dimensions');if(4!==i.dims.length)throw new Error('Input \"past_value\" is expected to have 4 dimensions');c=s.dims[2]}else if(m||f)throw new Error('Input \"past_key\" and \"past_value\" shall be both present or both absent');let g=1;if(r&&r.dims.length>0){if(3!==n.dims.length)throw new Error('Input \"query\" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input \"key\" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input \"query\" and \"key\" shall have same dim 0 (batch size)');if(3===r.dims.length){if(n.dims[2]%r.dims[2]!=0)throw new Error('Dimension 2 of \"query\" should be a multiple of \"key\"');d=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==h)throw new Error('Expect \"key\" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect \"value\" be none when \"key\" has packed kv format.');d=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==h)throw new Error('Expect \"key\" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input \"query\" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect \"query\" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');g=3}let _=!1,w=t.kvNumHeads?h*t.kvNumHeads:u;if(a&&a.dims.length>0){if(3!==a.dims.length&&4!==a.dims.length)throw new Error('Input \"value\" is expected to have 3 or 4 dimensions');if(n.dims[0]!==a.dims[0])throw new Error('Input \"query\" and \"value\" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(d!==a.dims[1])throw new Error('Input \"key\" and \"value\" shall have the same dim 1 (kv_sequence_length)');w=a.dims[2]}else{if(d!==a.dims[2])throw new Error('Input \"past_key\" and \"past_value\" shall have the same dim 2 (kv_sequence_length)');w=a.dims[1]*a.dims[3],_=!0}}const y=e.length>4?e[5]:void 0;if(y&&1!==y.dims.length&&y.dims[0]!==o)throw new Error('Input \"seqlens\" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:o,sequenceLength:l,pastSequenceLength:c,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:u,vHiddenSize:w,headSize:h,vHeadSize:Math.floor(w/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:_,qkvFormat:g}},Ci=vt({perm:[0,2,1,3]}),Si=(e,t,n)=>{let r=t,a=n.kvNumHeads;return 3===t.dims.length&&0!==n.kvSequenceLength&&(r=t.reshape([n.batchSize,n.kvSequenceLength,a,n.headSize]),r=e.compute(Yt(r,Ci.perm),{inputs:[r],outputs:[-1]})[0]),r},Pi=(e,t)=>{const n=$i(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error(\"Packed QKV is not implemented\");if(5===e.inputs[1]?.dims.length)throw new Error(\"Packed KV is not implemented\");const r=e.inputs[0],a=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,s=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,i=e.inputs[3]&&0!==e.inputs[3].dims.length?e.inputs[3]:void 0,o=e.inputs[4]&&0!==e.inputs[4].dims.length?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,u=e.inputs.length>5?e.inputs[6]:void 0,d=n.kvNumHeads?n.kvNumHeads:n.numHeads,c=vt({axis:2,numOutputs:3,splitSizes:[n.numHeads*n.headSize,d*n.headSize,d*n.headSize]}),[p,h,m]=a||s?[r,a,s]:e.compute(Mi([r],c),{inputs:[r],outputs:[-1,-1,-1]}),f=_i(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,p,void 0,0);rr(e,f,Si(e,h,n),Si(e,m,n),void 0,void 0,i,o,void 0,n,l,u)}})),ku=j((()=>{Ol(),jl(),Gl(),ql(),Ei=(e,t,n,r,a,s,i,o)=>{const l=zt(s),u=1===l?\"f32\":`vec${l}f`,d=1===l?\"vec2f\":`mat2x${l}f`,c=a*i,p=[a,i,s/l],h=[a,i,2],m=[];m.push(...It(p,h));return e.compute({name:\"InstanceNormComputeChannelScaleShift\",shaderCache:{hint:`${l};${o}`,inputDependencies:[\"rank\",\"type\",\"type\"]},getRunData:()=>({outputs:[{dims:h,dataType:1}],dispatchGroup:{x:c},programUniforms:m}),getShaderSource:e=>{const a=Nt(\"x\",t.dataType,3,l),s=[a,Nt(\"scale\",n.dataType,n.dims),Nt(\"bias\",r.dataType,r.dims),Vt(\"output\",1,3,2)];return`\\n  var<workgroup> workgroup_shared : array<${d}, 64>;\\n  const workgroup_size = 64u;\\n  ${e.declareVariables(...s)}\\n  ${e.mainStart(64)}\\n    let batch = workgroup_index / uniforms.x_shape[1];\\n    let channel = workgroup_index % uniforms.x_shape[1];\\n    let hight = uniforms.x_shape[2];\\n    // initialize workgroup memory\\n    var sum = ${u}(0);\\n    var squared_sum = ${u}(0);\\n    for (var h = local_idx; h < hight; h += workgroup_size) {\\n      let value = ${u}(${a.get(\"batch\",\"channel\",\"h\")});\\n      sum += value;\\n      squared_sum += value * value;\\n    }\\n    workgroup_shared[local_idx] = ${d}(sum, squared_sum);\\n    workgroupBarrier();\\n\\n    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {\\n      if (local_idx < currSize) {\\n        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];\\n      }\\n      workgroupBarrier();\\n    }\\n    if (local_idx == 0) {\\n      let sum_final = ${Lt(\"workgroup_shared[0][0]\",l)} / f32(hight * ${l});\\n      let squared_sum_final = ${Lt(\"workgroup_shared[0][1]\",l)} / f32(hight * ${l});\\n\\n      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));\\n      let channel_scale = inv_std_dev * f32(scale[channel]);\\n      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;\\n      output[workgroup_index] = vec2f(channel_scale, channel_shift);\\n    }\\n  }`}},{inputs:[t,n,r],outputs:[-1]})[0]},Fi=(e,t,n)=>{const r=t[0].dims,a=r,s=r[0],i=r[1],o=Tt.sizeFromDimension(r,2),l=zt(o),u=Tt.size(a)/l,d=Ei(e,t[0],t[1],t[2],s,o,i,n.epsilon),c=[s,i,o/l],p=[s,i];e.compute({name:\"InstanceNormalization\",shaderCache:{hint:`${l}`,inputDependencies:[\"type\",\"none\"]},getRunData:()=>({outputs:[{dims:a,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...It(c,p,c)]}),getShaderSource:e=>{const n=Nt(\"x\",t[0].dataType,c.length,l),r=Nt(\"scale_shift\",1,p.length,2),a=Vt(\"output\",t[0].dataType,c.length,l),s=[n,r,a];return`\\n  ${e.registerUniform(\"output_size\",\"u32\").declareVariables(...s)}\\n  ${e.mainStart()}\\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n      let outputIndices = ${a.offsetToIndices(\"global_idx\")};\\n      let batch = outputIndices[0];\\n      let channel = outputIndices[1];\\n      let scale_shift = ${r.getByIndices(\"vec2<u32>(batch, channel)\")};\\n      let value = ${n.getByOffset(\"global_idx\")} * ${a.type.value}(scale_shift.x) + ${a.type.value}(scale_shift.y);\\n      ${a.setByOffset(\"global_idx\",\"value\")};\\n  }`}},{inputs:[t[0],d]})},Ai=(e,t,n)=>{const r=t[0].dims,a=r,s=r[0],i=r[r.length-1],o=Tt.sizeFromDimension(r,1)/i,l=zt(i),u=Tt.size(a)/l,d=[{type:12,data:o},{type:12,data:Math.floor(i/l)}],c=[0,r.length-1];for(let e=0;e<r.length-2;e++)c.push(e+1);const p=e.compute(Yt(e.inputs[0],c),{inputs:[e.inputs[0]],outputs:[-1]})[0],h=Ei(e,p,t[1],t[2],s,o,i,n.epsilon);e.compute({name:\"InstanceNormalizationNHWC\",shaderCache:{hint:`${l}`,inputDependencies:[\"type\",\"type\"]},getRunData:()=>({outputs:[{dims:a,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:e=>{const n=Ft(t[0].dataType),r=1===l?\"vec2f\":`mat${l}x2f`,s=e=>{const t=0===e?\"x\":\"y\",r=1===l?\"f32\":`vec${l}f`;switch(l){case 1:return`${n}(${r}(scale.${t}))`;case 2:return`vec2<${n}>(${r}(scale[0].${t}, scale[1].${t}))`;case 4:return`vec4<${n}>(${r}(scale[0].${t}, scale[1].${t}, scale[2].${t}, scale[3].${t}))`;default:throw new Error(`Not supported compoents ${l}`)}},i=Nt(\"input\",t[0].dataType,t[0].dims,l),o=Vt(\"output\",t[0].dataType,a,l);return`\\n  @group(0) @binding(0) var<storage, read> input : array<${i.type.storage}>;\\n  @group(0) @binding(1) var<storage, read> scale_input : array<${r}>;\\n  @group(0) @binding(2) var<storage, read_write> output : array<${o.type.storage}>;\\n  struct Uniforms {H: u32, C : u32};\\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\\n\\n  ${e.mainStart()}\\n    let current_image_number = global_idx / (uniforms.C * uniforms.H);\\n    let current_channel_number = global_idx % uniforms.C;\\n\\n    let scale_offset = current_image_number * uniforms.C + current_channel_number;\\n    let scale = scale_input[scale_offset];\\n    output[global_idx] = fma(input[global_idx], ${s(0)}, ${s(1)});\\n  }`}},{inputs:[t[0],h]})},Ii=(e,t)=>{\"NHWC\"===t.format?Ai(e,e.inputs,t):Fi(e,e.inputs,t)}})),$u=j((()=>{Ol(),jl(),ql(),zi=e=>{if(!e||e.length<2)throw new Error(\"layerNorm requires at least 2 inputs.\")},Oi=(e,t,n)=>{const r=t.simplified,a=e[0].dims,s=e[1],i=!r&&e[2],o=a,l=Tt.normalizeAxis(t.axis,a.length),u=Tt.sizeToDimension(a,l),d=Tt.sizeFromDimension(a,l),c=Tt.size(s.dims),p=i?Tt.size(i.dims):0;if(c!==d||i&&p!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\\n       Size of scale and bias (if provided) must match this.\\n       Got scale size of ${c} and bias size of ${p}`);const h=[];for(let e=0;e<a.length;++e)e<l?h.push(a[e]):h.push(1);const m=zt(d),f=[\"type\",\"type\"],g=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/m)},{type:1,data:t.epsilon}];i&&f.push(\"type\");const _=n>1,w=n>2,y=[{dims:o,dataType:e[0].dataType}];return _&&y.push({dims:h,dataType:1}),w&&y.push({dims:h,dataType:1}),{name:\"LayerNormalization\",shaderCache:{hint:`${m};${n};${r}`,inputDependencies:f},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:t=>{const n=Ft(e[0].dataType),a=[Nt(\"x\",e[0].dataType,e[0].dims,m),Nt(\"scale\",s.dataType,s.dims,m)];i&&a.push(Nt(\"bias\",i.dataType,i.dims,m)),a.push(Vt(\"output\",e[0].dataType,o,m)),_&&a.push(Vt(\"mean_data_output\",1,h)),w&&a.push(Vt(\"inv_std_output\",1,h));return`\\n  ${t.registerUniforms([{name:\"norm_count\",type:\"u32\"},{name:\"norm_size\",type:\"f32\"},{name:\"norm_size_vectorized\",type:\"u32\"},{name:\"epsilon\",type:\"f32\"}]).declareVariables(...a)}\\n  ${t.mainStart()}\\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.norm_count\")}\\n    let offset = global_idx * uniforms.norm_size_vectorized;\\n    var mean_vector = ${Ot(\"f32\",m)};\\n    var mean_square_vector = ${Ot(\"f32\",m)};\\n\\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\\n      let value = ${Bt(n,m,\"x[h + offset]\")};\\n      mean_vector += value;\\n      mean_square_vector += value * value;\\n    }\\n    let mean = ${Lt(\"mean_vector\",m)} / uniforms.norm_size;\\n    let inv_std_dev = inverseSqrt(${Lt(\"mean_square_vector\",m)} / uniforms.norm_size ${r?\"\":\"- mean * mean\"} + uniforms.epsilon);\\n\\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\\n      let f32input = ${Bt(n,m,\"x[j + offset]\")};\\n      let f32scale = ${Bt(n,m,\"scale[j]\")};\\n      output[j + offset] = ${a[0].type.value}((f32input ${r?\"\":\"- mean\"}) * inv_std_dev * f32scale\\n        ${i?`+ ${Bt(n,m,\"bias[j]\")}`:\"\"}\\n      );\\n    }\\n\\n    ${_?\"mean_data_output[global_idx] = mean\":\"\"};\\n    ${w?\"inv_std_output[global_idx] = inv_std_dev\":\"\"};\\n  }`}}},Bi=(e,t)=>{zi(e.inputs),e.compute(Oi(e.inputs,t,e.outputCount))}})),Cu=j((()=>{Ol(),jl(),Vl(),ql(),Li=(e,t)=>{if(e.length<3||e.length>4)throw new Error(\"MatMulNBits requires 3 or 4 inputs\");const n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error(\"The last dim of input shape does not match the k value\");const a=Math.floor((t.k+t.blockSize-1)/t.blockSize),s=t.blockSize/8*t.bits,i=e[1];if(!Tt.areEqual(i.dims,[t.n,a,s]))throw new Error(\"The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize\");const o=e[2].dims;if(Tt.size(o)!==t.n*a)throw new Error(\"scales input size error.\");if(4===e.length){const n=e[3].dims,r=t.bits>4?t.n*a:t.n*Math.floor((a+1)/2);if(Tt.size(n)!==r)throw new Error(\"zeroPoints input size error.\")}},Di=(e,t)=>{const n=e[0].dims,r=n.length,a=n[r-2],s=t.k,i=t.n,o=n.slice(0,r-2),l=Tt.size(o),u=e[1].dims[2]/4,d=e[0].dataType,c=zt(t.k),p=zt(u),h=zt(i),m=o.concat([a,i]),f=a>1&&i/h%2==0?2:1,g=Tt.size(m)/h/f,_=64,w=[],y=[l,a,s/c],b=Tt.convertShape(e[1].dims).slice();b.splice(-1,1,u/p),w.push(...It(y)),w.push(...It(b)),w.push(...It(e[2].dims)),4===e.length&&w.push(...It(Tt.convertShape(e[3].dims)));const v=[l,a,i/h];w.push(...It(v));return{name:\"MatMulNBits\",shaderCache:{hint:`${t.blockSize};${t.bits};${c};${p};${h};${f};64`,inputDependencies:Array(e.length).fill(\"rank\")},getRunData:()=>({outputs:[{dims:m,dataType:d}],dispatchGroup:{x:g},programUniforms:w}),getShaderSource:n=>{const r=y.length,a=Nt(\"a\",e[0].dataType,r,c),s=Nt(\"b\",12,b.length,p),i=Nt(\"scales\",e[2].dataType,e[2].dims.length),o=[a,s,i],l=4===e.length?Nt(\"zero_points\",12,e[3].dims.length):void 0;l&&o.push(l);const d=v.length,m=Vt(\"output\",e[0].dataType,d,h),g=Ft(e[0].dataType),w=(()=>{switch(c){case 1:return`array<${g}, 8>`;case 2:return`mat4x2<${g}>`;case 4:return`mat2x4<${g}>`;default:throw new Error(`${c}-component is not supported.`)}})();return`\\n        var<workgroup> workgroup_shared: array<${m.type.value}, ${f*_}>;\\n        ${n.declareVariables(...o,m)}\\n        ${n.mainStart([_,1,1])}\\n          let output_indices = ${m.offsetToIndices(`(global_idx / 64) * ${f}`)};\\n          let col = output_indices[2];\\n          let row = output_indices[1];\\n          let batch = output_indices[0];\\n          let nBlocksPerCol = uniforms.b_shape[1];\\n\\n          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {\\n            //process one block\\n            var word_offset: u32 = block * ${t.blockSize/c};\\n            ${(()=>{let e=`\\n            var col_index = col * ${h};\\n            ${l?\"\\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\\n            var zero_point_byte_count: u32;\\n            var zero_point_word_index: u32;\\n            var zero_point_byte_offset: u32;\\n            let zero_point_nibble_offset: u32 = block & 0x1u;\\n            var zero_point_bits_offset: u32;\\n            var zero_point_word: u32;\":`\\n            // The default zero point is 8 for unsigned 4-bit quantization.\\n            let zero_point = ${g}(8);`}\\n            `;for(let t=0;t<h*f;t++)e+=`\\n            let scale${t} = ${i.getByOffset(\"col_index * nBlocksPerCol + block\")};\\n            ${l?`\\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\\n            zero_point_word = ${l.getByOffset(\"zero_point_word_index\")} >> zero_point_bits_offset;\\n            let zero_point${t} = ${g}((zero_point_word) & 0xFu);`:\"\"}\\n            col_index += 1;`;return e})()}\\n            for (var word: u32 = 0; word < ${u}; word += ${p}) {\\n              ${(()=>{let e=`col_index = col * ${h};`;for(let t=0;t<h*f;t++)e+=`\\n            let b${t}_data = ${s.getByIndices(`${s.type.indices}(col_index, block, word)`)};\\n            col_index += 1;`;return e+=`\\n            var b_value: u32;\\n            let b_mask: u32 = 0x0F0F0F0Fu;\\n            var b_value_lower: vec4<u32>;\\n            var b_value_upper: vec4<u32>;\\n            var b_quantized_values: ${w};\\n            var b_dequantized_values: ${w};`,e})()}\\n              for (var i: u32 = 0; i < ${p}; i++) {\\n                ${(()=>{let e=`\\n          // reuse a data\\n            var input_offset = ${a.indicesToOffset(`${a.type.indices}(batch, row, word_offset)`)};\\n            var a_data: ${w};\\n            for (var j: u32 = 0; j < ${8/c}; j++) {\\n              a_data[j] = ${a.getByOffset(\"input_offset\")};\\n              input_offset++;\\n            }\\n          `;for(let t=0;t<h*f;t++)e+=`\\n            b_value = ${1===p?`b${t}_data`:`b${t}_data[i]`};\\n            b_value_lower = unpack4xU8(b_value & b_mask);\\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\\n            b_quantized_values = ${w}(${Array.from({length:4},((e,t)=>`${g}(b_value_lower[${t}]), ${g}(b_value_upper[${t}])`)).join(\", \")});\\n            b_dequantized_values = ${1===c?`${w}(${Array.from({length:8},((e,n)=>`(b_quantized_values[${n}] - ${l?`zero_point${t}`:\"zero_point\"}) * scale${t}`)).join(\", \")});`:`(b_quantized_values - ${w}(${Array(8).fill(l?`zero_point${t}`:\"zero_point\").join(\",\")})) * scale${t};`};\\n            workgroup_shared[local_id.x * ${f} + ${Math.floor(t/h)}]${h>1?`[${t%h}]`:\"\"} += ${Array.from({length:8/c},((e,t)=>\"\"+(1===c?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`))).join(\" + \")};\\n          `;return e})()}\\n                word_offset += ${8/c};\\n              }\\n            }\\n          }\\n          workgroupBarrier();\\n\\n          if (local_id.x < ${f}) {\\n            var output_value: ${m.type.value} = ${m.type.value}(0);\\n            var workgroup_shared_offset: u32 = local_id.x;\\n            for (var b: u32 = 0u; b < 64u; b++) {\\n              output_value += workgroup_shared[workgroup_shared_offset];\\n              workgroup_shared_offset += ${f};\\n            }\\n            ${m.setByIndices(`${m.type.indices}(batch, row, col + local_id.x)`,\"output_value\")};\\n          }\\n        }`}}},Ri=(e,t)=>{const n=e[0].dims,r=n.length,a=n[r-2],s=t.k,i=t.n,o=n.slice(0,r-2),l=Tt.size(o),u=e[1].dims[2]/4,d=e[0].dataType,c=zt(t.k),p=zt(u),h=o.concat([a,i]),m=i%8==0?8:i%4==0?4:1,f=128/m,g=f*p*8,_=g/c,w=g/t.blockSize,y=Tt.size(h)/m,b=[],v=[l,a,s/c],x=Tt.convertShape(e[1].dims).slice();x.splice(-1,1,u/p),b.push(...It(v)),b.push(...It(x)),b.push(...It(e[2].dims)),4===e.length&&b.push(...It(Tt.convertShape(e[3].dims)));const M=[l,a,i];b.push(...It(M));return{name:\"BlockwiseMatMulNBits32\",shaderCache:{hint:`${t.blockSize};${c};${p};${f};${m}`,inputDependencies:Array(e.length).fill(\"rank\")},getRunData:()=>({outputs:[{dims:h,dataType:d}],dispatchGroup:{x:y},programUniforms:b}),getShaderSource:n=>{const r=v.length,a=Nt(\"a\",e[0].dataType,r,c),s=Nt(\"b\",12,x.length,p),i=Nt(\"scales\",e[2].dataType,e[2].dims.length),o=[a,s,i],l=4===e.length?Nt(\"zero_points\",12,e[3].dims.length):void 0;l&&o.push(l);const u=M.length,d=Vt(\"output\",e[0].dataType,u),h=Ft(e[0].dataType);return`\\n        var<workgroup> sub_a: array<${a.type.value}, ${_}>;\\n        var<workgroup> inter_results: array<array<${d.type.value}, ${f}>, ${m}>;\\n        ${n.declareVariables(...o,d)}\\n        ${n.mainStart([f,m,1])}\\n          let output_indices = ${d.offsetToIndices(`workgroup_index * ${m}`)};\\n          let col = output_indices[2];\\n          let row = output_indices[1];\\n          let batch = output_indices[0];\\n          let n_blocks_per_col = uniforms.b_shape[1];\\n          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;\\n\\n          // Loop over shared dimension.\\n          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {\\n            let a_col_start = tile * ${_};\\n            // load one tile A data into shared memory.\\n            for (var a_offset = local_idx; a_offset < ${_}; a_offset += 128)\\n            {\\n              let a_col = a_col_start + a_offset;\\n              if (a_col < uniforms.a_shape[2])\\n              {\\n                sub_a[a_offset] = ${a.getByIndices(`${a.type.indices}(batch, row, a_col)`)};\\n              } else {\\n                sub_a[a_offset] = ${a.type.value}(0);\\n              }\\n            }\\n            workgroupBarrier();\\n\\n            // each thread process one block\\n            let b_row = col + local_id.y;\\n            let block = tile * ${w} + local_id.x;\\n            ${l?`\\n            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;\\n            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);\\n            let zero_point_word_index = zero_point_byte_count >> 0x2u;\\n            let zero_point_byte_offset = zero_point_byte_count & 0x3u;\\n            let zero_point_nibble_offset: u32 = block & 0x1u;\\n            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\\n            let zero_point_word = ${l.getByOffset(\"zero_point_word_index\")} >> zero_point_bits_offset;\\n            let zero_point = ${h}((zero_point_word) & 0xFu);`:`\\n            // The default zero point is 8 for unsigned 4-bit quantization.\\n            let zero_point = ${h}(8);`}\\n            let scale = ${i.getByOffset(\"b_row * n_blocks_per_col + block\")};\\n            let b_data = ${s.getByIndices(`${s.type.indices}(b_row, block, 0)`)};\\n            var word_offset = local_id.x * ${t.blockSize/c};\\n            for (var i: u32 = 0; i < ${p}; i++) {\\n              ${(()=>{switch(c){case 1:return`\\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);\\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`\\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1]);\\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return\"\\n          let a_data0 = sub_a[word_offset];\\n          let a_data1 = sub_a[word_offset + 1];\";default:throw new Error(`${c}-component is not supported.`)}})()}\\n              let b_value = ${1===p?\"b_data\":\"b_data[i]\"};\\n              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);\\n              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);\\n              let b_quantized_values = mat2x4<${h}>(${Array.from({length:4},((e,t)=>`${h}(b_value_lower[${t}]), ${h}(b_value_upper[${t}])`)).join(\", \")});\\n              let b_dequantized_values = (b_quantized_values - mat2x4<${h}>(${Array(8).fill(\"zero_point\").join(\",\")})) * scale;\\n              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},((e,t)=>`dot(a_data${t}, b_dequantized_values[${t}])`)).join(\" + \")};\\n              word_offset += ${8/c};\\n            }\\n            workgroupBarrier();\\n          }\\n\\n          if (local_idx < ${m}) {\\n            var output_value: ${d.type.value} = ${d.type.value}(0);\\n            for (var b = 0u; b < ${f}; b++) {\\n              output_value += inter_results[local_idx][b];\\n            }\\n            if (col + local_idx < uniforms.output_shape[2])\\n            {\\n              ${d.setByIndices(`${d.type.indices}(batch, row, col + local_idx)`,\"output_value\")}\\n            }\\n          }\\n        }`}}},Ni=(e,t)=>{Li(e.inputs,t),32===t.blockSize&&e.adapterInfo.isVendor(\"intel\")&&e.adapterInfo.isArchitecture(\"gen-12lp\")?e.compute(Ri(e.inputs,t)):e.compute(Di(e.inputs,t))},Vi=e=>vt(e)})),Su=j((()=>{Ol(),jl(),ql(),ji=e=>{if(!e||e.length<1)throw new Error(\"Too few inputs\");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error(\"Input type must be float or float16.\");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error(\"The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].\")}},qi=(e,t,n)=>{let r=\"\";for(let a=t-1;a>=0;--a)r+=`\\n            k = i32(${e.indicesGet(\"indices\",a)}) - ${Dt(\"uniforms.pads\",a,n)};\\n            if (k < 0) {\\n              break;\\n            }\\n            if (k >= i32(${Dt(\"uniforms.x_shape\",a,t)})) {\\n              break;\\n            }\\n            offset += k * i32(${Dt(\"uniforms.x_strides\",a,t)});\\n        `;return`\\n          value = ${e.type.value}(uniforms.constant_value);\\n          for (var i = 0; i < 1; i++) {\\n            var offset = 0;\\n            var k = 0;\\n            ${r}\\n            value = x[offset];\\n          }\\n      `},Gi=(e,t,n)=>{let r=\"\";for(let a=t-1;a>=0;--a)r+=`\\n                k = i32(${e.indicesGet(\"indices\",a)}) - ${Dt(\"uniforms.pads\",a,n)};\\n                if (k < 0) {\\n                  k = -k;\\n                }\\n                {\\n                  let _2n_1 = 2 * (i32(${Dt(\"uniforms.x_shape\",a,t)}) - 1);\\n                  k = k % _2n_1;\\n                  if(k >= i32(${Dt(\"uniforms.x_shape\",a,t)})) {\\n                    k = _2n_1 - k;\\n                  }\\n                }\\n                offset += k * i32(${Dt(\"uniforms.x_strides\",a,t)});\\n            `;return`\\n              var offset = 0;\\n              var k = 0;\\n              ${r}\\n              value = x[offset];\\n          `},Ui=(e,t,n)=>{let r=\"\";for(let a=t-1;a>=0;--a)r+=`\\n                k = i32(${e.indicesGet(\"indices\",a)}) - ${Dt(\"uniforms.pads\",a,n)};\\n                if (k < 0) {\\n                  k = 0;\\n                }\\n                if (k >= i32(${Dt(\"uniforms.x_shape\",a,t)})) {\\n                  k = i32(${Dt(\"uniforms.x_shape\",a,t)}) - 1;\\n                }\\n                offset += k * i32(${Dt(\"uniforms.x_strides\",a,t)});\\n            `;return`\\n              var offset = 0;\\n              var k = 0;\\n              ${r}\\n              value = x[offset];\\n          `},Wi=(e,t,n)=>{let r=\"\";for(let a=t-1;a>=0;--a)r+=`\\n                k = i32(${e.indicesGet(\"indices\",a)}) - ${Dt(\"uniforms.pads\",a,n)};\\n                if (k < 0)  {\\n                  k += i32(${Dt(\"uniforms.x_shape\",a,t)}]);\\n                }\\n                if (k >= i32(${Dt(\"uniforms.x_shape\",a,t)})) {\\n                  k -= i32(${Dt(\"uniforms.x_shape\",a,t)});\\n                }\\n                offset += k * i32(${Dt(\"uniforms.x_strides\",a,t)});\\n            `;return`\\n              var offset = 0;\\n              var k = 0;\\n              ${r}\\n              value = x[offset];\\n          `},Hi=(e,t,n)=>{switch(n.mode){case 0:return qi(e,t,n.pads.length);case 1:return Gi(e,t,n.pads.length);case 2:return Ui(e,t,n.pads.length);case 3:return Wi(e,t,n.pads.length);default:throw new Error(\"Invalid mode\")}},Xi=(e,t)=>{const n=Tt.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,a=[{type:12,data:Tt.size(n)},{type:6,data:t.pads}],s=e.length>=3&&e[2].data;0===t.mode&&a.push({type:s?e[2].dataType:1,data:t.value}),a.push(...It(e[0].dims,n));return{name:\"Pad\",shaderCache:{hint:`${t.mode}${s}`,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Tt.size(n)/64)},programUniforms:a}),getShaderSource:a=>{const i=Vt(\"output\",e[0].dataType,n.length),o=Nt(\"x\",e[0].dataType,r.length),l=o.type.value,u=Hi(i,r.length,t),d=[{name:\"output_size\",type:\"u32\"},{name:\"pads\",type:\"i32\",length:t.pads.length}];return 0===t.mode&&d.push({name:\"constant_value\",type:s?l:\"f32\"}),`\\n            ${a.registerUniforms(d).declareVariables(o,i)}\\n            ${a.mainStart()}\\n            ${a.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n\\n            let indices = ${i.offsetToIndices(\"global_idx\")};\\n\\n            var value = ${l}(0);\\n            ${u}\\n            output[global_idx] = value;\\n        }`}}},Ki=(e,t)=>{if(e.length>1){const n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?10===e[2].dataType?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,a=e[0].dims.length,s=new Int32Array(2*a).fill(0);if(e.length>=4){const t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)s[Number(t[e])]=Number(n[e]),s[Number(t[e])+a]=Number(n[e+t.length])}else n.forEach(((e,t)=>s[Number(t)]=Number(e)));const i=[];return s.forEach((e=>i.push(e))),{mode:t.mode,value:r,pads:i}}return t},Qi=(e,t)=>{ji(e.inputs);const n=Ki(e.inputs,t);e.compute(Xi(e.inputs,n),{inputs:[0]})}})),Pu=j((()=>{pe(),Ol(),jl(),ql(),Yi=e=>{if(p.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error(\"Pool ops requires 1 input.\")},Zi=(e,t,n)=>{const r=\"NHWC\"===t.format,a=e.dims.slice();r&&a.splice(1,0,a.pop());const s=Object.hasOwnProperty.call(t,\"dilations\"),i=t.kernelShape.slice(),o=t.strides.slice(),l=s?t.dilations.slice():[],u=t.pads.slice();kt.adjustPoolAttributes(n,a,i,o,l,u);const d=kt.computePoolOutputShape(n,a,o,l,i,u,t.autoPad),c=Object.assign({},t);s?Object.assign(c,{kernelShape:i,strides:o,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:i,strides:o,pads:u,cacheKey:t.cacheKey});const p=d.slice();return p.push(p.splice(1,1)[0]),[c,r?p:d]},Ji=(e,t)=>{const n=\"NHWC\"===t.format,r=[{type:12,data:Tt.size(e)},{type:12,data:Tt.size(t.kernelShape)}],a=[{name:\"outputSize\",type:\"u32\"},{name:\"kernelSize\",type:\"u32\"}];if(t.kernelShape.length<=2){const e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],s=t.pads[t.pads.length/2-1],i=t.pads[t.pads.length-1],o=!!(s+i);r.push({type:12,data:e},{type:12,data:n},{type:12,data:s},{type:12,data:i}),a.push({name:\"kw\",type:\"u32\"},{name:\"sw\",type:\"u32\"},{name:\"pwStart\",type:\"u32\"},{name:\"pwEnd\",type:\"u32\"});let l=!1;if(2===t.kernelShape.length){const e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],s=t.pads[t.pads.length/2-2],i=t.pads[t.pads.length-2];l=!!(s+i),r.push({type:12,data:e},{type:12,data:n},{type:12,data:s},{type:12,data:i}),a.push({name:\"kh\",type:\"u32\"},{name:\"sh\",type:\"u32\"},{name:\"phStart\",type:\"u32\"},{name:\"phEnd\",type:\"u32\"})}return[r,a,!0,o,l]}{if(n)throw new Error(\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\");const e=Tt.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:\"kernelStrides\",type:\"u32\",length:e.length},{name:\"pads\",type:\"u32\",length:t.pads.length},{name:\"strides\",type:\"u32\",length:t.strides.length}),[r,a,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},eo=(e,t,n,r,a,s,i,o,l,u,d,c)=>{const p=\"NHWC\"===a.format,h=t.type.value,m=Vt(\"output\",t.type.tensor,r);if(a.kernelShape.length<=2){let r=\"\",u=\"\",f=\"\",g=n-(p?2:1);if(r=d?`\\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\\n                  if (xIndices[${g}] < 0 || xIndices[${g}]\\n                      >= uniforms.x_shape[${g}]) {\\n                    pad++;\\n                    continue;\\n                  }\\n                  let x_val = x[${t.indicesToOffset(\"xIndices\")}];\\n                  ${s}\\n                }`:`\\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\\n                  let x_val = x[${t.indicesToOffset(\"xIndices\")}];\\n                  ${s}\\n                }`,2===a.kernelShape.length){const e=n-(p?3:2);u=c?`\\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\\n                    pad += i32(uniforms.kw);\\n                    continue;\\n                  }\\n              `:`\\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\\n                `,f=\"\\n              }\\n            \"}return`\\n            ${e.registerUniforms(l).declareVariables(t,m)}\\n\\n            ${e.mainStart()}\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n\\n              let indices = ${m.offsetToIndices(\"global_idx\")};\\n              var xIndices = ${m.offsetToIndices(\"global_idx\")};\\n\\n              var value = ${h}(${o});\\n              var pad = 0;\\n              ${u}\\n              ${r}\\n              ${f}\\n              ${i}\\n\\n              output[global_idx] = value;\\n            }`}{if(p)throw new Error(\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\");let r=a.kernelShape.length,d=a.pads.length,c=\"\";return c=u?`\\n                if (xIndices[j] >= uniforms.x_shape[j]) {\\n                  pad++;\\n                  isPad = true;\\n                  break;\\n                }\\n              }\\n              if (!isPad) {\\n                let x_val = x[${t.indicesToOffset(\"xIndices\")}];\\n                ${s}\\n              }`:`\\n              }\\n              let x_val = x[${t.indicesToOffset(\"xIndices\")}];\\n              ${s}\\n            `,`\\n            ${e.registerUniforms(l).declareVariables(t,m)}\\n\\n            ${e.mainStart()}\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n              let indices = ${m.offsetToIndices(\"global_idx\")};\\n              var xIndices = ${m.offsetToIndices(\"global_idx\")};\\n\\n              var offsets: array<u32, ${r}>;\\n\\n              var value = ${h}(${o});\\n              var pad = 0;\\n              var isPad = false;\\n\\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\\n                var offset = i;\\n                for (var j = 0u; j < ${r-1}u; j++) {\\n                  offsets[j] = offset / ${Dt(\"uniforms.kernelStrides\",\"j\",r)};\\n                  offset -= offsets[j] * ${Dt(\"uniforms.kernelStrides\",\"j\",r)};\\n                }\\n                offsets[${r-1}] = offset;\\n\\n                isPad = false;\\n                for (var j = ${n-r}u; j < ${n}u; j++) {\\n                  xIndices[j] = indices[j] * ${Dt(\"uniforms.strides\",`j - ${n-r}u`,r)}\\n                    + offsets[j - ${n-r}u] - ${Dt(\"uniforms.pads\",\"j - 2u\",d)};\\n                  ${c}\\n              }\\n              ${i}\\n\\n              output[global_idx] = value;\\n            }`}},to=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,no=e=>`${to(e)};${e.countIncludePad}`,ro=e=>`${to(e)};${e.storageOrder};${e.dilations}`,ao=e=>({format:e.format,autoPad:[\"NOTSET\",\"VALID\",\"SAME_UPPER\",\"SAME_LOWER\"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),so=(e,t,n,r)=>{let[a,s]=Zi(t,r,n),i=Nt(\"x\",t.dataType,t.dims.length),o=i.type.value,l=\"\";a.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;const[u,d,c,p,h]=Ji(s,a);u.push(...It(t.dims,s));return{name:e,shaderCache:{hint:`${r.cacheKey};${c};${p};${h}`,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Tt.size(s)/64)},programUniforms:u}),getShaderSource:e=>eo(e,i,t.dims.length,s.length,a,\"value += x_val;\",l,0,d,c,p,h)}},io=e=>{const t=0!==e.count_include_pad,n=ao(e);if(0!==n.ceilMode)throw new Error(\"using ceil() in shape computation is not yet supported for AveragePool\");const r={countIncludePad:t,...n,cacheKey:\"\"};return{...r,cacheKey:no(r)}},oo=(e,t)=>{Yi(e.inputs),e.compute(so(\"AveragePool\",e.inputs[0],!1,t))},lo={autoPad:\"\",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},uo=e=>{const t=e.format;return{format:t,...lo,cacheKey:t}},co=(e,t)=>{Yi(e.inputs),e.compute(so(\"GlobalAveragePool\",e.inputs[0],!0,t))},po=(e,t,n,r)=>{const[a,s]=Zi(t,r,n),i=Nt(\"x\",t.dataType,t.dims.length),[o,l,u,d,c]=Ji(s,a);return o.push(...It(t.dims,s)),{name:e,shaderCache:{hint:`${r.cacheKey};${u};${d};${c}`,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Tt.size(s)/64)},programUniforms:o}),getShaderSource:e=>eo(e,i,t.dims.length,s.length,a,\"\\n      value = max(x_val, value);\\n    \",\"\",10===t.dataType?-65504:-1e5,l,u,d,c)}},ho=(e,t)=>{Yi(e.inputs),e.compute(po(\"MaxPool\",e.inputs[0],!1,t))},mo=e=>{const t=e.storage_order,n=e.dilations,r=ao(e);if(0!==t)throw new Error(\"column major storage order is not yet supported for MaxPool\");if(0!==r.ceilMode)throw new Error(\"using ceil() in shape computation is not yet supported for MaxPool\");const a={storageOrder:t,dilations:n,...r,cacheKey:\"\"};return{...a,cacheKey:ro(a)}},fo=e=>{const t=e.format;return{format:t,...lo,cacheKey:t}},go=(e,t)=>{Yi(e.inputs),e.compute(po(\"GlobalMaxPool\",e.inputs[0],!0,t))}})),Eu=j((()=>{Ol(),jl(),Vl(),ql(),_o=(e,t)=>{if(e.length<2||e.length>3)throw new Error(\"DequantizeLinear requires 2 or 3 inputs.\");if(3===e.length&&e[1].dims===e[2].dims)throw new Error(\"x-scale and x-zero-point must have the same shape.\");if(3===e.length&&e[0].dataType!==e[2].dataType)throw new Error(\"x and x-zero-point must have the same data type.\");if(6===e[0].dataType&&e.length>2)throw new Error(\"In the case of dequantizing int32 there is no zero point.\");if(0!==e[1].dims.length&&1!==e[1].dims.length&&e[1].dims.length!==e[0].dims.length)throw new Error(\"scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.\");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error(\"x and x-zero-point must have the same data type.\");if(e[1].dims.length!==e[2].dims.length)throw new Error(\"scale and zero-point inputs must have the same rank.\");if(!e[1].dims.map(((t,n)=>t===e[2].dims[n])).reduce(((e,t)=>e&&t),!0))throw new Error(\"scale and zero-point inputs must have the same shape.\")}if(t.blockSize>0){if(0===e[1].dims.length||1===e[1].dims.length&&1===e[1].dims[0])throw new Error(\"blockSize must be set only for block quantization.\");if(!e[1].dims.map(((n,r)=>r===t.axis||n===e[0].dims[r])).reduce(((e,t)=>e&&t),!0))throw new Error(\"For block qunatization, scale input shape to match the input shape except for the axis\");if(e[1].dims.length!==e[0].dims.length)throw new Error(\"For block qunatization the scale input rank must be the same as the x rank.\");const n=e[0].dims[t.axis],r=e[1].dims[t.axis];if(t.blockSize<Math.ceil(n/r)||t.blockSize>Math.ceil(n/(r-1)-1))throw new Error(\"blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].\")}},wo=(e,t)=>{const n=Tt.normalizeAxis(t.axis,e[0].dims.length),r=e[0].dataType,a=3===r,s=e[0].dims,i=e[1].dataType,o=Tt.size(s),l=3===r||2===r,u=l?[Math.ceil(Tt.size(e[0].dims)/4)]:e[0].dims,d=e[1].dims,c=e.length>2?e[2]:void 0,p=c?l?[Math.ceil(Tt.size(c.dims)/4)]:c.dims:void 0,h=0===d.length||1===d.length&&1===d[0],m=!1===h&&1===d.length,f=zt(o),g=h&&(!l||4===f),_=g?f:1,w=g&&!l?f:1,y=Nt(\"input\",l?12:r,u.length,w),b=Nt(\"scale\",i,d.length),v=c?Nt(\"zero_point\",l?12:r,p.length):void 0,x=Vt(\"output\",i,s.length,_),M=[y,b];v&&M.push(v);const T=[u,d];c&&T.push(p);const k=[{type:12,data:o/_},{type:12,data:n},{type:12,data:t.blockSize},...It(...T,s)];return{name:\"DequantizeLinear\",shaderCache:{hint:t.cacheKey,inputDependencies:v?[\"rank\",\"rank\",\"rank\"]:[\"rank\",\"rank\"]},getShaderSource:e=>`\\n      ${e.registerUniforms([{name:\"output_size\",type:\"u32\"},{name:\"axis\",type:\"u32\"},{name:\"block_size\",type:\"u32\"}]).declareVariables(...M,x)}\\n      ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n          let output_indices = ${x.offsetToIndices(\"global_idx\")};\\n\\n          // Set input x\\n          ${l?`\\n            let input = ${y.getByOffset(\"global_idx / 4\")};\\n            let x_vec = ${a?\"unpack4xI8(input)\":\"unpack4xU8(input)\"};\\n            let x_value = ${1===_?\"x_vec[global_idx % 4]\":\"x_vec\"};`:`let x_value = ${y.getByOffset(\"global_idx\")};`};\\n\\n          // Set scale input\\n          ${h?`let scale_value= ${b.getByOffset(\"0\")}`:m?`\\n            let scale_index = ${x.indicesGet(\"output_indices\",\"uniforms.axis\")};\\n            let scale_value= ${b.getByOffset(\"scale_index\")};`:`\\n            var scale_indices: ${b.type.indices} = output_indices;\\n            let index = ${b.indicesGet(\"scale_indices\",\"uniforms.axis\")} / uniforms.block_size;\\n            ${b.indicesSet(\"scale_indices\",\"uniforms.axis\",\"index\")};\\n            let scale_value= ${b.getByIndices(\"scale_indices\")};`};\\n\\n          // Set zero-point input\\n          ${v?h?l?`\\n                let zero_point_input = ${v.getByOffset(\"0\")};\\n                let zero_point_vec =  ${a?\"unpack4xI8(zero_point_input)\":\"unpack4xU8(zero_point_input)\"};\\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset(\"0\")}`:m?l?`\\n                let zero_point_index = ${x.indicesGet(\"output_indices\",\"uniforms.axis\")};\\n                let zero_point_input = ${v.getByOffset(\"zero_point_index / 4\")};\\n                let zero_point_vec =  ${a?\"unpack4xI8(zero_point_input)\":\"unpack4xU8(zero_point_input)\"};\\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\\n                let zero_point_index = ${x.indicesGet(\"output_indices\",\"uniforms.axis\")};\\n                let zero_point_value = ${v.getByOffset(\"zero_point_index\")};`:l?`\\n                let zero_point_offset = ${b.indicesToOffset(\"scale_indices\")};\\n                let zero_point_input = ${v.getByOffset(\"zero_point_offset / 4\")};\\n                let zero_point_vec = ${a?\"unpack4xI8(zero_point_input)\":\"unpack4xU8(zero_point_input)\"};\\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices(\"scale_indices\")};`:`let zero_point_value = ${l?a?\"i32\":\"u32\":y.type.value}(0);`};\\n      // Compute and write output\\n      ${x.setByOffset(\"global_idx\",`${x.type.value}(x_value - zero_point_value) * scale_value`)};\\n      }`,getRunData:()=>({outputs:[{dims:s,dataType:i}],dispatchGroup:{x:Math.ceil(o/_/64),y:1,z:1},programUniforms:k})}},yo=(e,t)=>{_o(e.inputs,t),e.compute(wo(e.inputs,t))},bo=e=>vt({axis:e.axis,blockSize:e.blockSize})})),Fu=j((()=>{pe(),Ol(),ql(),vo=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error(\"Range these inputs' contents are invalid.\")},xo=(e,t,n,r)=>{const a=Math.abs(Math.ceil((t-e)/n)),s=[a],i=a,o=[{type:12,data:i},{type:r,data:e},{type:r,data:n},...It(s)];return{name:\"Range\",shaderCache:{hint:`${r}`},getShaderSource:e=>{const t=Vt(\"output\",r,s.length),n=t.type.value,a=[{name:\"outputSize\",type:\"u32\"},{name:\"start\",type:n},{name:\"delta\",type:n}];return`\\n        ${e.registerUniforms(a).declareVariables(t)}\\n        ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\\n      }`},getRunData:()=>({outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:o})}},Mo=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),p.webgpu.validateInputContent&&vo(t,n,r),e.compute(xo(t,n,r,e.inputs[0].dataType),{inputs:[]})}})),Au=j((()=>{Ol(),jl(),Vl(),ql(),To=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error(\"Resize requires scales input values to be positive\")}))),e.length>0)if(\"linear\"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error(\"For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1\")}else if(\"cubic\"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error(\"Resize requires scales input size to be 2 or 4 for cubic mode\")},ko=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error(\"Resize requires axes input values to be positive and less than rank\")})));const r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r},$o=(e,t,n,r,a,s)=>{const[i,o,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach((e=>s.push(e)));else if(\"tf_crop_and_resize\"===t.coordinateTransformMode)throw new Error(\"Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize\");if(o>0&&e.length>o&&1===e[o].dims.length&&e[o].dims[0]>0){if(e[o].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error(\"Resize requires scales input size to be same as input rank or axes size for opset 18 and up\");To(r,t),t.axes.length>0&&ko(r,t.axes,u).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&1===e[l].dims.length&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach((e=>a.push(Number(e)))),0!==a.length&&a.length!==u&&n>=18&&a.length!==t.axes.length))throw new Error(\"Resize requires sizes input size to be same as input rank or axes size for opset 18 and up\");if(t.axes.length>0){if(0!==r.length&&r.length!==t.axes.length)throw new Error('Resize requires \"scales\" input size to be of axes rank when axes attributes is specified');if(0!==a.length&&a.length!==t.axes.length)throw new Error('Resize requires \"sizes\" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<\"u\"&&typeof a<\"u\"&&r.length>0&&a.length>u)throw new Error(\"Resize requires only of scales or sizes to be specified\")},Co=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case\"asymmetric\":return`return ${t}(xResized) / ${t}(xScale);`;case\"pytorch_half_pixel\":return`if (lengthResized > 1) {\\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\\n                  } else {\\n                    return 0.0;\\n                  }`;case\"tf_half_pixel_for_nn\":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case\"align_corners\":return`if (lengthResized == 1) {\\n                    return 0.0;\\n                  } else {\\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\\n                    // offset-by-one error later in floor().\\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\\n                    let fract =\\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\\n                    return whole + fract;\\n                  }`;case\"tf_crop_and_resize\":return`if (lengthResized > 1) {\\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\\n                        ${t}(lengthResized - 1);\\n                  } else {\\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\\n                  }`;case\"half_pixel_symmetric\":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\\n                  const adjustment = ${t}(lengthResized) / outputWidth;\\n                  const center = ${t}(lengthOriginal) / 2;\\n                  const offset = center * (1 - adjustment);\\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case\"half_pixel\":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+\"}\",So=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case\"round_prefer_ceil\":return\"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }\";case\"floor\":return\"return floor(xOriginal);\";case\"ceil\":return\"return ceil(xOriginal);\";case\"round_prefer_floor\":return\"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }\";default:if(t<11)return\"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }\";throw new Error(`Nearest mode ${e} is not supported`)}})()+\"}\",Po=(e,t,n)=>{const r=new Array(n).fill(0).concat(new Array(n).fill(1)),a=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,s)=>{r[e]=a[s],r[s+n]=a[t.length+s]})),r):a},Eo=(e,t,n,r)=>{let a=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>a.push(e))),Math.max(...r)>e.length)throw new Error(\"axes is out of bound\");r.forEach(((e,t)=>a[e]=n[t]))}else n.forEach((e=>a.push(e)));else{if(0===t.length)throw new Error(\"Resize requires either scales or sizes.\");a=e.map(((e,n)=>Math.round(e*t[n])))}return a},Fo=(e,t,n)=>{const r=(()=>{switch(n.keepAspectRatioPolicy){case\"not_larger\":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case\"not_smaller\":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);const a=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=r)),n.axes.forEach((n=>a[n]=Math.round(e[n]*t[n])))):(t.fill(r,0,t.length),a.forEach(((e,n)=>a[n]=Math.round(e*t[n])))),a},Ao=(e,t,n,r,a)=>`\\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\\n      var original_indices: array<${e.type.value}, ${n.length}>;\\n      for (var i:u32 = 0; i < ${n.length}; i++) {\\n        var output_index = ${e.indicesGet(\"output_indices\",\"i\")};\\n        var scale = ${Dt(\"uniforms.scales\",\"i\",r)};\\n        var roi_low = ${Dt(\"uniforms.roi\",\"i\",a)};\\n        var roi_hi = ${Dt(\"uniforms.roi\",`i + ${t.length}`,a)};\\n        if (scale == 1.0) {\\n          original_indices[i] = ${e.type.value}(output_index);\\n        } else {\\n          var input_shape_i = ${Dt(\"uniforms.input_shape\",\"i\",t.length)};\\n          var output_shape_i = ${Dt(\"uniforms.output_shape\",\"i\",n.length)};\\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\\n                                                                           input_shape_i, roi_low, roi_hi);\\n        }\\n      }\\n      return original_indices;\\n    }`,Io=(e,t,n,r,a,s,i)=>`\\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\\n      var input_indices: ${e.type.indices};\\n      for (var i:u32 = 0; i < ${r.length}; i++) {\\n        var output_index = ${t.indicesGet(\"output_indices\",\"i\")};\\n        var input_index: u32;\\n        var scale = ${Dt(\"uniforms.scales\",\"i\",a)};\\n        if (scale == 1.0) {\\n          input_index = output_index;\\n        } else {\\n          var roi_low = ${Dt(\"uniforms.roi\",\"i\",s)};\\n          var roi_hi = ${Dt(\"uniforms.roi\",`i + ${n.length}`,s)};\\n          var input_shape_i = ${Dt(\"uniforms.input_shape\",\"i\",n.length)};\\n          var output_shape_i = ${Dt(\"uniforms.output_shape\",\"i\",r.length)};\\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\\n                                                                        input_shape_i, roi_low, roi_hi);\\n          if (!${i} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\\n            if (original_idx < 0) {\\n              input_index = 0;\\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\\n              input_index = input_shape_i - 1;\\n            } else {\\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\\n            }\\n          } else {\\n            input_index = u32(original_idx);\\n          }\\n        }\\n        ${e.indicesSet(\"input_indices\",\"i\",\" input_index\")}\\n      }\\n      return input_indices;\\n    }`,zo=(e,t)=>`\\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\\n      for (var i:u32 = 0; i < ${t.length}; i++) {\\n        var input_index = ${e.indicesGet(\"input_indices\",\"i\")};\\n        if (input_index < 0 || input_index >= ${Dt(\"uniforms.input_shape\",\"i\",t.length)}) {\\n          return false;\\n        }\\n      }\\n      return true;\\n    }`,Oo=(e,t,n,r)=>e.rank>r?`\\n    ${e.indicesSet(\"input_indices\",t,\"channel\")};\\n    ${e.indicesSet(\"input_indices\",n,\"batch\")};\\n`:\"\",Bo=(e,t,n,r,a)=>{const[s,i,o,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`\\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {\\n      var input_indices: ${e.type.indices};\\n      ${e.indicesSet(\"input_indices\",i,`max(0, min(row, ${n[i]} - 1))`)};\\n      ${e.indicesSet(\"input_indices\",o,`max(0, min(col, ${n[o]} - 1))`)};\\n      ${Oo(e,l,s,2)}\\n      return ${e.getByIndices(\"input_indices\")};\\n    }\\n\\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\\n      var row:${u} = originalIndices[${i}];\\n      var col:${u} = originalIndices[${o}];\\n      ${r?`if (row < 0 || row > (${n[i]} - 1) || col < 0 || col > (${n[o]} - 1)) {\\n        return ${a};\\n      }`:\"\"};\\n      row = max(0, min(row, ${n[i]} - 1));\\n      col = max(0, min(col, ${n[o]} - 1));\\n      var row1: u32 = u32(row);\\n      var col1: u32 = u32(col);\\n      var row2: u32 = u32(row + 1);\\n      var col2: u32 = u32(col + 1);\\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:\"0\"};\\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${s}])`:\"0\"};\\n      var x11: ${u} = getInputValue(batch, channel, row1, col1);\\n      var x12: ${u} = getInputValue(batch, channel, row1, col2);\\n      var x21: ${u} = getInputValue(batch, channel, row2, col1);\\n      var x22: ${u} = getInputValue(batch, channel, row2, col2);\\n      var dx1: ${u} = abs(row - ${u}(row1));\\n      var dx2: ${u} = abs(${u}(row2) - row);\\n      var dy1: ${u} = abs(col - ${u}(col1));\\n      var dy2: ${u} = abs(${u}(col2) - col);\\n      if (row1 == row2) {\\n        dx1 = 0.5;\\n        dx2 = 0.5;\\n      }\\n      if (col1 == col2) {\\n        dy1 = 0.5;\\n        dy2 = 0.5;\\n      }\\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\\n    }`},Lo=(e,t,n,r,a,s,i,o,l,u)=>{const d=2===n.length,[c,p]=d?[0,1]:[2,3],h=e.type.value,m=i=>{const d=i===c?\"row\":\"col\";return`\\n      fn ${d}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${h} {\\n        var output_index = ${t.indicesGet(\"output_indices\",i)};\\n        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[i]},\\n        ${r[i]}, ${n[i]}, ${s[i]}, ${s[i]} + ${n.length});\\n        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);\\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\\n\\n        if (${o} && (originalIdx < 0 || originalIdx > (${n[i]} - 1))) {\\n          return ${l};\\n        }\\n        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\\n        for (var i: i32 = -1; i < 3; i++) {\\n          var ${d}: ${h} = originalIdx + ${h}(i);\\n          if (${d} < 0 || ${d} >= ${n[i]}) {\\n            ${u?\"coefs[i + 1] = 0.0;\\n                        continue;\":o?`return ${l};`:`${d} = max(0, min(${d}, ${n[i]} - 1));`};\\n          }\\n        var input_indices_copy: ${e.type.indices} = input_indices;\\n          ${e.indicesSet(\"input_indices_copy\",i,`u32(${d})`)};\\n          data[i + 1] = ${i===c?e.getByIndices(\"input_indices_copy\"):\"rowCubicInterpolation(input_indices_copy, output_indices)\"};\\n        }\\n        return cubicInterpolation1D(data, coefs);\\n      }`};return`\\n    ${m(c)};\\n    ${m(p)};\\n  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {\\n    var absS = abs(s);\\n    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\\n    var oneMinusAbsS: ${h} = 1.0 - absS;\\n    var twoMinusAbsS: ${h} = 2.0 - absS;\\n    var onePlusAbsS: ${h} = 1.0 + absS;\\n    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};\\n    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;\\n    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\\n    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};\\n    return coeffs;\\n  }\\n\\n  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {\\n    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\\n  }\\n\\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${h} {\\n    var input_indices: ${e.type.indices} = output_indices;\\n    return colCubicInterpolation(input_indices, output_indices);\\n  }\\n    `},Do=(e,t,n,r,a)=>{const[s,i,o,l,u]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],d=e.type.value;return`\\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {\\n      var input_indices: ${e.type.indices};\\n      ${e.indicesSet(\"input_indices\",i,`max(0, min(depth, ${n[i]} - 1))`)};\\n      ${e.indicesSet(\"input_indices\",o,`max(0, min(height, ${n[o]} - 1))`)};\\n      ${e.indicesSet(\"input_indices\",l,`max(0, min(width, ${n[l]} - 1))`)};\\n      ${Oo(e,u,s,3)}\\n      return ${e.getByIndices(\"input_indices\")};\\n    }\\n\\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\\n      var depth:${d} = originalIndices[${i}];\\n      var height:${d} = originalIndices[${o}];\\n      var width:${d} = originalIndices[${l}];\\n      ${r?`if (depth < 0 || depth > (${n[i]} - 1) || height < 0 || height > (${n[o]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\\n      return ${a};\\n        }`:\"\"};\\n\\n    depth = max(0, min(depth, ${n[i]} - 1));\\n      height = max(0, min(height, ${n[o]} - 1));\\n      width = max(0, min(width, ${n[l]} - 1));\\n      var depth1: u32 = u32(depth);\\n      var height1: u32 = u32(height);\\n      var width1: u32 = u32(width);\\n      var depth2: u32 = u32(depth + 1);\\n      var height2: u32 = u32(height + 1);\\n      var width2: u32 = u32(width + 1);\\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${u}])`:\"0\"};\\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${s}])`:\"0\"};\\n\\n      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);\\n      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);\\n      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);\\n      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);\\n      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);\\n      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);\\n      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);\\n      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);\\n      var dx1: ${d} = abs(depth - ${d}(depth1));\\n      var dx2: ${d} = abs(${d}(depth2) - depth);\\n      var dy1: ${d} = abs(height - ${d}(height1));\\n      var dy2: ${d} = abs(${d}(height2) - height);\\n      var dz1: ${d} = abs(width - ${d}(width1));\\n      var dz2: ${d} = abs(${d}(width2) - width);\\n      if (depth1 == depth2) {\\n        dx1 = 0.5;\\n        dx2 = 0.5;\\n      }\\n      if (height1 == height2) {\\n        dy1 = 0.5;\\n        dy2 = 0.5;\\n      }\\n      if (width1 == width2) {\\n        dz1 = 0.5;\\n        dz2 = 0.5;\\n      }\\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\\n    }`},Ro=(e,t,n,r,a,s)=>{let i=e.dims,o=Po(s,t.axes,i.length),l=Eo(i,r,a,t.axes),u=r.slice();0===r.length&&(u=i.map(((e,t)=>0===e?1:l[t]/e)),\"stretch\"!==t.keepAspectRatioPolicy&&(l=Fo(i,u,t)));const d=Vt(\"output\",e.dataType,l.length),c=Nt(\"input\",e.dataType,i.length),p=Tt.size(l),h=i.length===l.length&&i.every(((e,t)=>e===l[t])),m=\"tf_crop_and_resize\"===t.coordinateTransformMode,f=t.extrapolationValue,g=c.type.value;return{name:\"Resize\",shaderCache:{hint:`${t.cacheKey}|${n}|${u.length>0?u:\"\"}|${a.length>0?a:\"\"}|${o.length>0?o:\"\"}|${h}|${i}`,inputDependencies:[\"rank\"]},getShaderSource:e=>`\\n      ${h?\"\":`\\n      ${Co(t.coordinateTransformMode,g)};\\n      ${(()=>{switch(t.mode){case\"nearest\":return`\\n              ${zo(c,i)};\\n              ${So(t.nearestMode,n,g)};\\n              ${Io(c,d,i,l,u.length,o.length,m)};\\n              `;case\"linear\":return`\\n              ${Ao(d,i,l,u.length,o.length)};\\n              ${(()=>{if(2===i.length||4===i.length)return`${Bo(c,d,i,m,f)}`;if(3===i.length||5===i.length)return`${Do(c,d,i,m,f)}`;throw Error(\"Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.\")})()};\\n            `;case\"cubic\":return`\\n            ${(()=>{if(2===i.length||4===i.length)return`${Lo(c,d,i,l,u,o,t.cubicCoeffA,m,t.extrapolationValue,t.excludeOutside)}`;throw Error(\"Cubic mode only supports input dims 2 and 4 are supported in linear mode.\")})()};\\n            `;default:throw Error(\"Invalid resize mode\")}})()};\\n      `}\\n      ${e.registerUniform(\"output_size\",\"u32\").registerUniform(\"scales\",\"f32\",u.length).registerUniform(\"roi\",\"f32\",o.length).declareVariables(c,d)}\\n      ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n        ${h?\"output[global_idx] = input[global_idx];\":`\\n        let output_indices = ${d.offsetToIndices(\"global_idx\")};\\n        var input_indices: ${c.type.indices};\\n        ${(()=>{switch(t.mode){case\"nearest\":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\\n                if (checkInputIndices(input_indices)) {\\n                  output[global_idx] = ${c.getByIndices(\"input_indices\")};\\n                } else {\\n                  output[global_idx] = ${t.extrapolationValue};\\n                }`;case\"linear\":return`output[global_idx] = ${2===i.length||4===i.length?\"bilinearInterpolation\":\"trilinearInterpolation\"}(output_indices);`;case\"cubic\":return\"output[global_idx] = bicubicInterpolation(output_indices);\";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\\n`}\\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:u},{type:1,data:o},...It(i,l)]})}},No=e=>{const t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Vo=(e,t)=>{const n=[],r=[],a=[],s=No(e);if(0!==t.antialias)throw Error(\"Only default value (0) for Antialias attribute is supported\");$o(e.inputs,t,s,n,r,a),e.compute(Ro(e.inputs[0],t,s,n,r,a),{inputs:[0]})},jo=e=>{const t=e.antialias,n=e.axes,r=e.coordinateTransformMode,a=e.cubicCoeffA,s=0!==e.excludeOutside,i=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,u=\"\"===e.nearestMode?\"simple\":e.nearestMode;return vt({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:a,excludeOutside:s,extrapolationValue:i,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}})),Iu=j((()=>{Ol(),jl(),Vl(),ql(),qo=(e,t)=>{const[n,r,a,s]=e,{numHeads:i,rotaryEmbeddingDim:o}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!Tt.areEqual(r.dims,[])&&!Tt.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==a.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(2!==s.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(!Tt.areEqual(a.dims,s.dims))throw new Error(\"Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape\");if(o>0&&0===i)throw new Error(\"num_heads must be provided if rotary_embedding_dim is specified\");const l=n.dims[0],u=n.dims[n.dims.length-2],d=a.dims[0],c=Tt.sizeFromDimension(n.dims,1)/u,p=0===o?2*a.dims[1]:c/i;if(o>p)throw new Error(\"rotary_embedding_dim must be less than or equal to head_size\");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(u!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==a.dims[1]&&o/2!==a.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(u>d)throw new Error(\"Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported\")},Go=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:a,scale:s}=t,i=e[0].dims[0],o=Tt.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],u=o/l,d=e[2].dims[1],c=0===a?2*d:u/r,p=new Array(i,l,u/c,c-d),h=Tt.computeStrides(p),m=[{type:1,data:s},{type:12,data:p},{type:12,data:h},...3===e[0].dims.length?new Array({type:12,data:[o,u,c,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[o,c,l*c,1]}):[],...It(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:\"RotaryEmbedding\",shaderCache:{hint:vt({interleaved:n}).cacheKey,inputDependencies:[\"rank\",\"rank\",\"rank\",\"rank\"]},getShaderSource:t=>{const r=Nt(\"input\",e[0].dataType,e[0].dims.length),a=Nt(\"position_ids\",e[1].dataType,e[1].dims.length),s=Nt(\"cos_cache\",e[2].dataType,e[2].dims.length),i=Nt(\"sin_cache\",e[3].dataType,e[3].dims.length),o=Vt(\"output\",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:\"scale\",type:\"f32\"},{name:\"global_shape\",type:\"u32\",length:p.length},{name:\"global_strides\",type:\"u32\",length:h.length},{name:\"input_output_strides\",type:\"u32\",length:h.length}]),`\\n        ${t.declareVariables(r,a,s,i,o)}\\n\\n        ${t.mainStart(Pt)}\\n          let half_rotary_emb_dim = uniforms.${s.name}_shape[1];\\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes(\"size\")}\\n\\n          if (bsnh[3] < half_rotary_emb_dim) {\\n            let position_ids_idx =\\n                ${a.broadcastedIndicesToOffset(\"bsnh.xy\",Vt(\"\",a.type.tensor,2))};\\n            let position_id =\\n                u32(${a.getByOffset(\"position_ids_idx\")}) + select(0, bsnh[1], position_ids_idx == 0);\\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\\n            let re = ${r.getByOffset(\"i\")} * ${s.get(\"position_id\",\"bsnh[3]\")} -\\n                ${r.getByOffset(\"j\")} * ${i.get(\"position_id\",\"bsnh[3]\")};\\n            ${o.setByOffset(\"i\",\"re\")}\\n            let im = ${r.getByOffset(\"i\")} * ${i.get(\"position_id\",\"bsnh[3]\")} +\\n                ${r.getByOffset(\"j\")} * ${s.get(\"position_id\",\"bsnh[3]\")};\\n            ${o.setByOffset(\"j\",\"im\")}\\n          } else {\\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\\n            ${o.setByOffset(\"k\",r.getByOffset(\"k\"))}\\n          }\\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Tt.size(p)/Pt)},programUniforms:m})}},Uo=(e,t)=>{qo(e.inputs,t),e.compute(Go(e.inputs,t))}})),zu=j((()=>{Ol(),jl(),ql(),Wo=e=>{if(!e||e.length<3)throw new Error(\"layerNorm requires at least 3 inputs.\");const t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error(\"All inputs must have the same data type\");if(3!==t.dims.length&&2!==t.dims.length)throw new Error(\"Input must be 2D or 3D\");if(3!==n.dims.length&&2!==n.dims.length)throw new Error(\"Skip must be 2D or 3D\");const a=t.dims[t.dims.length-1],s=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==a)throw new Error(\"Skip must have the same hidden size as input\");if(n.dims[n.dims.length-2]!==s)throw new Error(\"Skip must have the same sequence length as input\");if(1!==r.dims.length)throw new Error(\"Gamma must be 1D\");if(r.dims[r.dims.length-1]!==a)throw new Error(\"Gamma must have the same hidden size as input\");if(e.length>3){const t=e[3];if(1!==t.dims.length)throw new Error(\"Beta must be 1D\");if(t.dims[t.dims.length-1]!==a)throw new Error(\"Beta must have the same hidden size as input\")}if(e.length>4){const t=e[4];if(1!==t.dims.length)throw new Error(\"Bias must be 1D\");if(t.dims[t.dims.length-1]!==a)throw new Error(\"Bias must have the same hidden size as input\")}},Ho=(e,t,n,r)=>{const a=t.simplified,s=e[0].dims,i=Tt.size(s),o=s,l=i,u=s.slice(-1)[0],d=r?s.slice(0,-1).concat(1):[],c=!a&&e.length>3,p=e.length>4,h=r&&n>1,m=r&&n>2,f=n>3,g=64,_=zt(u),w=[{type:12,data:l},{type:12,data:_},{type:12,data:u},{type:1,data:t.epsilon}],y=[{dims:o,dataType:e[0].dataType}];return n>1&&y.push({dims:d,dataType:1}),n>2&&y.push({dims:d,dataType:1}),n>3&&y.push({dims:s,dataType:e[0].dataType}),{name:\"SkipLayerNormalization\",shaderCache:{hint:`${_};${h};${m};${f}`,inputDependencies:e.map(((e,t)=>\"type\"))},getShaderSource:t=>{const n=[Nt(\"x\",e[0].dataType,e[0].dims,_),Nt(\"skip\",e[1].dataType,e[1].dims,_),Nt(\"gamma\",e[2].dataType,e[2].dims,_)];c&&n.push(Nt(\"beta\",e[3].dataType,e[3].dims,_)),p&&n.push(Nt(\"bias\",e[4].dataType,e[4].dims,_)),n.push(Vt(\"output\",e[0].dataType,o,_)),h&&n.push(Vt(\"mean_output\",1,d)),m&&n.push(Vt(\"inv_std_output\",1,d)),f&&n.push(Vt(\"input_skip_bias_sum\",e[0].dataType,o,_));const r=Ft(e[0].dataType),s=Ft(1,_);return`\\n\\n      ${t.registerUniforms([{name:\"output_size\",type:\"u32\"},{name:\"components\",type:\"u32\"},{name:\"hidden_size\",type:\"u32\"},{name:\"epsilon\",type:\"f32\"}]).declareVariables(...n)}\\n      var<workgroup> sum_shared : array<${s}, 64>;\\n      var<workgroup> sum_squared_shared : array<${s}, 64>;\\n\\n      ${t.mainStart([g,1,1])}\\n        let ix = local_id.x;\\n        let iy = global_id.x / 64;\\n\\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\\n        var stride = hidden_size_vectorized / 64;\\n        let offset = ix * stride + iy * hidden_size_vectorized;\\n        let offset1d = stride * ix;\\n        if (ix == 63) {\\n          stride = hidden_size_vectorized - stride * ix;\\n        }\\n        for (var i: u32 = 0; i < stride; i++) {\\n          let skip_value = skip[offset + i];\\n          let bias_value = ${p?\"bias[offset1d + i]\":r+\"(0.0)\"};\\n          let input_value = x[offset + i];\\n          let value = input_value + skip_value + bias_value;\\n          ${f?\"input_skip_bias_sum[offset + i] = value;\":\"\"}\\n          output[offset + i] = value;\\n          let f32_value = ${Bt(r,_,\"value\")};\\n          sum_shared[ix] += f32_value;\\n          sum_squared_shared[ix] += f32_value * f32_value;\\n        }\\n        workgroupBarrier();\\n\\n        var reduce_size : u32 = 64;\\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\\n          reduce_size = curr_size + (reduce_size & 1);\\n          if (ix < curr_size) {\\n            sum_shared[ix] += sum_shared[ix + reduce_size];\\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\\n          }\\n          workgroupBarrier();\\n        }\\n\\n        let sum = sum_shared[0];\\n        let square_sum = sum_squared_shared[0];\\n        let mean = ${Lt(\"sum\",_)} / f32(uniforms.hidden_size);\\n        let inv_std_dev = inverseSqrt(${Lt(\"square_sum\",_)} / f32(uniforms.hidden_size) ${a?\"\":\"- mean * mean\"} + uniforms.epsilon);\\n        ${h?\"mean_output[global_idx] = mean;\":\"\"}\\n        ${m?\"inv_std_output[global_idx] = inv_std_dev;\":\"\"}\\n\\n        for (var i: u32 = 0; i < stride; i++) {\\n          output[offset + i] = (output[offset + i] ${a?\"\":`- ${r}(mean)`}) *\\n            ${r}(inv_std_dev) * gamma[offset1d + i]\\n            ${c?\"+ beta[offset1d + i]\":\"\"};\\n        }\\n      }`},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(l/u)},programUniforms:w})}},Xo=(e,t)=>{Wo(e.inputs);const n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(Ho(e.inputs,t,e.outputCount,!1),{outputs:n})}})),Ou=j((()=>{Ol(),jl(),Vl(),ql(),Ko=(e,t)=>{if(!e||e.length<1)throw new Error(\"too few inputs\");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error(\"axes, starts and ends must have the same length\")}else if(t.starts.length!==t.ends.length)throw new Error(\"starts and ends must have the same length\");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},Qo=(e,t)=>{const n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},Yo=(e,t)=>{if(e.length>1){let t=Qo(e,1),n=Qo(e,2),r=Qo(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),vt({starts:t,ends:n,axes:r})}return t},Zo=(e,t,n,r,a)=>{let s=e;return e<0&&(s+=n[r[t]]),a[t]<0?Math.max(0,Math.min(s,n[r[t]]-1)):Math.max(0,Math.min(s,n[r[t]]))},Jo=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\\n          var input_indices: ${e.type.indices};\\n          var carry = 0u;\\n          for (var i = ${n.length}; i >= 0; i--) {\\n            let input_shape_i = ${Dt(\"uniforms.input_shape\",\"i\",n.length)};\\n            let steps_i = ${Dt(\"uniforms.steps\",\"i\",n.length)};\\n            let signs_i = ${Dt(\"uniforms.signs\",\"i\",n.length)};\\n            let starts_i = ${Dt(\"uniforms.starts\",\"i\",n.length)};\\n            var output_index = ${t.indicesGet(\"output_indices\",\"i\")};\\n            var input_index = output_index * steps_i + starts_i + carry;\\n            carry = input_index / input_shape_i;\\n            input_index = input_index % input_shape_i;\\n            if (signs_i < 0) {\\n              input_index = input_shape_i - input_index - 1u + starts_i;\\n            }\\n            ${e.indicesSet(\"input_indices\",\"i\",\"input_index\")};\\n          }\\n          return input_indices;\\n      }`,el=(e,t)=>{let n=e[0].dims,r=Tt.size(n),a=t.axes.length>0?Tt.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],s=Qo(e,4);s.forEach((e=>0!==e||(()=>{throw new Error(\"step cannot be 0\")}))),0===s.length&&(s=Array(a.length).fill(1));const i=t.starts.map(((e,t)=>Zo(e,t,n,a,s))),o=t.ends.map(((e,t)=>Zo(e,t,n,a,s)));if(a.length!==i.length||a.length!==o.length)throw new Error(\"start, ends and axes should have the same number of elements\");if(a.length!==n.length)for(let e=0;e<n.length;++e)a.includes(e)||(i.splice(e,0,0),o.splice(e,0,n[e]),s.splice(e,0,1));const l=s.map((e=>Math.sign(e)));s.forEach(((e,t,n)=>{if(e<0){const r=(o[t]-i[t])/e,a=i[t],l=a+r*s[t];i[t]=l,o[t]=a,n[t]=-e}}));const u=n.slice(0);a.forEach(((e,t)=>{u[e]=Math.ceil((o[e]-i[e])/s[e])}));const d={dims:u,dataType:e[0].dataType},c=Vt(\"output\",e[0].dataType,u.length),p=Nt(\"input\",e[0].dataType,e[0].dims.length),h=Tt.size(u),m=[{name:\"outputSize\",type:\"u32\"},{name:\"starts\",type:\"u32\",length:i.length},{name:\"signs\",type:\"i32\",length:l.length},{name:\"steps\",type:\"u32\",length:s.length}],f=[{type:12,data:h},{type:12,data:i},{type:6,data:l},{type:12,data:s},...It(e[0].dims,u)];return{name:\"Slice\",shaderCache:{hint:`${l.length}_${i.length}_${s.length}`,inputDependencies:[\"rank\"]},getShaderSource:e=>`\\n      ${e.registerUniforms(m).declareVariables(p,c)}\\n        ${Jo(p,c,n)}\\n        ${e.mainStart()}\\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.outputSize\")}\\n          let output_indices = ${c.offsetToIndices(\"global_idx\")};\\n          let input_indices = calculateInputIndices(output_indices);\\n          ${c.setByOffset(\"global_idx\",p.getByIndices(\"input_indices\"))}\\n      }`,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:f})}},tl=(e,t)=>{Ko(e.inputs,t);const n=Yo(e.inputs,t);e.compute(el(e.inputs,n),{inputs:[0]})},nl=e=>{const t=e.starts,n=e.ends,r=e.axes;return vt({starts:t,ends:n,axes:r})}})),Bu=j((()=>{Ol(),jl(),Vl(),Gl(),ql(),rl=e=>{if(!e||1!==e.length)throw new Error(\"Softmax op requires 1 input.\")},al=(e,t)=>{let n,r=e.inputs[0],a=r.dims,s=Tt.size(a),i=a.length,o=Tt.normalizeAxis(t.axis,i),l=o<a.length-1,u=[];l?(u=Array.from({length:i},((e,t)=>t)),u[o]=i-1,u[i-1]=o,n=e.compute(Yt(r,u),{inputs:[r],outputs:[-1]})[0]):n=r;const d=n.dims,c=d[i-1],p=s/c,h=zt(c),m=c/h,f=Nt(\"x\",n.dataType,n.dims,h),g=Vt(\"result\",n.dataType,n.dims,h),_=f.type.value,w=\"f32\"===Ft(n.dataType)?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,y=e.compute({name:\"Softmax\",shaderCache:{hint:`${h}`,inputDependencies:[\"type\"]},getRunData:()=>({outputs:[{dims:d,dataType:n.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:m}]}),getShaderSource:e=>`\\n      var<workgroup> rowMaxShared : ${_};\\n      var<workgroup> rowSumShared : ${_};\\n      var<workgroup> threadShared : array<${_}, 64>;\\n\\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\\n        let index = row * row_stride + col;\\n        return x[index];\\n      }\\n\\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\\n        let index = row * row_stride + col;\\n        result[index] = value;\\n      }\\n      ${e.registerUniform(\"packedCols\",\"i32\").declareVariables(f,g)}\\n      ${e.mainStart()}\\n        let gindex = i32(global_idx);\\n        let lindex = i32(local_idx);\\n        const wg = 64;\\n        let row = gindex / wg;\\n        let cols = uniforms.packedCols;\\n        let row_stride : i32 = uniforms.packedCols;\\n\\n        // find the rows max\\n        ${w}\\n        for (var col = lindex; col < cols; col += wg) {\\n          let value = getValue(row, col, row_stride);\\n          threadMax = max(threadMax, value);\\n        }\\n        if (lindex < cols) {\\n          threadShared[lindex] = threadMax;\\n        }\\n        workgroupBarrier();\\n\\n        var reduceSize = min(cols, wg);\\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\\n          reduceSize = currSize + (reduceSize & 1);\\n          if (lindex < currSize) {\\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\\n          }\\n          workgroupBarrier();\\n        }\\n        if (lindex == 0) {\\n          rowMaxShared = ${_}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)(\"threadShared[0]\",h)});\\n        }\\n        workgroupBarrier();\\n\\n        // find the rows sum\\n        var threadSum = ${_}(0.0);\\n        for (var col = lindex; col < cols; col += wg) {\\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\\n          threadSum += subExp;\\n        }\\n        threadShared[lindex] = threadSum;\\n        workgroupBarrier();\\n\\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\\n          if (lindex < currSize) {\\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\\n          }\\n          workgroupBarrier();\\n        }\\n        if (lindex == 0) {\\n          rowSumShared = ${_}(${Lt(\"threadShared[0]\",h)});\\n        }\\n        workgroupBarrier();\\n\\n        // calculate final value for each element in the row\\n        for (var col = lindex; col < cols; col += wg) {\\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\\n          setValue(row, col, row_stride, value);\\n        }\\n      }`},{inputs:[n],outputs:[l?-1:0]})[0];l&&e.compute(Yt(y,u),{inputs:[y]})},sl=(e,t)=>{rl(e.inputs),al(e,t)},il=e=>vt({axis:e.axis})})),Lu=j((()=>{Ol(),jl(),ql(),ol=e=>Array.from(e.getBigInt64Array(),Number),ll=e=>{if(!e||2!==e.length)throw new Error(\"Tile requires 2 inputs.\");if(1!==e[0].dataType&&10!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error(\"Tile only support float, float16, int32, and uint32 data types\");if(7!==e[1].dataType)throw new Error(\"Tile `repeats` input should be of int64 data type\");if(1!==e[1].dims.length)throw new Error(\"Tile `repeats` input should be 1-D\");if(ol(e[1]).length!==e[0].dims.length)throw new Error(\"Tile `repeats` input should have same number of elements as rank of input data tensor\")},ul=(e,t)=>{const n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},dl=(e,t)=>{const n=e[0].dims,r=t??ol(e[1]),a=ul(n,r),s=Tt.size(a),i=e[0].dataType,o=Nt(\"input\",i,n.length),l=Vt(\"output\",i,a.length);return{name:\"Tile\",shaderCache:{hint:`${r}`,inputDependencies:[\"rank\"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...It(e[0].dims,a)]}),getShaderSource:e=>`\\n      const inputShape = ${o.indices(...n)};\\n      ${e.registerUniform(\"output_size\",\"u32\").declareVariables(o,l)}\\n      ${e.mainStart()}\\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.output_size\")}\\n      let output_indices = ${l.offsetToIndices(\"global_idx\")};\\n      var input_indices: ${o.type.indices};\\n      for (var i = 0; i < ${n.length}; i++) {\\n        let input_dim_i = ${o.indicesGet(\"uniforms.input_shape\",\"i\")};\\n        let input_dim_value = ${l.indicesGet(\"output_indices\",\"i\")}  % input_dim_i;\\n\\n        ${o.indicesSet(\"input_indices\",\"i\",\"input_dim_value\")}\\n      }\\n      ${l.setByOffset(\"global_idx\",o.getByIndices(\"input_indices\"))}\\n    }`}},cl=e=>{ll(e.inputs),e.compute(dl(e.inputs),{inputs:[0]})}})),Du=j((()=>{Ol(),jl(),ql(),pl=(e,t,n,r,a)=>{let s,i=Vt(\"output_data\",a,n.length,4),o=Nt(\"a_data\",t[1].dataType,t[1].dims.length,4),l=Nt(\"b_data\",t[2].dataType,t[2].dims.length,4),u=Nt(\"c_data\",t[0].dataType,t[0].dims.length,4),d=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){const e=(e,t,n=\"\")=>{const r=`a_data[index_a${t}][component_a${t}]`,a=`b_data[index_b${t}][component_b${t}]`,s=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\\n            let output_indices${t} = ${i.offsetToIndices(`global_idx * 4u + ${t}u`)};\\n            let offset_a${t} = ${o.broadcastedIndicesToOffset(`output_indices${t}`,i)};\\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,i)};\\n            let offset_c${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,i)};\\n            let index_a${t} = offset_a${t} / 4u;\\n            let index_b${t} = offset_b${t} / 4u;\\n            let index_c${t} = offset_c${t} / 4u;\\n            let component_a${t} = offset_a${t} % 4u;\\n            let component_b${t} = offset_b${t} % 4u;\\n            let component_c${t} = offset_c${t} % 4u;\\n            ${e}[${t}] = ${n}(${d(r,a,s)});\\n          `};s=9===a?`\\n            var data = vec4<u32>(0);\\n            ${e(\"data\",0,\"u32\")}\\n            ${e(\"data\",1,\"u32\")}\\n            ${e(\"data\",2,\"u32\")}\\n            ${e(\"data\",3,\"u32\")}\\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\\n            ${e(\"output_data[global_idx]\",0)}\\n            ${e(\"output_data[global_idx]\",1)}\\n            ${e(\"output_data[global_idx]\",2)}\\n            ${e(\"output_data[global_idx]\",3)}\\n          `}else s=i.setByOffset(\"global_idx\",d(o.getByOffset(\"global_idx\"),l.getByOffset(\"global_idx\"),u.getByOffset(\"global_idx\")));return`\\n        ${e.registerUniform(\"vec_size\",\"u32\").declareVariables(u,o,l,i)}\\n        ${e.mainStart()}\\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes(\"uniforms.vec_size\")}\\n        ${s}\\n      }`},hl=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,a=e[1].dataType,s=!(Tt.areEqual(t,n)&&Tt.areEqual(n,r)),i=t,o=Tt.size(t);if(s){const e=Mt.calcShape(Mt.calcShape(t,n,!1),r,!1);if(!e)throw new Error(\"Can't perform where op on the given tensors\");i=e,o=Tt.size(i)}const l=Math.ceil(o/4);return{name:\"Where\",shaderCache:{inputDependencies:[\"rank\",\"rank\",\"rank\"]},getShaderSource:t=>pl(t,e,i,s,a),getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...It(r,t,n,i)]})}},ml=e=>{e.compute(hl(e.inputs))}})),Ru=j((()=>{Hl(),Xl(),Kl(),Ql(),Zl(),Jl(),eu(),uu(),pu(),hu(),mu(),fu(),gu(),_u(),wu(),yu(),bu(),vu(),Tu(),ku(),$u(),lu(),Cu(),xu(),Su(),Pu(),Eu(),Fu(),Wl(),Au(),Iu(),zu(),Ou(),Bu(),Mu(),Lu(),Gl(),Yl(),Du(),fl=new Map([[\"Abs\",[fr]],[\"Acos\",[gr]],[\"Acosh\",[_r]],[\"Add\",[da]],[\"ArgMax\",[Qn,Yn]],[\"ArgMin\",[Kn,Yn]],[\"Asin\",[wr]],[\"Asinh\",[yr]],[\"Atan\",[br]],[\"Atanh\",[vr]],[\"Attention\",[sr]],[\"AveragePool\",[oo,io]],[\"BatchNormalization\",[ur]],[\"BiasAdd\",[pr]],[\"BiasSplitGelu\",[ia]],[\"Cast\",[Mr,xr]],[\"Ceil\",[$r]],[\"Clip\",[kr]],[\"Concat\",[Ta,ka]],[\"Conv\",[ds,is]],[\"ConvTranspose\",[Ts,ys]],[\"Cos\",[Cr]],[\"Cosh\",[Sr]],[\"CumSum\",[$s,Cs]],[\"DepthToSpace\",[Fs,As]],[\"DequantizeLinear\",[yo,bo]],[\"Div\",[ca]],[\"Einsum\",[Vs,js]],[\"Elu\",[Er,Pr]],[\"Equal\",[pa]],[\"Erf\",[Ar]],[\"Exp\",[Ir]],[\"Expand\",[Hs]],[\"FastGelu\",[Ks]],[\"Floor\",[zr]],[\"FusedConv\",[ds,is]],[\"Gather\",[Js,Zs]],[\"GatherElements\",[oi,ii]],[\"GatherBlockQuantized\",[ni,ri]],[\"Gelu\",[Or]],[\"Gemm\",[ci,di]],[\"GlobalAveragePool\",[co,uo]],[\"GlobalMaxPool\",[go,fo]],[\"Greater\",[ga]],[\"GreaterOrEqual\",[wa]],[\"GroupQueryAttention\",[Pi]],[\"HardSigmoid\",[qr,jr]],[\"InstanceNormalization\",[Ii]],[\"LayerNormalization\",[Bi]],[\"LeakyRelu\",[Br,Pr]],[\"Less\",[_a]],[\"LessOrEqual\",[ya]],[\"Log\",[ea]],[\"MatMul\",[ts]],[\"MatMulNBits\",[Ni,Vi]],[\"MaxPool\",[ho,mo]],[\"Mul\",[ha]],[\"MultiHeadAttention\",[wi,mi]],[\"Neg\",[Dr]],[\"Not\",[Lr]],[\"Pad\",[Qi]],[\"Pow\",[ma]],[\"QuickGelu\",[ra,Pr]],[\"Range\",[Mo]],[\"Reciprocal\",[Rr]],[\"ReduceMin\",[qn]],[\"ReduceMean\",[Dn]],[\"ReduceMax\",[jn]],[\"ReduceSum\",[Un]],[\"ReduceProd\",[Gn]],[\"ReduceL1\",[Rn]],[\"ReduceL2\",[Nn]],[\"ReduceLogSum\",[Hn]],[\"ReduceLogSumExp\",[Vn]],[\"ReduceSumSquare\",[Wn]],[\"Relu\",[Nr]],[\"Resize\",[Vo,jo]],[\"RotaryEmbedding\",[Uo]],[\"Sigmoid\",[Vr]],[\"Sin\",[Gr]],[\"Sinh\",[Ur]],[\"Slice\",[tl,nl]],[\"SkipLayerNormalization\",[Xo]],[\"Split\",[Ti,ki]],[\"Sqrt\",[Wr]],[\"Softmax\",[sl,il]],[\"Sub\",[fa]],[\"Tan\",[Hr]],[\"Tanh\",[Kr]],[\"ThresholdedRelu\",[Jr,Pr]],[\"Tile\",[cl]],[\"Transpose\",[Zt,Jt]],[\"Where\",[ml]]])})),Nu=j((()=>{pe(),Ll(),ql(),gl=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,a){F(e.programInfo.name);const s=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);const o=[];for(const e of t)o.push({binding:o.length,resource:{buffer:e.buffer}});for(const e of n)o.push({binding:o.length,resource:{buffer:e.buffer}});a&&o.push({binding:o.length,resource:a});const l=s.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if(\"capturing\"===this.backend.sessionStatus){const t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||\"at-passes\"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),A(e.programInfo.name)}dispose(){}build(e,t){F(e.name);const n=this.backend.device,r=[];n.features.has(\"shader-f16\")&&r.push(\"enable f16;\");const a=Gt(t,this.backend.device.limits),s=e.getShaderSource(a),i=`${r.join(\"\\n\")}\\n${a.additionalImplementations}\\n${s}`,o=n.createShaderModule({code:i,label:e.name});ut(\"verbose\",(()=>`[WebGPU] ${e.name} shader code: ${i}`));const l=n.createComputePipeline({compute:{module:o,entryPoint:\"main\"},layout:\"auto\",label:e.name});return A(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(e){const t=\"number\"==typeof e?e:e.x,n=\"number\"==typeof e?1:e.y||1,r=\"number\"==typeof e?1:e.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=a&&n<=a&&r<=a)return[t,n,r];let s=t*n*r,i=Math.ceil(Math.sqrt(s));if(i>a){if(i=Math.ceil(Math.cbrt(s)),i>a)throw new Error(\"Total dispatch size exceeds WebGPU maximum.\");return[i,i,i]}return[i,i,1]}}})),Vu=j((()=>{pe(),Ol(),Ll(),Dl(),Nl(),Ru(),Nu(),_l=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);const n=[];for(let r=0;r<e.length;++r){const a=e[r].dataType;switch(t[r]){case\"none\":n.push(\"\");break;case\"type\":n.push(`${a}`);break;case\"rank\":{const t=e[r].dims.length;n.push(`${a};${t}`);break}case\"dims\":{const t=e[r].dims.join(\",\");n.push(`${a};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join(\"|\")},wl=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+=\"[\"+e.shaderCache.hint+\"]\"),r+=\":\"+n+`:${_l(t,e.shaderCache?.inputDependencies??new Array(t.length).fill(\"dims\"))}`,r},yl=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},bl=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus=\"default\",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error(\"currentKernelCustomData(): currentKernelId is null. (should not happen)\");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;const n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};t.features.has(\"chromium-experimental-timestamp-query-inside-passes\")?n.push(\"chromium-experimental-timestamp-query-inside-passes\"):t.features.has(\"timestamp-query\")&&n.push(\"timestamp-query\"),t.features.has(\"shader-f16\")&&n.push(\"shader-f16\"),this.device=await t.requestDevice(r),this.adapterInfo=new yl(t.info||await t.requestAdapterInfo()),this.gpuDataManager=yt(this),this.programManager=new gl(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ot(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,\"device\",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,\"adapter\",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<\"u\"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){const e=this.getCommandEncoder(),t={};\"at-passes\"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;F(),this.endComputePass(),\"none\"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,\"none\"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{const t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){const r=n[e],a=r.kernelId,s=this.kernels.get(a),i=s.kernelType,o=s.kernelName,l=r.programName,u=r.inputTensorViews,d=r.outputTensorViews,c=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>\"u\"&&(this.queryTimeBase=c);const h=Number(c-this.queryTimeBase),m=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(h)||!Number.isSafeInteger(m))throw new RangeError(\"incorrect timestamp range\");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map((e=>({dims:e.dims,dataType:Ke(e.dataType)}))),outputsMetadata:d.map((e=>({dims:e.dims,dataType:Ke(e.dataType)}))),kernelId:a,kernelType:i,kernelName:o,programName:l,startTime:h,endTime:m});else{let e=\"\";u.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${Ke(t.dataType)}, `}));let t=\"\";d.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${Ke(e.dataType)}, `})),console.log(`[profiling] kernel \"${a}|${i}|${o}|${l}\" ${e}${t}execution time: ${m-h} ns`)}P(\"GPU\",`${l}::${c}::${p}`)}e.unmap(),this.pendingQueries.delete(e)})),A()}run(e,t,n,r,a,s){F(e.name);const i=[];for(let e=0;e<t.length;++e){const n=t[e].data;if(0===n)continue;const r=this.gpuDataManager.get(n);if(!r)throw new Error(`no GPU data for input: ${n}`);i.push(r)}const{outputs:o,dispatchGroup:l,programUniforms:u}=e.getRunData(t),d=0===n.length?o.map(((e,t)=>t)):n;if(d.length!==o.length)throw new Error(`Output size ${d.length} must be equal to ${o.length}.`);let c,p=[],h=[];for(let e=0;e<o.length;++e){if(!Number.isInteger(d[e])||d[e]<-3||d[e]>=s)throw new Error(`Invalid output index: ${d[e]}`);if(-3===d[e])continue;const t=-1===d[e],n=-2===d[e],i=t||n?a(o[e].dataType,o[e].dims):r(d[e],o[e].dataType,o[e].dims);if(p.push(i),0===i.data)continue;const l=this.gpuDataManager.get(i.data);if(!l)throw new Error(`no GPU data for output: ${i.data}`);if(t&&this.temporaryData.push(l),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(l)}h.push(l)}if(i.length!==t.length||h.length!==p.length){if(0===h.length)return A(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(u){let e=0,t=[];u.forEach((n=>{const r=\"number\"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let a,s,i=10===n.type?2:4;10===n.type?(s=r.length>4?16:r.length>2?8:r.length*i,a=r.length>4?16:i*r.length):(s=r.length<=2?r.length*i:16,a=16),e=Math.ceil(e/s)*s,t.push(e);const o=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/o)*a:r.length*i}));const n=16;e=Math.ceil(e/n)*n;const r=new ArrayBuffer(e);u.forEach(((e,n)=>{const a=t[n],s=\"number\"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,a,s.length).set(s);else if(12===e.type)new Uint32Array(r,a,s.length).set(s);else if(10===e.type)new Uint16Array(r,a,s.length).set(s);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${Ke(e.type)}`);new Float32Array(r,a,s.length).set(s)}}));const a=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(a.buffer,0,r,0,e),this.gpuDataManager.release(a.id),c={offset:0,size:e,buffer:a.buffer}}let m=this.programManager.normalizeDispatchGroupSize(l),f=1===m[1]&&1===m[2],g=wl(e,t,f),_=this.programManager.getArtifact(g);if(_||(_=this.programManager.build(e,m),this.programManager.setArtifact(g,_),ut(\"info\",(()=>`[artifact] key: ${g}, programName: ${e.name}`))),u&&_.uniformVariablesInfo){if(u.length!==_.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${_.uniformVariablesInfo.length}, got ${u.length} in program \"${_.programInfo.name}\".`);for(let e=0;e<u.length;e++){const t=u[e],n=t.type,r=\"number\"==typeof t.data?1:t.data.length,[a,s]=_.uniformVariablesInfo[e];if(n!==a||r!==s)throw new Error(`Uniform variable ${e} mismatch: expect type ${a} with size ${s}, got type ${n} with size ${r} in program \"${_.programInfo.name}\".`)}}if(ut(\"info\",(()=>`[ProgramManager] run \"${e.name}\" (key=${g}) with ${m[0]}x${m[1]}x${m[2]}`)),\"none\"!==this.queryType||\"capturing\"===this.sessionStatus){const e={kernelId:this.currentKernelId,programName:_.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),\"capturing\"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(_,i,h,m,c),A(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){const a=fl.get(e);if(!a)throw new Error(`kernel not implemented: ${e}`);const s={kernelType:e,kernelName:r,kernelEntry:a[0],attributes:[a[1],n]};this.kernels.set(t,s)}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){const r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);const a=r.kernelType,s=r.kernelName,i=r.kernelEntry,o=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel \"[${a}] ${s}\" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),ut(\"info\",(()=>`[WebGPU] Start to run kernel \"[${a}] ${s}\"...`));const l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope(\"validation\"),i(t,o[1]),0}catch(e){return n.push(Promise.resolve(`[WebGPU] Kernel \"[${a}] ${s}\" failed. ${e}`)),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel \"[${a}] ${s}\": ${e.message}`:null)));for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let a=this.sessionExternalDataMapping.get(e);a||(a=new Map,this.sessionExternalDataMapping.set(e,a));const s=a.get(t),i=this.gpuDataManager.registerExternalBuffer(n,r,s);return a.set(t,[i,n]),i}unregisterBuffers(e){const t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[0]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){const t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{const r=await _t(this,e,t);return dt(r.buffer,n)}}writeTimestamp(e){\"inside-passes\"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType=\"none\",(\"default\"===this.env.webgpu.profiling?.mode||(typeof this.env.trace>\"u\"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has(\"chromium-experimental-timestamp-query-inside-passes\")?this.queryType=\"inside-passes\":this.device.features.has(\"timestamp-query\")&&(this.queryType=\"at-passes\"),\"none\"!==this.queryType&&typeof this.querySet>\"u\"&&(this.querySet=this.device.createQuerySet({type:\"timestamp\",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ut(\"info\",\"captureBegin\"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus=\"capturing\"}captureEnd(){ut(\"info\",\"captureEnd\"),this.flush(),this.sessionStatus=\"default\"}replay(){ut(\"info\",\"replay\"),this.sessionStatus=\"replaying\";const e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){const n=this.getComputePassEncoder(),a=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(a.computePipeline),n.setBindGroup(0,a.bindGroup),n.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,\"none\"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||\"at-passes\"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus=\"default\"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),ju=j((()=>{Ll(),vl=1,xl=()=>vl++,Ml=class{constructor(e){this.sessionId=e.sessionId,this.mlContext=e.context,this.mlTensor=e.tensor,this.dataType=e.dataType,this.tensorShape=e.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}destroy(){ut(\"verbose\",(()=>\"[WebNN] TensorWrapper.destroy\")),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e){return e?this.mlContext.readTensor(this.mlTensor,e):this.mlContext.readTensor(this.mlTensor)}sameTypeAndShape(e,t){return this.dataType===e&&this.tensorShape.every(((e,n)=>e===t[n]))}},Tl=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&this.tensorManager.releaseTensor(this.tensorWrapper)}async ensureTensor(e,t,n){if(this.wrapper){if(this.wrapper.sameTypeAndShape(e,t))return this.wrapper.tensor;n&&(this.activeUpload=new Uint8Array(await this.wrapper.read())),this.tensorManager.releaseTensor(this.wrapper)}const r=MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,t,r,!0,!0),n&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){this.wrapper?this.wrapper.write(e):this.activeUpload?this.activeUpload.set(e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.wrapper)throw new Error(\"Tensor has not been created.\");return e?this.wrapper.read(e):this.wrapper.read()}},kl=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){const e=xl();return this.tensorTrackersById.set(e,new Tl(this)),e}releaseTensorId(e){const t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,n,r){ut(\"verbose\",(()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${n}, copyOld: ${r}}`));const a=this.tensorTrackersById.get(e);if(!a)throw new Error(\"Tensor not found.\");return a.ensureTensor(t,n,r)}upload(e,t){const n=this.tensorTrackersById.get(e);if(!n)throw new Error(\"Tensor not found.\");n.upload(t)}async download(e,t){ut(\"verbose\",(()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`));const n=this.tensorTrackersById.get(e);if(!n)throw new Error(\"Tensor not found.\");return n.download(t)}releaseTensorsForSession(e){for(const t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter((t=>t.sessionId!==e))}registerTensor(e,t,n,r){const a=xl(),s=new Ml({sessionId:this.backend.currentSessionId,context:e,tensor:t,dataType:n,shape:r});return this.tensorTrackersById.set(a,new Tl(this,s)),this.externalTensors.add(s),a}async getCachedTensor(e,t,n,r,a){const s=this.backend.currentSessionId;for(const[n,r]of this.freeTensors.entries())if(r.sameTypeAndShape(e,t)){const e=this.freeTensors.splice(n,1)[0];return e.sessionId=s,e}const i=this.backend.currentContext;ut(\"verbose\",(()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`));const o=await i.createTensor({dataType:e,shape:t,dimensions:t,usage:n,writable:r,readable:a});return new Ml({sessionId:s,context:i,tensor:o,dataType:e,shape:t})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},$l=(...e)=>new kl(...e)})),qu=j((()=>{Ol(),Fl(),Dl(),ju(),Ll(),Cl=new Map([[1,\"float32\"],[10,\"float16\"],[6,\"int32\"],[12,\"uint32\"],[7,\"int64\"],[13,\"uint64\"],[3,\"int8\"],[2,\"uint8\"],[9,\"uint8\"]]),Sl=class{constructor(e){this.tensorManager=$l(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,ot(e.logLevel,!!e.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw new Error(\"No active session\");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){const e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let n=this.sessionIdsByMLContext.get(t);n||(n=new Set,this.sessionIdsByMLContext.set(t,n)),n.add(e)}onReleaseSession(e){const t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);const n=this.sessionIdsByMLContext.get(t);n.delete(e),0===n.size&&this.sessionIdsByMLContext.delete(t)}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){ut(\"verbose\",(()=>`[WebNN] releaseTensorId {tensorId: ${e}}`)),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,n,r){const a=Cl.get(t);if(!a)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,a,n,r)}uploadTensor(e,t){if(!De().shouldTransferToMLTensor)throw new Error(\"Trying to upload to a MLTensor while shouldTransferToMLTensor is false\");ut(\"verbose\",(()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`)),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{const n=await this.tensorManager.download(e);return dt(n,t)}}registerMLTensor(e,t,n){const r=Cl.get(t);if(!r)throw new Error(`Unsupported ONNX data type: ${t}`);const a=this.tensorManager.registerTensor(this.currentContext,e,r,n);return ut(\"verbose\",(()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${r}, dimensions: ${n}} -> {tensorId: ${a}}`)),a}registerMLConstant(e,t,n,r,a,s){if(!s)throw new Error(\"External mounted files are not available.\");let i=e;e.startsWith(\"./\")&&(i=e.substring(2));const o=s.get(i);if(!o)throw new Error(`File with name ${i} not found in preloaded files.`);if(t+n>o.byteLength)throw new Error(\"Out of bounds: data offset and length exceed the external file data size.\");let l,u=o.slice(t,t+n).buffer;switch(a.dataType){case\"float32\":l=new Float32Array(u);break;case\"float16\":l=new Uint16Array(u);break;case\"int32\":l=new Int32Array(u);break;case\"uint32\":l=new Uint32Array(u);break;case\"int64\":l=new BigInt64Array(u);break;case\"uint64\":l=new BigUint64Array(u);break;case\"int8\":l=new Int8Array(u);break;case\"uint8\":l=new Uint8Array(u);break;default:throw new Error(`Unsupported data type: ${a.dataType} in creating WebNN Constant from external data.`)}return ut(\"verbose\",(()=>`[WebNN] registerMLConstant {dataType: ${a.dataType}, shape: ${a.shape}}}`)),r.constant(a,l)}flush(){}}})),Gu={};q(Gu,{init:()=>Hu});var Uu,Wu,Hu,Xu,Ku,Qu,Yu,Zu,Ju,ed,td,nd,rd,ad,sd,id,od,ld,ud,dd,cd,pd,hd,md,fd,gd,_d,wd,yd,bd,vd,xd,Md,Td,kd,$d,Cd=j((()=>{Ol(),Vu(),Ll(),jl(),qu(),Uu=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error(\"Invalid data type\");const e=Tt.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error(\"Invalid data type\");const e=Tt.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error(\"Invalid data type\");const e=Tt.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw new Error(\"Invalid data type\");const e=Tt.size(this.dims);return 0===e?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(Tt.size(t)!==Tt.size(this.dims))throw new Error(\"Invalid new shape\");return new e(this.module,this.dataType,this.data,t)}},Wu=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.HEAPU32,a=n>>>2;this.opKernelContext=r[a++];const s=r[a++];this.outputCount=r[a++],this.customDataOffset=r[a++],this.customDataSize=r[a++];const i=[];for(let t=0;t<s;t++){const t=r[a++],n=r[a++],s=r[a++],o=[];for(let e=0;e<s;e++)o.push(r[a++]);i.push(new Uu(e,t,n,o))}this.inputs=i}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){const n=t?.inputs?.map((e=>\"number\"==typeof e?this.inputs[e]:e))??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,((e,t,n)=>new Uu(this.module,t,this.output(e,n),n)),((e,t)=>{const n=Qe(e,t);if(!n)throw new Error(`Unsupported data type: ${e}`);const r=n>0?this.backend.gpuDataManager.create(n).id:0;return new Uu(this.module,e,r,t)}),this.outputCount)}output(e,t){const n=this.module.stackSave();try{let n=this.module.stackAlloc(4*(1+t.length)),r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Hu=async(e,t,n,r)=>{const a=t.jsepInit;if(!a)throw new Error(\"Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.\");if(\"webgpu\"===e){const e=new bl;await e.initialize(n,r),a(\"webgpu\",[e,t=>e.alloc(t),t=>e.free(t),(n,r,a,s=!1)=>{if(s)ut(\"verbose\",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${r}, size=${a}`)),e.memcpy(n,r);else{ut(\"verbose\",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${r}, size=${a}`));const s=t.HEAPU8.subarray(n>>>0,(n>>>0)+a);e.upload(r,s)}},async(n,r,a)=>{ut(\"verbose\",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${a}`)),await e.download(n,(()=>t.HEAPU8.subarray(r>>>0,(r>>>0)+a)))},(n,r,a)=>e.createKernel(n,r,a,t.UTF8ToString(t._JsepGetNodeName(r))),t=>e.releaseKernel(t),(n,r,a,s)=>{ut(\"verbose\",(()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${n}, contextDataOffset=${r}`));const i=new Wu(t,e,r);return e.computeKernel(n,i,s)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else{const e=new Sl(n);a(\"webnn\",[e,()=>e.reserveTensorId(),t=>e.releaseTensorId(t),async(t,n,r,a)=>e.ensureTensor(t,n,r,a),(t,n)=>{e.uploadTensor(t,n)},async(t,n)=>e.downloadTensor(t,n)])}}})),Sd=j((()=>{Il(),zl(),Ol(),Fl(),Al(),Bl(),Xu=(e,t)=>{0!==De()._OrtInit(e,t)&&Ve(\"Can't initialize onnxruntime.\")},Ku=async e=>{Xu(e.wasm.numThreads,Ze(e.logLevel))},Qu=async(e,t)=>{{const n=(Cd(),G(Gu)).init;if(\"webgpu\"===t){if(typeof navigator>\"u\"||!navigator.gpu)throw new Error(\"WebGPU is not supported in current environment\");let t=e.webgpu.adapter;if(t){if(\"object\"!=typeof t.limits||\"object\"!=typeof t.features||\"function\"!=typeof t.requestDevice)throw new Error(\"Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.\")}else{const n=e.webgpu.powerPreference;if(void 0!==n&&\"low-power\"!==n&&\"high-performance\"!==n)throw new Error(`Invalid powerPreference setting: \"${n}\"`);const r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&\"boolean\"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: \"${r}\"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag \"--enable-unsafe-webgpu\" if you are using Chrome.')}await n(\"webgpu\",De(),e,t)}if(\"webnn\"===t){if(typeof navigator>\"u\"||!navigator.ml)throw new Error(\"WebNN is not supported in current environment\");await n(\"webnn\",De(),e)}}},Yu=new Map,Zu=e=>{const t=De(),n=t.stackSave();try{const n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&Ve(\"Can't get session input/output count.\"),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},Ju=e=>{const t=De(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},ed=async(e,t)=>{let n,r,a=De();Array.isArray(e)?[n,r]=e:e.buffer===a.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=Ju(e);let s=0,i=0,o=0,l=[],u=[],d=[];try{if([i,l]=He(t),t?.externalData&&a.mountExternalData){const e=[];for(const n of t.externalData){const t=\"string\"==typeof n?n:n.path;e.push(nt(\"string\"==typeof n?n:n.data).then((e=>{a.mountExternalData(t,e)})))}await Promise.all(e)}for(const e of t?.executionProviders??[])if(\"webnn\"===(\"string\"==typeof e?e:e.name)){if(a.shouldTransferToMLTensor=!1,a.currentContext)throw new Error(\"WebNN execution provider is already set.\");if(\"string\"!=typeof e){const t=e,n=t?.context,r=t?.gpuDevice,s=t?.deviceType,i=t?.powerPreference;a.currentContext=n||(r?await navigator.ml.createContext(r):await navigator.ml.createContext({deviceType:s,powerPreference:i}))}else a.currentContext=await navigator.ml.createContext();break}s=await a._OrtCreateSession(n,r,i),0===s&&Ve(\"Can't create a session.\"),a.jsepOnCreateSession?.(),a.currentContext&&(a.jsepRegisterMLContext(s,a.currentContext),a.currentContext=void 0,a.shouldTransferToMLTensor=!0);const[e,c]=Zu(s),p=!!t?.enableGraphCapture,h=[],m=[],f=[];for(let t=0;t<e;t++){const e=a._OrtGetInputName(s,t);0===e&&Ve(\"Can't get an input name.\"),u.push(e),h.push(a.UTF8ToString(e))}for(let e=0;e<c;e++){const n=a._OrtGetOutputName(s,e);0===n&&Ve(\"Can't get an output name.\"),d.push(n);const r=a.UTF8ToString(n);m.push(r);{if(p&&void 0===t?.preferredOutputLocation){f.push(\"gpu-buffer\");continue}const e=\"string\"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[r]??\"cpu\";if(\"cpu\"!==e&&\"cpu-pinned\"!==e&&\"gpu-buffer\"!==e&&\"ml-tensor\"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&\"gpu-buffer\"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);f.push(e)}}let g=null;return f.some((e=>\"gpu-buffer\"===e||\"ml-tensor\"===e))&&(o=a._OrtCreateBinding(s),0===o&&Ve(\"Can't create IO binding.\"),g={handle:o,outputPreferredLocations:f,outputPreferredLocationsEncoded:f.map((e=>tt(e)))}),Yu.set(s,[s,u,d,g,p,!1]),[s,h,m]}catch(e){throw u.forEach((e=>a._OrtFree(e))),d.forEach((e=>a._OrtFree(e))),0!==o&&a._OrtReleaseBinding(o),0!==s&&a._OrtReleaseSession(s),e}finally{a._free(n),0!==i&&a._OrtReleaseSessionOptions(i),l.forEach((e=>a._free(e))),a.unmountExternalData?.()}},td=e=>{const t=De(),n=Yu.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);const[r,a,s,i,o]=n;i&&(o&&t._OrtClearBoundOutputs(i.handle),t._OrtReleaseBinding(i.handle)),t.jsepOnReleaseSession?.(e),a.forEach((e=>t._OrtFree(e))),s.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),Yu.delete(e)},nd=(e,t,n,r,a,s=!1)=>{if(!e)return void t.push(0);let i,o,l=De(),u=e[0],d=e[1],c=e[3];if(\"string\"===u&&(\"gpu-buffer\"===c||\"ml-tensor\"===c))throw new Error(\"String tensor is not supported on GPU.\");if(s&&\"gpu-buffer\"!==c)throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if(\"gpu-buffer\"===c){const t=e[2].gpuBuffer;o=Qe(Xe(u),d);const n=l.jsepRegisterBuffer;if(!n)throw new Error('Tensor location \"gpu-buffer\" is not supported without using WebGPU.');i=n(r,a,t,o)}else if(\"ml-tensor\"===c){const t=e[2].mlTensor;o=Qe(Xe(u),d);const n=l.jsepRegisterMLTensor;if(!n)throw new Error('Tensor location \"ml-tensor\" is not supported without using WebNN.');i=n(t,Xe(u),d)}else{const t=e[2];if(Array.isArray(t)){o=4*t.length,i=l._malloc(o),n.push(i);let e=i/4;for(let r=0;r<t.length;r++){if(\"string\"!=typeof t[r])throw new TypeError(`tensor data at index ${r} is not a string`);l.HEAPU32[e++]=Re(t[r],n)}}else o=t.byteLength,i=l._malloc(o),n.push(i),l.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),i)}const p=l.stackSave(),h=l.stackAlloc(4*d.length);try{let e=h/4;d.forEach((t=>l.HEAP32[e++]=t));const n=l._OrtCreateTensor(Xe(u),i,o,h,d.length,tt(c));0===n&&Ve(`Can't create tensor for input/output. session=${r}, index=${a}.`),t.push(n)}finally{l.stackRestore(p)}},rd=async(e,t,n,r,a,s)=>{const i=De(),o=Yu.get(e);if(!o)throw new Error(`cannot run inference. invalid session id: ${e}`);let l=o[0],u=o[1],d=o[2],c=o[3],p=o[4],h=o[5],m=t.length,f=r.length,g=0,_=[],w=[],y=[],b=[],v=i.stackSave(),x=i.stackAlloc(4*m),M=i.stackAlloc(4*m),T=i.stackAlloc(4*f),k=i.stackAlloc(4*f);try{i.jsepOnRunStart?.(l),[g,_]=je(s);for(let r=0;r<m;r++)nd(n[r],w,b,e,t[r],p);for(let t=0;t<f;t++)nd(a[t],y,b,e,m+r[t],p);let o,v=x/4,$=M/4,C=T/4,S=k/4;for(let e=0;e<m;e++)i.HEAPU32[v++]=w[e],i.HEAPU32[$++]=u[t[e]];for(let e=0;e<f;e++)i.HEAPU32[C++]=y[e],i.HEAPU32[S++]=d[r[e]];if(c&&!h){const{handle:n,outputPreferredLocations:s,outputPreferredLocationsEncoded:o}=c;if(u.length!==m)throw new Error(`input count from feeds (${m}) is expected to be always equal to model's input count (${u.length}).`);for(let r=0;r<m;r++){const a=t[r];0!==await i._OrtBindInput(n,u[a],w[r])&&Ve(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<f;t++){const l=r[t];a[t]?.[3]?0!==i._OrtBindOutput(n,d[l],y[t],0)&&Ve(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==i._OrtBindOutput(n,d[l],0,o[l])&&Ve(`Can't bind output[${t}] to ${s[t]} for session=${e}.`)}Yu.set(e,[l,u,d,c,p,!0])}o=c?await i._OrtRunWithBinding(l,c.handle,f,T,g):await i._OrtRun(l,M,x,m,k,f,T,g),0!==o&&Ve(\"failed to call OrtRun().\");const P=[];for(let e=0;e<f;e++){const t=i.HEAPU32[T/4+e];if(t===y[e]){P.push(a[e]);continue}let n,s=i.stackSave(),o=i.stackAlloc(16),l=!1,u=0;try{0!==i._OrtGetTensorData(t,o,o+4,o+8,o+12)&&Ve(`Can't access output tensor data on index ${e}.`);let a=o/4,s=i.HEAPU32[a++];u=i.HEAPU32[a++];const d=i.HEAPU32[a++],p=i.HEAPU32[a++],h=[];for(let e=0;e<p;e++)h.push(i.HEAPU32[d/4+e]);i._OrtFree(d);const m=h.reduce(((e,t)=>e*t),1);n=Ke(s);const f=c?.outputPreferredLocations[r[e]];if(\"string\"===n){if(\"gpu-buffer\"===f||\"ml-tensor\"===f)throw new Error(\"String tensor is not supported on GPU.\");let e=[],t=u/4;for(let n=0;n<m;n++){const r=i.HEAPU32[t++],a=n===m-1?void 0:i.HEAPU32[t]-r;e.push(i.UTF8ToString(r,a))}P.push([n,h,e,\"cpu\"])}else if(\"gpu-buffer\"===f&&m>0){const e=i.jsepGetBuffer;if(!e)throw new Error('preferredLocation \"gpu-buffer\" is not supported without using WebGPU.');const r=e(u),a=Qe(s,m);if(void 0===a||!Je(n))throw new Error(`Unsupported data type: ${n}`);l=!0,P.push([n,h,{gpuBuffer:r,download:i.jsepCreateDownloader(r,a,n),dispose:()=>{i._OrtReleaseTensor(t)}},\"gpu-buffer\"])}else if(\"ml-tensor\"===f&&m>0){const e=i.jsepEnsureTensor;if(!e)throw new Error('preferredLocation \"ml-tensor\" is not supported without using WebNN.');if(void 0===Qe(s,m)||!et(n))throw new Error(`Unsupported data type: ${n}`);const r=await e(u,s,h,!1);l=!0,P.push([n,h,{mlTensor:r,download:i.jsepCreateMLTensorDownloader(u,n),dispose:()=>{i.jsepReleaseTensorId(u),i._OrtReleaseTensor(t)}},\"ml-tensor\"])}else{const e=new(Ye(n))(m);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(i.HEAPU8.subarray(u,u+e.byteLength)),P.push([n,h,e,\"cpu\"])}}finally{i.stackRestore(s),\"string\"===n&&u&&i._free(u),l||i._OrtReleaseTensor(t)}}return c&&!p&&(i._OrtClearBoundOutputs(c.handle),Yu.set(e,[l,u,d,c,p,!1])),P}finally{i.stackRestore(v),w.forEach((e=>i._OrtReleaseTensor(e))),y.forEach((e=>i._OrtReleaseTensor(e))),b.forEach((e=>i._free(e))),0!==g&&i._OrtReleaseRunOptions(g),_.forEach((e=>i._free(e)))}},ad=e=>{const t=De(),n=Yu.get(e);if(!n)throw new Error(\"invalid session id\");const r=n[0],a=t._OrtEndProfiling(r);0===a&&Ve(\"Can't get an profile file name.\"),t._OrtFree(a)},sd=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&\"buffer\"in e&&t.push(e.buffer)}return t}})),Pd=j((()=>{pe(),Sd(),Fl(),El(),id=()=>!!p.wasm.proxy&&typeof document<\"u\",ld=!1,ud=!1,dd=!1,hd=new Map,md=(e,t)=>{const n=hd.get(e);n?n.push(t):hd.set(e,[t])},fd=()=>{if(ld||!ud||dd||!od)throw new Error(\"worker not ready\")},gd=e=>{switch(e.data.type){case\"init-wasm\":ld=!1,e.data.err?(dd=!0,pd[1](e.data.err)):(ud=!0,pd[0]()),cd&&(URL.revokeObjectURL(cd),cd=void 0);break;case\"init-ep\":case\"copy-from\":case\"create\":case\"release\":case\"run\":case\"end-profiling\":{const t=hd.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},_d=async()=>{if(!ud){if(ld)throw new Error(\"multiple calls to 'initWasm()' detected.\");if(dd)throw new Error(\"previous call to 'initWasm()' failed.\");if(ld=!0,id())return new Promise(((e,t)=>{od?.terminate(),Se().then((([n,r])=>{try{(od=r).onerror=e=>t(e),od.onmessage=gd,pd=[e,t];const a={type:\"init-wasm\",in:p};od.postMessage(a),cd=n}catch(e){t(e)}}),t)}));try{await Le(p.wasm),await Ku(p),ud=!0}catch(e){throw dd=!0,e}finally{ld=!1}}},wd=async e=>{if(id())return fd(),new Promise(((t,n)=>{md(\"init-ep\",[t,n]);const r={type:\"init-ep\",in:{epName:e,env:p}};od.postMessage(r)}));await Qu(p,e)},yd=async e=>id()?(fd(),new Promise(((t,n)=>{md(\"copy-from\",[t,n]);const r={type:\"copy-from\",in:{buffer:e}};od.postMessage(r,[e.buffer])}))):Ju(e),bd=async(e,t)=>{if(id()){if(t?.preferredOutputLocation)throw new Error('session option \"preferredOutputLocation\" is not supported for proxy.');return fd(),new Promise(((n,r)=>{md(\"create\",[n,r]);const a={type:\"create\",in:{model:e,options:{...t}}},s=[];e instanceof Uint8Array&&s.push(e.buffer),od.postMessage(a,s)}))}return ed(e,t)},vd=async e=>{if(id())return fd(),new Promise(((t,n)=>{md(\"release\",[t,n]);const r={type:\"release\",in:e};od.postMessage(r)}));td(e)},xd=async(e,t,n,r,a,s)=>{if(id()){if(n.some((e=>\"cpu\"!==e[3])))throw new Error(\"input tensor on GPU is not supported for proxy.\");if(a.some((e=>e)))throw new Error(\"pre-allocated output tensor is not supported for proxy.\");return fd(),new Promise(((a,i)=>{md(\"run\",[a,i]);const o=n,l={type:\"run\",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:s}};od.postMessage(l,sd(o))}))}return rd(e,t,n,r,a,s)},Md=async e=>{if(id())return fd(),new Promise(((t,n)=>{md(\"end-profiling\",[t,n]);const r={type:\"end-profiling\",in:e};od.postMessage(r)}));ad(e)}})),Ed=j((()=>{pe(),Pd(),Ol(),he(),Bl(),Td=(e,t)=>{switch(e.location){case\"cpu\":return[e.type,e.dims,e.data,\"cpu\"];case\"gpu-buffer\":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},\"gpu-buffer\"];case\"ml-tensor\":return[e.type,e.dims,{mlTensor:e.mlTensor},\"ml-tensor\"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},kd=e=>{switch(e[3]){case\"cpu\":return new S(e[0],e[2],e[1]);case\"gpu-buffer\":{const t=e[0];if(!Je(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);const{gpuBuffer:n,download:r,dispose:a}=e[2];return S.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:a})}case\"ml-tensor\":{const t=e[0];if(!et(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);const{mlTensor:n,download:r,dispose:a}=e[2];return S.fromMLTensor(n,{dataType:t,dims:e[1],download:r,dispose:a})}default:throw new Error(`invalid data location: ${e[3]}`)}},$d=class{async fetchModelAndCopyToWasmMemory(e){return yd(await nt(e))}async loadModel(e,t){let n;F(),n=\"string\"==typeof e?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await bd(n,t),A()}async dispose(){return vd(this.sessionId)}async run(e,t,n){F();const r=[],a=[];Object.entries(e).forEach((e=>{const t=e[0],n=e[1],s=this.inputNames.indexOf(t);if(-1===s)throw new Error(`invalid input '${t}'`);r.push(n),a.push(s)}));const s=[],i=[];Object.entries(t).forEach((e=>{const t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);s.push(n),i.push(r)}));const o=r.map(((e,t)=>Td(e,(()=>`input \"${this.inputNames[a[t]]}\"`)))),l=s.map(((e,t)=>e?Td(e,(()=>`output \"${this.outputNames[i[t]]}\"`)):null)),u=await xd(this.sessionId,a,o,i,l,n),d={};for(let e=0;e<u.length;e++)d[this.outputNames[i[e]]]=s[e]??kd(u[e]);return A(),d}startProfiling(){}endProfiling(){Md(this.sessionId)}}})),Fd={};q(Fd,{OnnxruntimeWebAssemblyBackend:()=>Id,initializeFlags:()=>Ad,wasmBackend:()=>zd});let Ad,Id,zd,Od=j((()=>{pe(),Pd(),Ed(),El(),Ad=()=>{if((\"number\"!=typeof p.wasm.initTimeout||p.wasm.initTimeout<0)&&(p.wasm.initTimeout=0),!1===p.wasm.simd&&console.warn('Deprecated property \"env.wasm.simd\" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),\"boolean\"!=typeof p.wasm.proxy&&(p.wasm.proxy=!1),\"boolean\"!=typeof p.wasm.trace&&(p.wasm.trace=!1),\"number\"!=typeof p.wasm.numThreads||!Number.isInteger(p.wasm.numThreads)||p.wasm.numThreads<=0)if(typeof self<\"u\"&&!self.crossOriginIsolated)p.wasm.numThreads=1;else{const e=typeof navigator>\"u\"?V(\"node:os\").cpus().length:navigator.hardwareConcurrency;p.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},zd=new(Id=class{async init(e){Ad(),await _d(),await wd(e)}async createInferenceSessionHandler(e,t){const n=new $d;return await n.loadModel(e,t),Promise.resolve(n)}})}));pe(),pe(),pe();var Bd=ce;{const e=(Od(),G(Fd)).wasmBackend;i(\"webgpu\",e,5),i(\"webnn\",e,5),i(\"cpu\",e,10),i(\"wasm\",e,10)}Object.defineProperty(p.versions,\"web\",{value:\"1.21.0-dev.20241024-d9ca84ef96\",enumerable:!0})}\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */,\"./src/backends/onnx.js\":\n/*!******************************!*\\\n  !*** ./src/backends/onnx.js ***!\n  \\******************************/(e,t,n)=>{let r;n.r(t),n.d(t,{Tensor:()=>o.Tensor,createInferenceSession:()=>g,deviceToExecutionProviders:()=>m,isONNXProxy:()=>y,isONNXTensor:()=>_});var a=n(/*! ../env.js */\"./src/env.js\"),s=n(/*! onnxruntime-node */\"?2ce3\"),i=n(/*! #onnxruntime-webgpu */\"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs\"),o=n(/*! onnxruntime-common */\"./node_modules/onnxruntime-common/dist/esm/index.js\");const l=Object.freeze({auto:null,gpu:null,cpu:\"cpu\",wasm:\"wasm\",webgpu:\"webgpu\",cuda:\"cuda\",dml:\"dml\",webnn:{name:\"webnn\",deviceType:\"cpu\"},\"webnn-npu\":{name:\"webnn\",deviceType:\"npu\"},\"webnn-gpu\":{name:\"webnn\",deviceType:\"gpu\"},\"webnn-cpu\":{name:\"webnn\",deviceType:\"cpu\"}}),u=[];let d,c;const p=Symbol.for(\"onnxruntime\");if(p in globalThis)c=globalThis[p];else if(a.apis.IS_NODE_ENV){switch(c=s??(r||(r=n.t(s,2))),process.platform){case\"win32\":u.push(\"dml\");break;case\"linux\":\"x64\"===process.arch&&u.push(\"cuda\")}u.push(\"cpu\"),d=[\"cpu\"]}else c=i,a.apis.IS_WEBNN_AVAILABLE&&u.push(\"webnn-npu\",\"webnn-gpu\",\"webnn-cpu\",\"webnn\"),a.apis.IS_WEBGPU_AVAILABLE&&u.push(\"webgpu\"),u.push(\"wasm\"),d=[\"wasm\"];const h=c.InferenceSession;function m(e=null){if(!e)return d;switch(e){case\"auto\":return u;case\"gpu\":return u.filter((e=>[\"webgpu\",\"cuda\",\"dml\",\"webnn-gpu\"].includes(e)))}if(u.includes(e))return[l[e]??e];throw new Error(`Unsupported device: \"${e}\". Should be one of: ${u.join(\", \")}.`)}let f=null;async function g(e,t,n){f&&await f;const r=h.create(e,t);f??=r;const a=await r;return a.config=n,a}function _(e){return e instanceof c.Tensor}const w=c?.env;function y(){return w?.wasm?.proxy}w?.wasm&&(w.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${a.env.version}/dist/`,w.wasm.proxy=!1,\"undefined\"!=typeof crossOriginIsolated&&crossOriginIsolated||(w.wasm.numThreads=1)),w?.webgpu&&(w.webgpu.powerPreference=\"high-performance\"),a.env.backends.onnx=w},\"./src/configs.js\":\n/*!************************!*\\\n  !*** ./src/configs.js ***!\n  \\************************/(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>o,getKeyValueShapes:()=>i});const r=n(/*! ./utils/core.js */\"./src/utils/core.js\"),a=n(/*! ./utils/hub.js */\"./src/utils/hub.js\");function s(e){const t={};let n={};switch(e.model_type){case\"llava\":case\"paligemma\":case\"florence2\":n=s(e.text_config);break;case\"moondream1\":n=s(e.phi_config);break;case\"musicgen\":n=s(e.decoder);break;case\"gpt2\":case\"gptj\":case\"jais\":case\"codegen\":case\"gpt_bigcode\":t.num_heads=\"n_head\",t.num_layers=\"n_layer\",t.hidden_size=\"n_embd\";break;case\"gpt_neox\":case\"stablelm\":case\"opt\":case\"phi\":case\"phi3\":case\"falcon\":t.num_heads=\"num_attention_heads\",t.num_layers=\"num_hidden_layers\",t.hidden_size=\"hidden_size\";break;case\"llama\":case\"olmo\":case\"mobilellm\":case\"granite\":case\"cohere\":case\"mistral\":case\"starcoder2\":case\"qwen2\":t.num_heads=\"num_key_value_heads\",t.num_layers=\"num_hidden_layers\",t.hidden_size=\"hidden_size\",t.num_attention_heads=\"num_attention_heads\";break;case\"gemma\":case\"gemma2\":t.num_heads=\"num_key_value_heads\",t.num_layers=\"num_hidden_layers\",t.dim_kv=\"head_dim\";break;case\"openelm\":t.num_heads=\"num_kv_heads\",t.num_layers=\"num_transformer_layers\",t.dim_kv=\"head_dim\";break;case\"gpt_neo\":case\"donut-swin\":t.num_heads=\"num_heads\",t.num_layers=\"num_layers\",t.hidden_size=\"hidden_size\";break;case\"bloom\":t.num_heads=\"n_head\",t.num_layers=\"n_layer\",t.hidden_size=\"hidden_size\";break;case\"mpt\":t.num_heads=\"n_heads\",t.num_layers=\"n_layers\",t.hidden_size=\"d_model\";break;case\"t5\":case\"mt5\":case\"longt5\":t.num_decoder_layers=\"num_decoder_layers\",t.num_decoder_heads=\"num_heads\",t.decoder_dim_kv=\"d_kv\",t.num_encoder_layers=\"num_layers\",t.num_encoder_heads=\"num_heads\",t.encoder_dim_kv=\"d_kv\";break;case\"bart\":case\"mbart\":case\"marian\":case\"whisper\":case\"m2m_100\":case\"blenderbot\":case\"blenderbot-small\":case\"florence2_language\":t.num_decoder_layers=\"decoder_layers\",t.num_decoder_heads=\"decoder_attention_heads\",t.decoder_hidden_size=\"d_model\",t.num_encoder_layers=\"encoder_layers\",t.num_encoder_heads=\"encoder_attention_heads\",t.encoder_hidden_size=\"d_model\";break;case\"speecht5\":t.num_decoder_layers=\"decoder_layers\",t.num_decoder_heads=\"decoder_attention_heads\",t.decoder_hidden_size=\"hidden_size\",t.num_encoder_layers=\"encoder_layers\",t.num_encoder_heads=\"encoder_attention_heads\",t.encoder_hidden_size=\"hidden_size\";break;case\"trocr\":t.num_encoder_layers=t.num_decoder_layers=\"decoder_layers\",t.num_encoder_heads=t.num_decoder_heads=\"decoder_attention_heads\",t.encoder_hidden_size=t.decoder_hidden_size=\"d_model\";break;case\"musicgen_decoder\":t.num_encoder_layers=t.num_decoder_layers=\"num_hidden_layers\",t.num_encoder_heads=t.num_decoder_heads=\"num_attention_heads\",t.encoder_hidden_size=t.decoder_hidden_size=\"hidden_size\";break;case\"vision-encoder-decoder\":const a=s(e.decoder),i=\"num_decoder_layers\"in a,o=(0,r.pick)(e,[\"model_type\",\"is_encoder_decoder\"]);return i?(o.num_decoder_layers=a.num_decoder_layers,o.num_decoder_heads=a.num_decoder_heads,o.decoder_hidden_size=a.decoder_hidden_size,o.num_encoder_layers=a.num_encoder_layers,o.num_encoder_heads=a.num_encoder_heads,o.encoder_hidden_size=a.encoder_hidden_size):(o.num_layers=a.num_layers,o.num_heads=a.num_heads,o.hidden_size=a.hidden_size),o}const a={...n,...(0,r.pick)(e,[\"model_type\",\"multi_query\",\"is_encoder_decoder\"])};for(const n in t)a[n]=e[t[n]];return a}function i(e,{prefix:t=\"past_key_values\"}={}){const n={},r=e.normalized_config;if(r.is_encoder_decoder&&\"num_encoder_heads\"in r&&\"num_decoder_heads\"in r){const e=r.encoder_dim_kv??r.encoder_hidden_size/r.num_encoder_heads,a=r.decoder_dim_kv??r.decoder_hidden_size/r.num_decoder_heads,s=[1,r.num_encoder_heads,0,e],i=[1,r.num_decoder_heads,0,a];for(let e=0;e<r.num_decoder_layers;++e)n[`${t}.${e}.encoder.key`]=s,n[`${t}.${e}.encoder.value`]=s,n[`${t}.${e}.decoder.key`]=i,n[`${t}.${e}.decoder.value`]=i}else{const e=r.num_heads,a=r.num_layers,s=r.dim_kv??r.hidden_size/(r.num_attention_heads??e);if(\"falcon\"===r.model_type){const r=[1*e,0,s];for(let e=0;e<a;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}else if(r.multi_query){const r=[1*e,0,2*s];for(let e=0;e<a;++e)n[`${t}.${e}.key_value`]=r}else if(\"bloom\"===r.model_type){const r=[1*e,s,0],i=[1*e,0,s];for(let e=0;e<a;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=i}else if(\"openelm\"===r.model_type)for(let r=0;r<a;++r){const a=[1,e[r],0,s];n[`${t}.${r}.key`]=a,n[`${t}.${r}.value`]=a}else{const r=[1,e,0,s];for(let e=0;e<a;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}}return n}class o{model_type=null;is_encoder_decoder=!1;max_position_embeddings;\"transformers.js_config\";constructor(e){Object.assign(this,e),this.normalized_config=s(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i=\"main\"}={}){!n||n instanceof o||(n=new o(n));const l=n??await async function(e,t){return await(0,a.getModelJSON)(e,\"config.json\",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i});return new this(l)}}class l{static async from_pretrained(...e){return o.from_pretrained(...e)}}},\"./src/env.js\":\n/*!********************!*\\\n  !*** ./src/env.js ***!\n  \\********************/(e,t,n)=>{n.r(t),n.d(t,{apis:()=>f,env:()=>b});const r=n(/*! fs */\"?569f\"),a=n(/*! path */\"?3f59\"),s=n(/*! url */\"?154a\");const i=\"undefined\"!=typeof self,o=i&&\"DedicatedWorkerGlobalScope\"===self.constructor.name,l=i&&\"caches\"in self,u=\"undefined\"!=typeof navigator&&\"gpu\"in navigator,d=\"undefined\"!=typeof navigator&&\"ml\"in navigator,c=\"undefined\"!=typeof process,p=c&&\"node\"===process?.release?.name,h=!v(r),m=!v(a),f=Object.freeze({IS_BROWSER_ENV:i,IS_WEBWORKER_ENV:o,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:u,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:c,IS_NODE_ENV:p,IS_FS_AVAILABLE:h,IS_PATH_AVAILABLE:m}),g=h&&m;let _=\"./\";if(g){const e=Object(import.meta).url;e?_=a.dirname(a.dirname(s.fileURLToPath(e))):\"undefined\"!=typeof __dirname&&(_=a.dirname(__dirname))}const w=g?a.join(_,\"/.cache/\"):null,y=\"/models/\",b={version:\"3.0.2\",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:\"https://huggingface.co/\",remotePathTemplate:\"{model}/resolve/{revision}/\",allowLocalModels:!i,localModelPath:g?a.join(_,y):y,useFS:h,useBrowserCache:l,useFSCache:h,cacheDir:w,useCustomCache:!1,customCache:null};function v(e){return 0===Object.keys(e).length}},\"./src/generation/configuration_utils.js\":\n/*!***********************************************!*\\\n  !*** ./src/generation/configuration_utils.js ***!\n  \\***********************************************/(e,t,n)=>{n.r(t),n.d(t,{GenerationConfig:()=>a});const r=n(/*! ../utils/core.js */\"./src/utils/core.js\");class a{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},\"./src/generation/logits_process.js\":\n/*!******************************************!*\\\n  !*** ./src/generation/logits_process.js ***!\n  \\******************************************/(e,t,n)=>{n.r(t),n.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>_,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,LogitsProcessor:()=>s,LogitsProcessorList:()=>o,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>m,MinNewTokensLengthLogitsProcessor:()=>f,NoBadWordsLogitsProcessor:()=>g,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>h,SuppressTokensAtBeginLogitsProcessor:()=>d,TemperatureLogitsWarper:()=>w,TopKLogitsWarper:()=>b,TopPLogitsWarper:()=>y,WhisperTimeStampLogitsProcessor:()=>c});const r=n(/*! ../utils/generic.js */\"./src/utils/generic.js\"),a=(n(/*! ../utils/tensor.js */\"./src/utils/tensor.js\"),n(/*! ../utils/maths.js */\"./src/utils/maths.js\"));class s extends r.Callable{_call(e,t){throw Error(\"`_call` should be implemented in a subclass\")}}class i extends r.Callable{_call(e,t){throw Error(\"`_call` should be implemented in a subclass\")}}class o extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const t of this.processors)n=t(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class l extends s{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class u extends s{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class d extends s{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class c extends s{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const s=e[n].slice(this.begin_index),i=s.length>=1&&s[s.length-1]>=this.timestamp_begin,o=s.length<2||s[s.length-2]>=this.timestamp_begin;if(i&&(o?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,a.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,a.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class p extends s{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t.map(Number))}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),a=r.get(n)??[];a.push(e[e.length-1]),r.set(n,a)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,a=this.calcBannedNgramTokens(e[n]);for(const e of a)r[e]=-1/0}return t}}class h extends s{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;for(const t of e[n]){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class m extends s{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class f extends s{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n){if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class g extends s{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,a=e[n];for(const e of this.bad_words_ids){let t=!0;for(let n=1;n<=e.length-1&&e.length<a.length;++n)if(e.at(-n-1)!=a.at(-n)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class _ extends s{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),a=t.slice([n,t.dims[0]],null);for(let e=0;e<a.data.length;++e)a.data[e]+=(r.data[e]-a.data[e])*this.guidance_scale;return a}}class w extends i{constructor(e){if(super(),\"number\"!=typeof e||e<=0){let t=`\\`temperature\\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=\" If you're looking for greedy decoding strategies, set `do_sample=false`.\")}this.temperature=e}_call(e,t){const n=t.data;for(let e=0;e<n.length;++e)n[e]/=this.temperature;return t}}class y extends i{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\\`top_p\\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\\`min_tokens_to_keep\\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class b extends i{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\\`top_k\\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}},\"./src/generation/logits_sampler.js\":\n/*!******************************************!*\\\n  !*** ./src/generation/logits_sampler.js ***!\n  \\******************************************/(e,t,n)=>{n.r(t),n.d(t,{LogitsSampler:()=>i});const r=n(/*! ../utils/generic.js */\"./src/utils/generic.js\"),a=n(/*! ../utils/tensor.js */\"./src/utils/tensor.js\"),s=n(/*! ../utils/maths.js */\"./src/utils/maths.js\");n(/*! ../generation/configuration_utils.js */\"./src/generation/configuration_utils.js\");class i extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error(\"sample should be implemented in subclasses.\")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{const e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let n=0;n<e.length;++n)t+=e[n];let n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new u(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new o(e)}}class o extends i{async sample(e){const t=(0,s.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends i{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,a.topk)(e,t),i=(0,s.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(i);return[r.data[e],Math.log(i[e])]}))}}class u extends i{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,a.topk)(e,t),i=(0,s.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(i[t])]))}}},\"./src/generation/stopping_criteria.js\":\n/*!*********************************************!*\\\n  !*** ./src/generation/stopping_criteria.js ***!\n  \\*********************************************/(e,t,n)=>{n.r(t),n.d(t,{EosTokenCriteria:()=>o,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>a,StoppingCriteriaList:()=>s});const r=n(/*! ../utils/generic.js */\"./src/utils/generic.js\");class a extends r.Callable{_call(e,t){throw Error(\"StoppingCriteria needs to be subclassed\")}}class s extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof s?e=e.criteria:e instanceof a&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const a=r(e,t);for(let e=0;e<n.length;++e)n[e]||=a[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class i extends a{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class o extends a{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class l extends a{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},\"./src/generation/streamers.js\":\n/*!*************************************!*\\\n  !*** ./src/generation/streamers.js ***!\n  \\*************************************/(e,t,n)=>{n.r(t),n.d(t,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>u});const r=n(/*! ../utils/core.js */\"./src/utils/core.js\"),a=n(/*! ../tokenizers.js */\"./src/tokenizers.js\"),s=n(/*! ../env.js */\"./src/env.js\");class i{put(e){throw Error(\"Not implemented\")}end(){throw Error(\"Not implemented\")}}const o=s.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends i{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,decode_kwargs:a={},...s}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=n??o,this.token_callback_function=r,this.decode_kwargs={...a,...s},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error(\"TextStreamer only supports batch size of 1\");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const t=e[0];this.token_callback_function?.(t),this.token_cache=(0,r.mergeArrays)(this.token_cache,t);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let s;n.endsWith(\"\\n\")?(s=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&(0,a.is_chinese_char)(n.charCodeAt(n.length-1))?(s=n.slice(this.print_len),this.print_len+=s.length):(s=n.slice(this.print_len,n.lastIndexOf(\" \")+1),this.print_len+=s.length),this.on_finalized_text(s,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e=\"\";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===o&&s.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(\"\\n\")}}class u extends l{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,on_chunk_start:a=null,on_chunk_end:s=null,on_finalize:i=null,time_precision:o=.02,skip_special_tokens:l=!0,decode_kwargs:u={}}={}){super(e,{skip_prompt:t,callback_function:n,token_callback_function:r,decode_kwargs:{skip_special_tokens:l,...u}}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=a,this.on_chunk_end=s,this.on_finalize=i,this.time_precision=o,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error(\"WhisperTextStreamer only supports batch size of 1\");const t=e[0];if(1===t.length){const n=Number(t[0])-this.timestamp_begin;if(n>=0){const t=n*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(t):this.on_chunk_start?.(t),this.waiting_for_timestamp=!this.waiting_for_timestamp,e=[[]]}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},\"./src/models.js\":\n/*!***********************!*\\\n  !*** ./src/models.js ***!\n  \\***********************/(e,t,n)=>{n.r(t),n.d(t,{ASTForAudioClassification:()=>an,ASTModel:()=>rn,ASTPreTrainedModel:()=>nn,AlbertForMaskedLM:()=>ht,AlbertForQuestionAnswering:()=>pt,AlbertForSequenceClassification:()=>ct,AlbertModel:()=>dt,AlbertPreTrainedModel:()=>ut,AutoModel:()=>Go,AutoModelForAudioClassification:()=>ul,AutoModelForAudioFrameClassification:()=>cl,AutoModelForCTC:()=>ll,AutoModelForCausalLM:()=>Yo,AutoModelForDepthEstimation:()=>fl,AutoModelForDocumentQuestionAnswering:()=>pl,AutoModelForImageClassification:()=>tl,AutoModelForImageFeatureExtraction:()=>_l,AutoModelForImageMatting:()=>hl,AutoModelForImageSegmentation:()=>nl,AutoModelForImageToImage:()=>ml,AutoModelForMaskGeneration:()=>ol,AutoModelForMaskedLM:()=>Zo,AutoModelForNormalEstimation:()=>gl,AutoModelForObjectDetection:()=>sl,AutoModelForQuestionAnswering:()=>Jo,AutoModelForSemanticSegmentation:()=>rl,AutoModelForSeq2SeqLM:()=>Ho,AutoModelForSequenceClassification:()=>Uo,AutoModelForSpeechSeq2Seq:()=>Xo,AutoModelForTextToSpectrogram:()=>Ko,AutoModelForTextToWaveform:()=>Qo,AutoModelForTokenClassification:()=>Wo,AutoModelForUniversalSegmentation:()=>al,AutoModelForVision2Seq:()=>el,AutoModelForXVector:()=>dl,AutoModelForZeroShotObjectDetection:()=>il,BartForConditionalGeneration:()=>kt,BartForSequenceClassification:()=>$t,BartModel:()=>Tt,BartPretrainedModel:()=>Mt,BaseModelOutput:()=>U,BeitForImageClassification:()=>_a,BeitModel:()=>ga,BeitPreTrainedModel:()=>fa,BertForMaskedLM:()=>X,BertForQuestionAnswering:()=>Y,BertForSequenceClassification:()=>K,BertForTokenClassification:()=>Q,BertModel:()=>H,BertPreTrainedModel:()=>W,BlenderbotForConditionalGeneration:()=>zt,BlenderbotModel:()=>It,BlenderbotPreTrainedModel:()=>At,BlenderbotSmallForConditionalGeneration:()=>Lt,BlenderbotSmallModel:()=>Bt,BlenderbotSmallPreTrainedModel:()=>Ot,BloomForCausalLM:()=>Ar,BloomModel:()=>Fr,BloomPreTrainedModel:()=>Er,CLIPModel:()=>gn,CLIPPreTrainedModel:()=>fn,CLIPSegForImageSegmentation:()=>Pn,CLIPSegModel:()=>Sn,CLIPSegPreTrainedModel:()=>Cn,CLIPTextModel:()=>_n,CLIPTextModelWithProjection:()=>wn,CLIPVisionModel:()=>yn,CLIPVisionModelWithProjection:()=>bn,CamembertForMaskedLM:()=>be,CamembertForQuestionAnswering:()=>Me,CamembertForSequenceClassification:()=>ve,CamembertForTokenClassification:()=>xe,CamembertModel:()=>ye,CamembertPreTrainedModel:()=>we,CausalLMOutput:()=>Tl,CausalLMOutputWithPast:()=>kl,ChineseCLIPModel:()=>$n,ChineseCLIPPreTrainedModel:()=>kn,ClapAudioModelWithProjection:()=>Ai,ClapModel:()=>Ei,ClapPreTrainedModel:()=>Pi,ClapTextModelWithProjection:()=>Fi,CodeGenForCausalLM:()=>Qn,CodeGenModel:()=>Kn,CodeGenPreTrainedModel:()=>Xn,CohereForCausalLM:()=>cr,CohereModel:()=>dr,CoherePreTrainedModel:()=>ur,ConvBertForMaskedLM:()=>le,ConvBertForQuestionAnswering:()=>ce,ConvBertForSequenceClassification:()=>ue,ConvBertForTokenClassification:()=>de,ConvBertModel:()=>oe,ConvBertPreTrainedModel:()=>ie,ConvNextForImageClassification:()=>ms,ConvNextModel:()=>hs,ConvNextPreTrainedModel:()=>ps,ConvNextV2ForImageClassification:()=>_s,ConvNextV2Model:()=>gs,ConvNextV2PreTrainedModel:()=>fs,DPTForDepthEstimation:()=>Ka,DPTModel:()=>Xa,DPTPreTrainedModel:()=>Ha,DebertaForMaskedLM:()=>$e,DebertaForQuestionAnswering:()=>Pe,DebertaForSequenceClassification:()=>Ce,DebertaForTokenClassification:()=>Se,DebertaModel:()=>ke,DebertaPreTrainedModel:()=>Te,DebertaV2ForMaskedLM:()=>Ae,DebertaV2ForQuestionAnswering:()=>Oe,DebertaV2ForSequenceClassification:()=>Ie,DebertaV2ForTokenClassification:()=>ze,DebertaV2Model:()=>Fe,DebertaV2PreTrainedModel:()=>Ee,DecisionTransformerModel:()=>lo,DecisionTransformerPreTrainedModel:()=>oo,DeiTForImageClassification:()=>za,DeiTModel:()=>Ia,DeiTPreTrainedModel:()=>Aa,DepthAnythingForDepthEstimation:()=>Ya,DepthAnythingPreTrainedModel:()=>Qa,DepthProForDepthEstimation:()=>rs,DepthProPreTrainedModel:()=>ns,DetrForObjectDetection:()=>ba,DetrForSegmentation:()=>va,DetrModel:()=>ya,DetrObjectDetectionOutput:()=>xa,DetrPreTrainedModel:()=>wa,DetrSegmentationOutput:()=>Ma,Dinov2ForImageClassification:()=>bs,Dinov2Model:()=>ys,Dinov2PreTrainedModel:()=>ws,DistilBertForMaskedLM:()=>Ve,DistilBertForQuestionAnswering:()=>Ne,DistilBertForSequenceClassification:()=>De,DistilBertForTokenClassification:()=>Re,DistilBertModel:()=>Le,DistilBertPreTrainedModel:()=>Be,DonutSwinModel:()=>cs,DonutSwinPreTrainedModel:()=>ds,EfficientNetForImageClassification:()=>Gi,EfficientNetModel:()=>qi,EfficientNetPreTrainedModel:()=>ji,ElectraForMaskedLM:()=>me,ElectraForQuestionAnswering:()=>_e,ElectraForSequenceClassification:()=>fe,ElectraForTokenClassification:()=>ge,ElectraModel:()=>he,ElectraPreTrainedModel:()=>pe,EsmForMaskedLM:()=>Ge,EsmForSequenceClassification:()=>Ue,EsmForTokenClassification:()=>We,EsmModel:()=>qe,EsmPreTrainedModel:()=>je,FalconForCausalLM:()=>Si,FalconModel:()=>Ci,FalconPreTrainedModel:()=>$i,FastViTForImageClassification:()=>ea,FastViTModel:()=>Jr,FastViTPreTrainedModel:()=>Zr,Florence2ForConditionalGeneration:()=>mn,Florence2PreTrainedModel:()=>hn,GLPNForDepthEstimation:()=>us,GLPNModel:()=>ls,GLPNPreTrainedModel:()=>os,GPT2LMHeadModel:()=>An,GPT2Model:()=>Fn,GPT2PreTrainedModel:()=>En,GPTBigCodeForCausalLM:()=>Hn,GPTBigCodeModel:()=>Wn,GPTBigCodePreTrainedModel:()=>Un,GPTJForCausalLM:()=>Gn,GPTJModel:()=>qn,GPTJPreTrainedModel:()=>jn,GPTNeoForCausalLM:()=>Dn,GPTNeoModel:()=>Ln,GPTNeoPreTrainedModel:()=>Bn,GPTNeoXForCausalLM:()=>Vn,GPTNeoXModel:()=>Nn,GPTNeoXPreTrainedModel:()=>Rn,Gemma2ForCausalLM:()=>_r,Gemma2Model:()=>gr,Gemma2PreTrainedModel:()=>fr,GemmaForCausalLM:()=>mr,GemmaModel:()=>hr,GemmaPreTrainedModel:()=>pr,GraniteForCausalLM:()=>lr,GraniteModel:()=>or,GranitePreTrainedModel:()=>ir,GroupViTModel:()=>Yr,GroupViTPreTrainedModel:()=>Qr,HieraForImageClassification:()=>La,HieraModel:()=>Ba,HieraPreTrainedModel:()=>Oa,HubertForCTC:()=>si,HubertForSequenceClassification:()=>ii,HubertModel:()=>ai,HubertPreTrainedModel:()=>ri,ImageMattingOutput:()=>$l,JAISLMHeadModel:()=>On,JAISModel:()=>zn,JAISPreTrainedModel:()=>In,LlamaForCausalLM:()=>Jn,LlamaModel:()=>Zn,LlamaPreTrainedModel:()=>Yn,LlavaForConditionalGeneration:()=>cn,LlavaPreTrainedModel:()=>dn,LongT5ForConditionalGeneration:()=>yt,LongT5Model:()=>wt,LongT5PreTrainedModel:()=>_t,M2M100ForConditionalGeneration:()=>Is,M2M100Model:()=>As,M2M100PreTrainedModel:()=>Fs,MBartForCausalLM:()=>Ft,MBartForConditionalGeneration:()=>Pt,MBartForSequenceClassification:()=>Et,MBartModel:()=>St,MBartPreTrainedModel:()=>Ct,MPNetForMaskedLM:()=>et,MPNetForQuestionAnswering:()=>rt,MPNetForSequenceClassification:()=>tt,MPNetForTokenClassification:()=>nt,MPNetModel:()=>Je,MPNetPreTrainedModel:()=>Ze,MT5ForConditionalGeneration:()=>xt,MT5Model:()=>vt,MT5PreTrainedModel:()=>bt,MarianMTModel:()=>Es,MarianModel:()=>Ps,MarianPreTrainedModel:()=>Ss,MaskFormerForInstanceSegmentation:()=>is,MaskFormerModel:()=>ss,MaskFormerPreTrainedModel:()=>as,MaskedLMOutput:()=>xl,MistralForCausalLM:()=>xi,MistralModel:()=>vi,MistralPreTrainedModel:()=>bi,MobileBertForMaskedLM:()=>Ke,MobileBertForQuestionAnswering:()=>Ye,MobileBertForSequenceClassification:()=>Qe,MobileBertModel:()=>Xe,MobileBertPreTrainedModel:()=>He,MobileLLMForCausalLM:()=>nr,MobileLLMModel:()=>tr,MobileLLMPreTrainedModel:()=>er,MobileNetV1ForImageClassification:()=>Yi,MobileNetV1Model:()=>Qi,MobileNetV1PreTrainedModel:()=>Ki,MobileNetV2ForImageClassification:()=>eo,MobileNetV2Model:()=>Ji,MobileNetV2PreTrainedModel:()=>Zi,MobileNetV3ForImageClassification:()=>ro,MobileNetV3Model:()=>no,MobileNetV3PreTrainedModel:()=>to,MobileNetV4ForImageClassification:()=>io,MobileNetV4Model:()=>so,MobileNetV4PreTrainedModel:()=>ao,MobileViTForImageClassification:()=>sa,MobileViTModel:()=>aa,MobileViTPreTrainedModel:()=>ra,MobileViTV2ForImageClassification:()=>la,MobileViTV2Model:()=>oa,MobileViTV2PreTrainedModel:()=>ia,ModelOutput:()=>G,Moondream1ForConditionalGeneration:()=>pn,MptForCausalLM:()=>Or,MptModel:()=>zr,MptPreTrainedModel:()=>Ir,MusicgenForCausalLM:()=>Hi,MusicgenForConditionalGeneration:()=>Xi,MusicgenModel:()=>Wi,MusicgenPreTrainedModel:()=>Ui,NomicBertModel:()=>J,NomicBertPreTrainedModel:()=>Z,OPTForCausalLM:()=>Dr,OPTModel:()=>Lr,OPTPreTrainedModel:()=>Br,OlmoForCausalLM:()=>sr,OlmoModel:()=>ar,OlmoPreTrainedModel:()=>rr,OpenELMForCausalLM:()=>br,OpenELMModel:()=>yr,OpenELMPreTrainedModel:()=>wr,OwlViTForObjectDetection:()=>ca,OwlViTModel:()=>da,OwlViTPreTrainedModel:()=>ua,Owlv2ForObjectDetection:()=>ma,Owlv2Model:()=>ha,Owlv2PreTrainedModel:()=>pa,Phi3ForCausalLM:()=>Pr,Phi3Model:()=>Sr,Phi3PreTrainedModel:()=>Cr,PhiForCausalLM:()=>$r,PhiModel:()=>kr,PhiPreTrainedModel:()=>Tr,PreTrainedModel:()=>q,PretrainedMixin:()=>uo,PvtForImageClassification:()=>Gr,PvtModel:()=>qr,PvtPreTrainedModel:()=>jr,PyAnnoteForAudioFrameClassification:()=>Vs,PyAnnoteModel:()=>Ns,PyAnnotePreTrainedModel:()=>Rs,QuestionAnsweringModelOutput:()=>Ml,Qwen2ForCausalLM:()=>Mr,Qwen2Model:()=>xr,Qwen2PreTrainedModel:()=>vr,RTDetrForObjectDetection:()=>$a,RTDetrModel:()=>ka,RTDetrObjectDetectionOutput:()=>Ca,RTDetrPreTrainedModel:()=>Ta,ResNetForImageClassification:()=>Na,ResNetModel:()=>Ra,ResNetPreTrainedModel:()=>Da,RoFormerForMaskedLM:()=>ne,RoFormerForQuestionAnswering:()=>se,RoFormerForSequenceClassification:()=>re,RoFormerForTokenClassification:()=>ae,RoFormerModel:()=>te,RoFormerPreTrainedModel:()=>ee,RobertaForMaskedLM:()=>Nt,RobertaForQuestionAnswering:()=>qt,RobertaForSequenceClassification:()=>Vt,RobertaForTokenClassification:()=>jt,RobertaModel:()=>Rt,RobertaPreTrainedModel:()=>Dt,SamImageSegmentationOutput:()=>Cs,SamModel:()=>$s,SamPreTrainedModel:()=>ks,SapiensForDepthEstimation:()=>es,SapiensForNormalEstimation:()=>ts,SapiensForSemanticSegmentation:()=>Ja,SapiensPreTrainedModel:()=>Za,SegformerForImageClassification:()=>Li,SegformerForSemanticSegmentation:()=>Di,SegformerModel:()=>Bi,SegformerPreTrainedModel:()=>Oi,Seq2SeqLMOutput:()=>wl,SequenceClassifierOutput:()=>yl,SiglipModel:()=>xn,SiglipPreTrainedModel:()=>vn,SiglipTextModel:()=>Mn,SiglipVisionModel:()=>Tn,SpeechT5ForSpeechToText:()=>fi,SpeechT5ForTextToSpeech:()=>gi,SpeechT5HifiGan:()=>_i,SpeechT5Model:()=>mi,SpeechT5PreTrainedModel:()=>hi,SqueezeBertForMaskedLM:()=>it,SqueezeBertForQuestionAnswering:()=>lt,SqueezeBertForSequenceClassification:()=>ot,SqueezeBertModel:()=>st,SqueezeBertPreTrainedModel:()=>at,StableLmForCausalLM:()=>Vi,StableLmModel:()=>Ni,StableLmPreTrainedModel:()=>Ri,Starcoder2ForCausalLM:()=>ki,Starcoder2Model:()=>Ti,Starcoder2PreTrainedModel:()=>Mi,Swin2SRForImageSuperResolution:()=>Wa,Swin2SRModel:()=>Ua,Swin2SRPreTrainedModel:()=>Ga,SwinForImageClassification:()=>qa,SwinModel:()=>ja,SwinPreTrainedModel:()=>Va,T5ForConditionalGeneration:()=>gt,T5Model:()=>ft,T5PreTrainedModel:()=>mt,TableTransformerForObjectDetection:()=>Ea,TableTransformerModel:()=>Pa,TableTransformerObjectDetectionOutput:()=>Fa,TableTransformerPreTrainedModel:()=>Sa,TokenClassifierOutput:()=>vl,TrOCRForCausalLM:()=>yi,TrOCRPreTrainedModel:()=>wi,UniSpeechForCTC:()=>Ws,UniSpeechForSequenceClassification:()=>Hs,UniSpeechModel:()=>Us,UniSpeechPreTrainedModel:()=>Gs,UniSpeechSatForAudioFrameClassification:()=>Zs,UniSpeechSatForCTC:()=>Qs,UniSpeechSatForSequenceClassification:()=>Ys,UniSpeechSatModel:()=>Ks,UniSpeechSatPreTrainedModel:()=>Xs,ViTForImageClassification:()=>Vr,ViTMAEModel:()=>Wr,ViTMAEPreTrainedModel:()=>Ur,ViTMSNForImageClassification:()=>Kr,ViTMSNModel:()=>Xr,ViTMSNPreTrainedModel:()=>Hr,ViTModel:()=>Nr,ViTPreTrainedModel:()=>Rr,VisionEncoderDecoderModel:()=>un,VitMatteForImageMatting:()=>na,VitMattePreTrainedModel:()=>ta,VitsModel:()=>zi,VitsModelOutput:()=>Cl,VitsPreTrainedModel:()=>Ii,Wav2Vec2BertForCTC:()=>ti,Wav2Vec2BertForSequenceClassification:()=>ni,Wav2Vec2BertModel:()=>ei,Wav2Vec2BertPreTrainedModel:()=>Js,Wav2Vec2ForAudioFrameClassification:()=>Ds,Wav2Vec2ForCTC:()=>Bs,Wav2Vec2ForSequenceClassification:()=>Ls,Wav2Vec2Model:()=>Os,Wav2Vec2PreTrainedModel:()=>zs,WavLMForAudioFrameClassification:()=>pi,WavLMForCTC:()=>ui,WavLMForSequenceClassification:()=>di,WavLMForXVector:()=>ci,WavLMModel:()=>li,WavLMPreTrainedModel:()=>oi,WeSpeakerResNetModel:()=>qs,WeSpeakerResNetPreTrainedModel:()=>js,WhisperForConditionalGeneration:()=>ln,WhisperModel:()=>on,WhisperPreTrainedModel:()=>sn,XLMForQuestionAnswering:()=>Kt,XLMForSequenceClassification:()=>Ht,XLMForTokenClassification:()=>Xt,XLMModel:()=>Ut,XLMPreTrainedModel:()=>Gt,XLMRobertaForMaskedLM:()=>Zt,XLMRobertaForQuestionAnswering:()=>tn,XLMRobertaForSequenceClassification:()=>Jt,XLMRobertaForTokenClassification:()=>en,XLMRobertaModel:()=>Yt,XLMRobertaPreTrainedModel:()=>Qt,XLMWithLMHeadModel:()=>Wt,XVectorOutput:()=>bl,YolosForObjectDetection:()=>Ms,YolosModel:()=>xs,YolosObjectDetectionOutput:()=>Ts,YolosPreTrainedModel:()=>vs});const r=n(/*! ./configs.js */\"./src/configs.js\"),a=n(/*! ./backends/onnx.js */\"./src/backends/onnx.js\"),s=n(/*! ./utils/dtypes.js */\"./src/utils/dtypes.js\"),i=n(/*! ./utils/generic.js */\"./src/utils/generic.js\"),o=n(/*! ./utils/core.js */\"./src/utils/core.js\"),l=n(/*! ./utils/hub.js */\"./src/utils/hub.js\"),u=n(/*! ./utils/constants.js */\"./src/utils/constants.js\"),d=n(/*! ./generation/logits_process.js */\"./src/generation/logits_process.js\"),c=n(/*! ./generation/configuration_utils.js */\"./src/generation/configuration_utils.js\"),p=n(/*! ./utils/tensor.js */\"./src/utils/tensor.js\"),h=n(/*! ./utils/maths.js */\"./src/utils/maths.js\"),m=n(/*! ./generation/stopping_criteria.js */\"./src/generation/stopping_criteria.js\"),f=n(/*! ./generation/logits_sampler.js */\"./src/generation/logits_sampler.js\"),g=n(/*! ./env.js */\"./src/env.js\"),_=n(/*! ./models/whisper/generation_whisper.js */\"./src/models/whisper/generation_whisper.js\"),w=n(/*! ./models/whisper/common_whisper.js */\"./src/models/whisper/common_whisper.js\");const y=0,b=1,v=2,x=3,M=4,T=5,k=6,$=7,C=new Map,S=new Map,P=new Map;async function E(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async i=>{const{buffer:o,session_options:u,session_config:d}=await async function(e,t,n){const i=n.config?.[\"transformers.js_config\"]??{};let o=n.device??i.device;o&&\"string\"!=typeof o&&(o.hasOwnProperty(t)?o=o[t]:(console.warn(`device not specified for \"${t}\". Using the default device.`),o=null));const u=o??(g.apis.IS_NODE_ENV?\"cpu\":\"wasm\"),d=(0,a.deviceToExecutionProviders)(u);let c=n.dtype??i.dtype;\"string\"!=typeof c&&(c&&c.hasOwnProperty(t)?c=c[t]:(c=s.DEFAULT_DEVICE_DTYPE_MAPPING[u]??s.DATA_TYPES.fp32,console.warn(`dtype not specified for \"${t}\". Using the default dtype (${c}) for this device (${u}).`)));const p=c;if(!s.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(p))throw new Error(`Invalid dtype: ${p}. Should be one of: ${Object.keys(s.DATA_TYPES).join(\", \")}`);if(p===s.DATA_TYPES.fp16&&\"webgpu\"===u&&!await(0,s.isWebGpuFp16Supported)())throw new Error(`The device (${u}) does not support fp16.`);const h=i.kv_cache_dtype?\"string\"==typeof i.kv_cache_dtype?i.kv_cache_dtype:i.kv_cache_dtype[p]??\"float32\":void 0;if(h&&![\"float32\",\"float16\"].includes(h))throw new Error(`Invalid kv_cache_dtype: ${h}. Should be one of: float32, float16`);const m={dtype:p,kv_cache_dtype:h},f=s.DEFAULT_DTYPE_SUFFIX_MAPPING[p],_=`${n.subfolder??\"\"}/${t}${f}.onnx`,w={...n.session_options};w.executionProviders??=d;const y=i.free_dimension_overrides;y?w.freeDimensionOverrides??=y:u.startsWith(\"webnn\")&&!w.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within \"transformers.js_config\". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const b=(0,l.getModelFile)(e,_,!0,n),v=n.use_external_data_format??i.use_external_data_format;let x=[];if(v&&(!0===v||\"object\"==typeof v&&v.hasOwnProperty(t)&&!0===v[t])){if(g.apis.IS_NODE_ENV)throw new Error(\"External data format is not yet supported in Node.js\");const r=`${t}${f}.onnx_data`,a=`${n.subfolder??\"\"}/${r}`;x.push(new Promise((async(t,s)=>{const i=await(0,l.getModelFile)(e,a,!0,n);t({path:r,data:i})})))}else void 0!==w.externalData&&(x=w.externalData.map((async t=>{if(\"string\"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,n);return{...t,data:r}}return t})));if(x.length>0&&(w.externalData=await Promise.all(x)),\"webgpu\"===u){const e=(0,r.getKeyValueShapes)(n.config,{prefix:\"present\"});if(Object.keys(e).length>0&&!(0,a.isONNXProxy)()){const t={};for(const n in e)t[n]=\"gpu-buffer\";w.preferredOutputLocation=t}}return{buffer:await b,session_options:w,session_config:m}}(e,t[i],n);return[i,await(0,a.createInferenceSession)(o,u,d)]}))))}async function F(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>[r,await(0,l.getModelJSON)(e,t[r],!1,n)]))))}async function A(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const s of e.inputNames){const e=t[s];e instanceof p.Tensor?n[s]=(0,a.isONNXProxy)()?e.clone():e:r.push(s)}if(r.length>0)throw new Error(`An error occurred during model execution: \"Missing the following inputs: ${r.join(\", \")}.`);const s=Object.keys(t).length,i=e.inputNames.length;if(s>i){const n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${s} > ${i}). The following inputs will be ignored: \"${n.join(\", \")}\".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map((([e,t])=>[e,t.ort_tensor])));let r=await e.run(t);return r=I(r),r}catch(e){throw console.error(`An error occurred during model execution: \"${e}\".`),console.error(\"Inputs given to model:\",n),e}}function I(e){for(const t in e)(0,a.isONNXTensor)(e[t])?e[t]=new p.Tensor(e[t]):\"object\"==typeof e[t]&&I(e[t]);return e}function z(e){if(e instanceof p.Tensor)return e;if(0===e.length)throw Error(\"items must be non-empty\");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error(\"Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.\");return new p.Tensor(\"int64\",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new p.Tensor(\"int64\",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function O(e){return new p.Tensor(\"bool\",[e],[1])}async function B(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:a,...s}=t;if(!n){const r=(0,o.pick)(t,e.sessions.model.inputNames);n=(await L(e,r)).last_hidden_state}s.input_ids=a,s.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes(\"encoder_attention_mask\")&&(s.encoder_attention_mask=t.attention_mask);return await D(e,s,!0)}async function L(e,t){const n=e.sessions.model,r=(0,o.pick)(t,n.inputNames);if(n.inputNames.includes(\"inputs_embeds\")&&!r.inputs_embeds){if(!t.input_ids)throw new Error(\"Both `input_ids` and `inputs_embeds` are missing in the model inputs.\");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}return n.inputNames.includes(\"token_type_ids\")&&!r.token_type_ids&&(r.token_type_ids=new p.Tensor(\"int64\",new BigInt64Array(r.input_ids.data.length),r.input_ids.dims)),await A(n,r)}async function D(e,t,n=!1){const r=e.sessions[n?\"decoder_model_merged\":\"model\"],{past_key_values:a,...s}=t;r.inputNames.includes(\"use_cache_branch\")&&(s.use_cache_branch=O(!!a)),r.inputNames.includes(\"position_ids\")&&s.attention_mask&&!s.position_ids&&(s.position_ids=function(e,t=null){const{input_ids:n,inputs_embeds:r,attention_mask:a}=e,[s,i]=a.dims,o=new BigInt64Array(a.data.length);for(let e=0;e<s;++e){const t=e*i;let n=BigInt(0);for(let e=0;e<i;++e){const r=t+e;0n===a.data[r]?o[r]=BigInt(1):(o[r]=n,n+=a.data[r])}}let l=new p.Tensor(\"int64\",o,a.dims);if(t){const e=-(n??r).dims.at(1);l=l.slice(null,[e,null])}return l}(s,a)),e.addPastKeyValues(s,a);const i=(0,o.pick)(s,r.inputNames);return await A(r,i)}async function R(e,{input_ids:t=null,attention_mask:n=null,pixel_values:r=null,position_ids:a=null,inputs_embeds:s=null,past_key_values:i=null,generation_config:o=null,logits_processor:l=null,...u}){if(!s)if(s=await e.encode_text({input_ids:t}),r&&1!==t.dims[1]){const a=await e.encode_image({pixel_values:r});({inputs_embeds:s,attention_mask:n}=e._merge_input_ids_with_image_features({image_features:a,inputs_embeds:s,input_ids:t,attention_mask:n}))}else if(i&&r&&1===t.dims[1]){const e=t.dims[1],r=Object.values(i)[0].dims.at(-2);n=(0,p.cat)([(0,p.ones)([t.dims[0],r]),n.slice(null,[n.dims[1]-e,n.dims[1]])],1)}return await D(e,{inputs_embeds:s,past_key_values:i,attention_mask:n,position_ids:a,generation_config:o,logits_processor:l},!0)}function N(e,t,n,r){if(n.past_key_values){const t=Object.values(n.past_key_values)[0].dims.at(-2),{input_ids:r,attention_mask:a}=n;if(a&&a.dims[1]>r.dims[1]);else if(t<r.dims[1])n.input_ids=r.slice(null,[t,null]);else if(null!=e.config.image_token_index&&r.data.some((t=>t==e.config.image_token_index))){const a=e.config.num_image_tokens;if(!a)throw new Error(\"`num_image_tokens` is missing in the model configuration.\");const s=r.dims[1]-(t-a);n.input_ids=r.slice(null,[-s,null]),n.attention_mask=(0,p.ones)([1,t+s])}}return n}function V(e,t,n,r){return n.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...n,decoder_input_ids:z(t)}}function j(e,...t){return e.config.is_encoder_decoder?V(e,...t):N(e,...t)}class q extends i.Callable{main_input_name=\"input_ids\";forward_params=[\"input_ids\",\"attention_mask\"];constructor(e,t,n){super(),this.config=e,this.sessions=t,this.configs=n;const r=P.get(this.constructor),a=C.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,a){case M:this.can_generate=!0,this._forward=D,this._prepare_inputs_for_generation=N;break;case v:case x:case $:this.can_generate=!0,this._forward=B,this._prepare_inputs_for_generation=V;break;case b:this._forward=B;break;case k:this.can_generate=!0,this._forward=R,this._prepare_inputs_for_generation=j;break;default:this._forward=L}this.can_generate&&this.forward_params.push(\"past_key_values\"),this.custom_config=this.config[\"transformers.js_config\"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i=\"main\",model_file_name:o=null,subfolder:l=\"onnx\",device:d=null,dtype:c=null,use_external_data_format:p=null,session_options:h={}}={}){const m={progress_callback:t,config:n,cache_dir:a,local_files_only:s,revision:i,model_file_name:o,subfolder:l,device:d,dtype:c,use_external_data_format:p,session_options:h};const f=P.get(this),g=C.get(f);let _;if(n=m.config=await r.AutoConfig.from_pretrained(e,m),g===M)_=await Promise.all([E(e,{model:m.model_file_name??\"model\"},m),F(e,{generation_config:\"generation_config.json\"},m)]);else if(g===v||g===x)_=await Promise.all([E(e,{model:\"encoder_model\",decoder_model_merged:\"decoder_model_merged\"},m),F(e,{generation_config:\"generation_config.json\"},m)]);else if(g===T)_=await Promise.all([E(e,{model:\"vision_encoder\",prompt_encoder_mask_decoder:\"prompt_encoder_mask_decoder\"},m)]);else if(g===b)_=await Promise.all([E(e,{model:\"encoder_model\",decoder_model_merged:\"decoder_model_merged\"},m)]);else if(g===k){const t={embed_tokens:\"embed_tokens\",vision_encoder:\"vision_encoder\",decoder_model_merged:\"decoder_model_merged\"};n.is_encoder_decoder&&(t.model=\"encoder_model\"),_=await Promise.all([E(e,t,m),F(e,{generation_config:\"generation_config.json\"},m)])}else g===$?_=await Promise.all([E(e,{model:\"text_encoder\",decoder_model_merged:\"decoder_model_merged\",encodec_decode:\"encodec_decode\"},m),F(e,{generation_config:\"generation_config.json\"},m)]):(g!==y&&console.warn(`Model type for '${f??n?.model_type}' not found, assuming encoder-only architecture. Please report this at ${u.GITHUB_ISSUE_URL}.`),_=await Promise.all([E(e,{model:m.model_file_name??\"model\"},m)]));return new this(n,..._)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new d.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new d.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new d.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new d.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,n=null){const r=new d.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new d.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new d.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new d.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new d.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new d.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new d.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new d.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new d.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new d.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=c.GenerationConfig){const r={...this.config};for(const e of[\"decoder\",\"generator\",\"text_config\"])e in r&&Object.assign(r,r[e]);const a=new n(r);return Object.assign(a,this.generation_config??{}),e&&Object.assign(a,e),t&&Object.assign(a,(0,o.pick)(t,Object.getOwnPropertyNames(a))),a}_get_stopping_criteria(e,t=null){const n=new m.StoppingCriteriaList;return null!==e.max_length&&n.push(new m.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new m.EosTokenCriteria(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[bo,Mo,yo,mo],t=P.get(this.constructor),n=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&n.add(e[0])}let a=`The current model class (${t}) is not compatible with \\`.generate()\\`, as it doesn't have a language model head.`;throw n.size>0&&(a+=` Please use the following class instead: ${[...n].join(\", \")}`),Error(a)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new p.Tensor(\"int64\",e.flat(),[e.length,1]),r||(n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.ones)([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=(0,o.pick)(n,this.forward_params),a=this.main_input_name;if(a in r){if(e)throw new Error(\"`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...\")}else r[a]=e;return{inputs_tensor:r[a],model_inputs:r,model_input_name:a}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes(\"inputs_embeds\")&&!t.inputs_embeds&&\"_prepare_inputs_embeds\"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...a}=t,s=await this._prepare_inputs_embeds(t);t={...a,...(0,o.pick)(s,[\"inputs_embeds\",\"attention_mask\"])}}let{last_hidden_state:a}=await L(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)a=(0,p.cat)([a,(0,p.full_like)(a,0)],0),\"attention_mask\"in t&&(t.attention_mask=(0,p.cat)([t.attention_mask,(0,p.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=z(t.decoder_input_ids).dims[0];if(e!==a.dims[0]){if(1!==a.dims[0])throw new Error(`The encoder outputs have a different batch size (${a.dims[0]}) than the decoder inputs (${e}).`);a=(0,p.cat)(Array.from({length:e},(()=>a)),0)}}return t.encoder_outputs=a,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:a,generation_config:s}){let{decoder_input_ids:i,...o}=n;if(!(i instanceof p.Tensor)){if(i)Array.isArray(i[0])||(i=Array.from({length:e},(()=>i)));else if(r??=a,\"musicgen\"===this.config.model_type)i=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\\`decoder_start_token_id\\` expcted to have length ${e} but got ${r.length}`);i=r}else i=Array.from({length:e},(()=>[r]));i=z(i)}return n.decoder_attention_mask=(0,p.ones_like)(i),{input_ids:i,model_inputs:o}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:a=null,...s}){this._validate_model_class(),t=this._prepare_generation_config(t,s);let{inputs_tensor:i,model_inputs:o,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:s});const u=this.config.is_encoder_decoder;let d;u&&(\"encoder_outputs\"in o||(o=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:i,model_inputs:o,model_input_name:l,generation_config:t}))),u?({input_ids:d,model_inputs:o}=this._prepare_decoder_input_ids_for_generation({batch_size:o[l].dims.at(0),model_input_name:l,model_kwargs:o,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=o[l];const c=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=c+t.max_new_tokens);const h=this._get_logits_processor(t,c,n),m=this._get_stopping_criteria(t,r),g=o[l].dims.at(0),_=f.LogitsSampler.getSampler(t),w=new Array(g).fill(0),y=d.tolist();let b;a&&a.put(y);const v={};for(;;){if(o=this.prepare_inputs_for_generation(y,o,t),b=await this.forward(o),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(b);for(const t in e)t in v||(v[t]=[]),v[t].push(e[t])}const e=h(y,b.logits.slice(null,-1,null)),n=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],a=await _(r);for(const[e,r]of a){const a=BigInt(e);w[t]+=r,y[t].push(a),n.push([a]);break}}a&&a.put(n);if(m(y).every((e=>e)))break;o=this._update_model_kwargs_for_generation({generated_input_ids:n,outputs:b,model_inputs:o,is_encoder_decoder:u})}a&&a.end();const x=this.getPastKeyValues(b,o.past_key_values,!0),M=new p.Tensor(\"int64\",y.flat(),[y.length,y[0].length]);if(t.return_dict_in_generate)return{sequences:M,past_key_values:x,...v};for(const e of Object.values(b))\"gpu-buffer\"===e.location&&e.dispose();return M}getPastKeyValues(e,t,n=!1){const r=Object.create(null);for(const a in e)if(a.startsWith(\"present\")){const s=a.replace(\"present\",\"past_key_values\"),i=a.includes(\"encoder\");if(r[s]=i&&t?t[s]:e[a],t&&(!i||n)){const e=t[s];\"gpu-buffer\"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const n of[\"cross_attentions\",\"encoder_attentions\",\"decoder_attentions\"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,n=t?.config?.kv_cache_dtype??\"float32\",a=\"float16\"===n?new Uint16Array:[],s=(0,r.getKeyValueShapes)(this.config);for(const t in s)e[t]=new p.Tensor(n,a,s[t])}}async encode_image({pixel_values:e}){const t=(await A(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${t.dims[1]}).`),this.config.num_image_tokens=t.dims[1]),t}async encode_text({input_ids:e}){return(await A(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}}class G{}class U extends G{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class W extends q{}class H extends W{}class X extends W{async _call(e){return new xl(await super._call(e))}}class K extends W{async _call(e){return new yl(await super._call(e))}}class Q extends W{async _call(e){return new vl(await super._call(e))}}class Y extends W{async _call(e){return new Ml(await super._call(e))}}class Z extends q{}class J extends Z{}class ee extends q{}class te extends ee{}class ne extends ee{async _call(e){return new xl(await super._call(e))}}class re extends ee{async _call(e){return new yl(await super._call(e))}}class ae extends ee{async _call(e){return new vl(await super._call(e))}}class se extends ee{async _call(e){return new Ml(await super._call(e))}}class ie extends q{}class oe extends ie{}class le extends ie{async _call(e){return new xl(await super._call(e))}}class ue extends ie{async _call(e){return new yl(await super._call(e))}}class de extends ie{async _call(e){return new vl(await super._call(e))}}class ce extends ie{async _call(e){return new Ml(await super._call(e))}}class pe extends q{}class he extends pe{}class me extends pe{async _call(e){return new xl(await super._call(e))}}class fe extends pe{async _call(e){return new yl(await super._call(e))}}class ge extends pe{async _call(e){return new vl(await super._call(e))}}class _e extends pe{async _call(e){return new Ml(await super._call(e))}}class we extends q{}class ye extends we{}class be extends we{async _call(e){return new xl(await super._call(e))}}class ve extends we{async _call(e){return new yl(await super._call(e))}}class xe extends we{async _call(e){return new vl(await super._call(e))}}class Me extends we{async _call(e){return new Ml(await super._call(e))}}class Te extends q{}class ke extends Te{}class $e extends Te{async _call(e){return new xl(await super._call(e))}}class Ce extends Te{async _call(e){return new yl(await super._call(e))}}class Se extends Te{async _call(e){return new vl(await super._call(e))}}class Pe extends Te{async _call(e){return new Ml(await super._call(e))}}class Ee extends q{}class Fe extends Ee{}class Ae extends Ee{async _call(e){return new xl(await super._call(e))}}class Ie extends Ee{async _call(e){return new yl(await super._call(e))}}class ze extends Ee{async _call(e){return new vl(await super._call(e))}}class Oe extends Ee{async _call(e){return new Ml(await super._call(e))}}class Be extends q{}class Le extends Be{}class De extends Be{async _call(e){return new yl(await super._call(e))}}class Re extends Be{async _call(e){return new vl(await super._call(e))}}class Ne extends Be{async _call(e){return new Ml(await super._call(e))}}class Ve extends Be{async _call(e){return new xl(await super._call(e))}}class je extends q{}class qe extends je{}class Ge extends je{async _call(e){return new xl(await super._call(e))}}class Ue extends je{async _call(e){return new yl(await super._call(e))}}class We extends je{async _call(e){return new vl(await super._call(e))}}class He extends q{}class Xe extends He{}class Ke extends He{async _call(e){return new xl(await super._call(e))}}class Qe extends He{async _call(e){return new yl(await super._call(e))}}class Ye extends He{async _call(e){return new Ml(await super._call(e))}}class Ze extends q{}class Je extends Ze{}class et extends Ze{async _call(e){return new xl(await super._call(e))}}class tt extends Ze{async _call(e){return new yl(await super._call(e))}}class nt extends Ze{async _call(e){return new vl(await super._call(e))}}class rt extends Ze{async _call(e){return new Ml(await super._call(e))}}class at extends q{}class st extends at{}class it extends at{async _call(e){return new xl(await super._call(e))}}class ot extends at{async _call(e){return new yl(await super._call(e))}}class lt extends at{async _call(e){return new Ml(await super._call(e))}}class ut extends q{}class dt extends ut{}class ct extends ut{async _call(e){return new yl(await super._call(e))}}class pt extends ut{async _call(e){return new Ml(await super._call(e))}}class ht extends ut{async _call(e){return new xl(await super._call(e))}}class mt extends q{forward_params=[\"input_ids\",\"attention_mask\",\"encoder_outputs\",\"decoder_input_ids\",\"decoder_attention_mask\",\"past_key_values\"]}class ft extends mt{}class gt extends mt{}class _t extends q{}class wt extends _t{}class yt extends _t{}class bt extends q{}class vt extends bt{}class xt extends bt{}class Mt extends q{}class Tt extends Mt{}class kt extends Mt{}class $t extends Mt{async _call(e){return new yl(await super._call(e))}}class Ct extends q{}class St extends Ct{}class Pt extends Ct{}class Et extends Ct{async _call(e){return new yl(await super._call(e))}}class Ft extends Ct{}class At extends q{}class It extends At{}class zt extends At{}class Ot extends q{}class Bt extends Ot{}class Lt extends Ot{}class Dt extends q{}class Rt extends Dt{}class Nt extends Dt{async _call(e){return new xl(await super._call(e))}}class Vt extends Dt{async _call(e){return new yl(await super._call(e))}}class jt extends Dt{async _call(e){return new vl(await super._call(e))}}class qt extends Dt{async _call(e){return new Ml(await super._call(e))}}class Gt extends q{}class Ut extends Gt{}class Wt extends Gt{async _call(e){return new xl(await super._call(e))}}class Ht extends Gt{async _call(e){return new yl(await super._call(e))}}class Xt extends Gt{async _call(e){return new vl(await super._call(e))}}class Kt extends Gt{async _call(e){return new Ml(await super._call(e))}}class Qt extends q{}class Yt extends Qt{}class Zt extends Qt{async _call(e){return new xl(await super._call(e))}}class Jt extends Qt{async _call(e){return new yl(await super._call(e))}}class en extends Qt{async _call(e){return new vl(await super._call(e))}}class tn extends Qt{async _call(e){return new Ml(await super._call(e))}}class nn extends q{}class rn extends nn{}class an extends nn{}class sn extends q{requires_attention_mask=!1;main_input_name=\"input_features\";forward_params=[\"input_features\",\"attention_mask\",\"decoder_input_ids\",\"decoder_attention_mask\",\"past_key_values\"]}class on extends sn{}class ln extends sn{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,_.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn(\"No language specified - defaulting to English (en).\"),n=\"en\");const a=`<|${(0,w.whisper_language_to_code)(n)}|>`;t.push(e.lang_to_id[a]),t.push(e.task_to_id[r??\"transcribe\"])}else if(n||r)throw new Error(\"Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.\");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn(\"<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`.\"),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...a}){t=this._prepare_generation_config(t,a);const s=a.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??=new d.LogitsProcessorList,n.push(new d.WhisperTimeStampLogitsProcessor(t,s))),t.begin_suppress_tokens&&(n??=new d.LogitsProcessorList,n.push(new d.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,s.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error(\"Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.\");\"translate\"===t.task&&console.warn(\"Token-level timestamps may not be reliable for task 'translate'.\"),t.output_attentions=!0,t.return_dict_in_generate=!0}const i=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:s,...a});return t.return_token_timestamps&&(i.token_timestamps=this._extract_token_timestamps(i,t.alignment_heads,t.num_frames)),i}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error(\"Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.\");null==n&&console.warn(\"`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).\");let a=this.config.median_filter_width;void 0===a&&(console.warn(\"Model config has no `median_filter_width`, using default value of 7.\"),a=7);const s=e.cross_attentions,i=Array.from({length:this.config.decoder_layers},((e,t)=>(0,p.cat)(s.map((e=>e[t])),2))),l=(0,p.stack)(t.map((([e,t])=>{if(e>=i.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${i.length}).`);return n?i[e].slice(null,t,null,[0,n]):i[e].slice(null,t)}))).transpose(1,0,2,3),[u,d]=(0,p.std_mean)(l,-2,0,!0),c=l.clone();for(let e=0;e<c.dims[0];++e){const t=c[e];for(let n=0;n<t.dims[0];++n){const r=t[n],s=u[e][n][0].data,i=d[e][n][0].data;for(let e=0;e<r.dims[0];++e){const t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-i[e])/s[e];t.set((0,h.medianFilter)(t,a))}}}const m=[(0,p.mean)(c,1)],f=e.sequences.dims,g=new p.Tensor(\"float32\",new Float32Array(f[0]*f[1]),f);for(let e=0;e<f[0];++e){const t=m[e].neg().squeeze_(0),[n,a]=(0,h.dynamic_time_warping)(t.tolist()),s=Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t])),i=(0,o.mergeArrays)([1],s).map((e=>!!e)),l=[];for(let e=0;e<i.length;++e)i[e]&&l.push(a[e]*r);g[e].data.set(l,1)}return g}}class un extends q{main_input_name=\"pixel_values\";forward_params=[\"pixel_values\",\"decoder_input_ids\",\"encoder_hidden_states\",\"past_key_values\"]}class dn extends q{forward_params=[\"input_ids\",\"pixel_values\",\"attention_mask\",\"position_ids\",\"past_key_values\"]}class cn extends dn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){const a=this.config.image_token_index,s=n.tolist().map((e=>e.findIndex((e=>e==a)))),i=s.every((e=>-1===e)),o=s.every((e=>-1!==e));if(!i&&!o)throw new Error(\"Every input should contain either 0 or 1 image token.\");if(i)return{inputs_embeds:e,attention_mask:r};const l=[],u=[];for(let n=0;n<s.length;++n){const a=s[n],i=e[n],o=t[n],d=r[n];l.push((0,p.cat)([i.slice([0,a]),o,i.slice([a+1,i.dims[0]])],0)),u.push((0,p.cat)([d.slice([0,a]),(0,p.ones)([o.dims[0]]),d.slice([a+1,d.dims[0]])],0))}return{inputs_embeds:(0,p.stack)(l,0),attention_mask:(0,p.stack)(u,0)}}}class pn extends cn{}class hn extends q{forward_params=[\"input_ids\",\"inputs_embeds\",\"attention_mask\",\"pixel_values\",\"encoder_outputs\",\"decoder_input_ids\",\"decoder_inputs_embeds\",\"decoder_attention_mask\",\"past_key_values\"];main_input_name=\"inputs_embeds\"}class mn extends hn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:(0,p.cat)([t,e],1),attention_mask:(0,p.cat)([(0,p.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error(\"Either `input_ids` or `pixel_values` should be provided.\");let a,s;return e&&(a=await this.encode_text({input_ids:e})),t&&(s=await this.encode_image({pixel_values:t})),a&&s?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:a,image_features:s,input_ids:e,attention_mask:r})):n=a||s,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:a,encoder_outputs:s,past_key_values:i,inputs_embeds:o,decoder_inputs_embeds:l}){if(o||({inputs_embeds:o,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:o,attention_mask:n})),!s){const{last_hidden_state:e}=await L(this,{inputs_embeds:o,attention_mask:n});s=e}if(!l){if(!r)throw new Error(\"Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.\");l=await this.encode_text({input_ids:r})}const u={inputs_embeds:l,attention_mask:a,encoder_attention_mask:n,encoder_hidden_states:s,past_key_values:i};return await D(this,u,!0)}}class fn extends q{}class gn extends fn{}class _n extends fn{static async from_pretrained(e,t={}){return t.model_file_name??=\"text_model\",super.from_pretrained(e,t)}}class wn extends fn{static async from_pretrained(e,t={}){return t.model_file_name??=\"text_model\",super.from_pretrained(e,t)}}class yn extends fn{static async from_pretrained(e,t={}){return t.model_file_name??=\"vision_model\",super.from_pretrained(e,t)}}class bn extends fn{static async from_pretrained(e,t={}){return t.model_file_name??=\"vision_model\",super.from_pretrained(e,t)}}class vn extends q{}class xn extends vn{}class Mn extends vn{static async from_pretrained(e,t={}){return t.model_file_name??=\"text_model\",super.from_pretrained(e,t)}}class Tn extends fn{static async from_pretrained(e,t={}){return t.model_file_name??=\"vision_model\",super.from_pretrained(e,t)}}class kn extends q{}class $n extends kn{}class Cn extends q{}class Sn extends Cn{}class Pn extends Cn{}class En extends q{}class Fn extends En{}class An extends En{}class In extends q{}class zn extends In{}class On extends In{}class Bn extends q{}class Ln extends Bn{}class Dn extends Bn{}class Rn extends q{}class Nn extends Rn{}class Vn extends Rn{}class jn extends q{}class qn extends jn{}class Gn extends jn{}class Un extends q{}class Wn extends Un{}class Hn extends Un{}class Xn extends q{}class Kn extends Xn{}class Qn extends Xn{}class Yn extends q{}class Zn extends Yn{}class Jn extends Yn{}class er extends q{}class tr extends er{}class nr extends er{}class rr extends q{}class ar extends rr{}class sr extends rr{}class ir extends q{}class or extends ir{}class lr extends ir{}class ur extends q{}class dr extends ur{}class cr extends ur{}class pr extends q{}class hr extends pr{}class mr extends pr{}class fr extends q{}class gr extends fr{}class _r extends fr{}class wr extends q{}class yr extends wr{}class br extends wr{}class vr extends q{}class xr extends vr{}class Mr extends vr{}class Tr extends q{}class kr extends Tr{}class $r extends Tr{}class Cr extends q{}class Sr extends Cr{}class Pr extends Cr{}class Er extends q{}class Fr extends Er{}class Ar extends Er{}class Ir extends q{}class zr extends Ir{}class Or extends Ir{}class Br extends q{}class Lr extends Br{}class Dr extends Br{}class Rr extends q{}class Nr extends Rr{}class Vr extends Rr{async _call(e){return new yl(await super._call(e))}}class jr extends q{}class qr extends jr{}class Gr extends jr{async _call(e){return new yl(await super._call(e))}}class Ur extends q{}class Wr extends Ur{}class Hr extends q{}class Xr extends Hr{}class Kr extends Hr{async _call(e){return new yl(await super._call(e))}}class Qr extends q{}class Yr extends Qr{}class Zr extends q{}class Jr extends Zr{}class ea extends Zr{async _call(e){return new yl(await super._call(e))}}class ta extends q{}class na extends ta{async _call(e){return new $l(await super._call(e))}}class ra extends q{}class aa extends ra{}class sa extends ra{async _call(e){return new yl(await super._call(e))}}class ia extends q{}class oa extends ia{}class la extends ia{async _call(e){return new yl(await super._call(e))}}class ua extends q{}class da extends ua{}class ca extends ua{}class pa extends q{}class ha extends pa{}class ma extends pa{}class fa extends q{}class ga extends fa{}class _a extends fa{async _call(e){return new yl(await super._call(e))}}class wa extends q{}class ya extends wa{}class ba extends wa{async _call(e){return new xa(await super._call(e))}}class va extends wa{async _call(e){return new Ma(await super._call(e))}}class xa extends G{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Ma extends G{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Ta extends q{}class ka extends Ta{}class $a extends Ta{async _call(e){return new Ca(await super._call(e))}}class Ca extends G{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Sa extends q{}class Pa extends Sa{}class Ea extends Sa{async _call(e){return new Fa(await super._call(e))}}class Fa extends xa{}class Aa extends q{}class Ia extends Aa{}class za extends Aa{async _call(e){return new yl(await super._call(e))}}class Oa extends q{}class Ba extends Oa{}class La extends Oa{async _call(e){return new yl(await super._call(e))}}class Da extends q{}class Ra extends Da{}class Na extends Da{async _call(e){return new yl(await super._call(e))}}class Va extends q{}class ja extends Va{}class qa extends Va{async _call(e){return new yl(await super._call(e))}}class Ga extends q{}class Ua extends Ga{}class Wa extends Ga{}class Ha extends q{}class Xa extends Ha{}class Ka extends Ha{}class Qa extends q{}class Ya extends Qa{}class Za extends q{}class Ja extends Za{}class es extends Za{}class ts extends Za{}class ns extends q{}class rs extends ns{}class as extends q{}class ss extends as{}class is extends as{}class os extends q{}class ls extends os{}class us extends os{}class ds extends q{}class cs extends ds{}class ps extends q{}class hs extends ps{}class ms extends ps{async _call(e){return new yl(await super._call(e))}}class fs extends q{}class gs extends fs{}class _s extends fs{async _call(e){return new yl(await super._call(e))}}class ws extends q{}class ys extends ws{}class bs extends ws{async _call(e){return new yl(await super._call(e))}}class vs extends q{}class xs extends vs{}class Ms extends vs{async _call(e){return new Ts(await super._call(e))}}class Ts extends G{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ks extends q{}class $s extends ks{async get_image_embeddings({pixel_values:e}){return await L(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new p.Tensor(\"int64\",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await A(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new Cs(await super._call(e))}}class Cs extends G{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class Ss extends q{}class Ps extends Ss{}class Es extends Ss{}class Fs extends q{}class As extends Fs{}class Is extends Fs{}class zs extends q{}class Os extends zs{}class Bs extends zs{async _call(e){return new Tl(await super._call(e))}}class Ls extends zs{async _call(e){return new yl(await super._call(e))}}class Ds extends zs{async _call(e){return new vl(await super._call(e))}}class Rs extends q{}class Ns extends Rs{}class Vs extends Rs{async _call(e){return new vl(await super._call(e))}}class js extends q{}class qs extends js{}class Gs extends q{}class Us extends Gs{}class Ws extends Gs{async _call(e){return new Tl(await super._call(e))}}class Hs extends Gs{async _call(e){return new yl(await super._call(e))}}class Xs extends q{}class Ks extends Xs{}class Qs extends Xs{async _call(e){return new Tl(await super._call(e))}}class Ys extends Xs{async _call(e){return new yl(await super._call(e))}}class Zs extends Xs{async _call(e){return new vl(await super._call(e))}}class Js extends q{}class ei extends Js{}class ti extends Js{async _call(e){return new Tl(await super._call(e))}}class ni extends Js{async _call(e){return new yl(await super._call(e))}}class ri extends q{}class ai extends zs{}class si extends zs{async _call(e){return new Tl(await super._call(e))}}class ii extends zs{async _call(e){return new yl(await super._call(e))}}class oi extends q{}class li extends oi{}class ui extends oi{async _call(e){return new Tl(await super._call(e))}}class di extends oi{async _call(e){return new yl(await super._call(e))}}class ci extends oi{async _call(e){return new bl(await super._call(e))}}class pi extends oi{async _call(e){return new vl(await super._call(e))}}class hi extends q{}class mi extends hi{}class fi extends hi{}class gi extends hi{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:a=20,vocoder:s=null}={}){const i={input_ids:e},{encoder_outputs:o,encoder_attention_mask:l}=await L(this,i),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*a),c=Math.floor(u*r),h=this.config.num_mel_bins;let m=[],f=null,g=null,_=0;for(;;){++_;const e=O(!!g);let r;r=g?g.output_sequence_out:new p.Tensor(\"float32\",new Float32Array(h),[1,1,h]);const a={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:o};this.addPastKeyValues(a,f),g=await A(this.sessions.decoder_model_merged,a),f=this.getPastKeyValues(g,f);const{prob:s,spectrum:i}=g;if(m.push(i),_>=c&&(Array.from(s.data).filter((e=>e>=n)).length>0||_>=d))break}const w=(0,p.cat)(m),{waveform:y}=await A(s.sessions.model,{spectrogram:w});return{spectrogram:w,waveform:y}}}class _i extends q{main_input_name=\"spectrogram\"}class wi extends q{}class yi extends wi{}class bi extends q{}class vi extends bi{}class xi extends bi{}class Mi extends q{}class Ti extends Mi{}class ki extends Mi{}class $i extends q{}class Ci extends $i{}class Si extends $i{}class Pi extends q{}class Ei extends Pi{}class Fi extends Pi{static async from_pretrained(e,t={}){return t.model_file_name??=\"text_model\",super.from_pretrained(e,t)}}class Ai extends Pi{static async from_pretrained(e,t={}){return t.model_file_name??=\"audio_model\",super.from_pretrained(e,t)}}class Ii extends q{}class zi extends Ii{async _call(e){return new Cl(await super._call(e))}}class Oi extends q{}class Bi extends Oi{}class Li extends Oi{}class Di extends Oi{}class Ri extends q{}class Ni extends Ri{}class Vi extends Ri{}class ji extends q{}class qi extends ji{}class Gi extends ji{async _call(e){return new yl(await super._call(e))}}class Ui extends q{}class Wi extends Ui{}class Hi extends Ui{}class Xi extends q{forward_params=[\"input_ids\",\"attention_mask\",\"encoder_outputs\",\"decoder_input_ids\",\"decoder_attention_mask\",\"past_key_values\"];_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,a=n-r;let s=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const i=t%n-Math.floor(t/n)%r;i>0&&i<=a&&(e.data[s++]=e.data[t])}const i=Math.floor(t/r),o=s/(i*r);return new p.Tensor(e.type,e.data.slice(0,s),[i,r,o])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await A(this.sessions.encodec_decode,{audio_codes:n});return r}}class Ki extends q{}class Qi extends Ki{}class Yi extends Ki{async _call(e){return new yl(await super._call(e))}}class Zi extends q{}class Ji extends Zi{}class eo extends Zi{async _call(e){return new yl(await super._call(e))}}class to extends q{}class no extends to{}class ro extends to{async _call(e){return new yl(await super._call(e))}}class ao extends q{}class so extends ao{}class io extends ao{async _call(e){return new yl(await super._call(e))}}class oo extends q{}class lo extends oo{}class uo{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:a=null,local_files_only:s=!1,revision:i=\"main\",model_file_name:o=null,subfolder:l=\"onnx\",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){const h={progress_callback:t,config:n,cache_dir:a,local_files_only:s,revision:i,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p};if(h.config=await r.AutoConfig.from_pretrained(e,h),!this.MODEL_CLASS_MAPPINGS)throw new Error(\"`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: \"+this.name);for(const t of this.MODEL_CLASS_MAPPINGS){const n=t.get(h.config.model_type);if(n)return await n[1].from_pretrained(e,h)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class \"${h.config.model_type}\", attempting to construct from base class.`),await q.from_pretrained(e,h);throw Error(`Unsupported model type: ${h.config.model_type}`)}}const co=new Map([[\"bert\",[\"BertModel\",H]],[\"nomic_bert\",[\"NomicBertModel\",J]],[\"roformer\",[\"RoFormerModel\",te]],[\"electra\",[\"ElectraModel\",he]],[\"esm\",[\"EsmModel\",qe]],[\"convbert\",[\"ConvBertModel\",oe]],[\"camembert\",[\"CamembertModel\",ye]],[\"deberta\",[\"DebertaModel\",ke]],[\"deberta-v2\",[\"DebertaV2Model\",Fe]],[\"mpnet\",[\"MPNetModel\",Je]],[\"albert\",[\"AlbertModel\",dt]],[\"distilbert\",[\"DistilBertModel\",Le]],[\"roberta\",[\"RobertaModel\",Rt]],[\"xlm\",[\"XLMModel\",Ut]],[\"xlm-roberta\",[\"XLMRobertaModel\",Yt]],[\"clap\",[\"ClapModel\",Ei]],[\"clip\",[\"CLIPModel\",gn]],[\"clipseg\",[\"CLIPSegModel\",Sn]],[\"chinese_clip\",[\"ChineseCLIPModel\",$n]],[\"siglip\",[\"SiglipModel\",xn]],[\"mobilebert\",[\"MobileBertModel\",Xe]],[\"squeezebert\",[\"SqueezeBertModel\",st]],[\"wav2vec2\",[\"Wav2Vec2Model\",Os]],[\"wav2vec2-bert\",[\"Wav2Vec2BertModel\",ei]],[\"unispeech\",[\"UniSpeechModel\",Us]],[\"unispeech-sat\",[\"UniSpeechSatModel\",Ks]],[\"hubert\",[\"HubertModel\",ai]],[\"wavlm\",[\"WavLMModel\",li]],[\"audio-spectrogram-transformer\",[\"ASTModel\",rn]],[\"vits\",[\"VitsModel\",zi]],[\"pyannote\",[\"PyAnnoteModel\",Ns]],[\"wespeaker-resnet\",[\"WeSpeakerResNetModel\",qs]],[\"detr\",[\"DetrModel\",ya]],[\"rt_detr\",[\"RTDetrModel\",ka]],[\"table-transformer\",[\"TableTransformerModel\",Pa]],[\"vit\",[\"ViTModel\",Nr]],[\"pvt\",[\"PvtModel\",qr]],[\"vit_msn\",[\"ViTMSNModel\",Xr]],[\"vit_mae\",[\"ViTMAEModel\",Wr]],[\"groupvit\",[\"GroupViTModel\",Yr]],[\"fastvit\",[\"FastViTModel\",Jr]],[\"mobilevit\",[\"MobileViTModel\",aa]],[\"mobilevitv2\",[\"MobileViTV2Model\",oa]],[\"owlvit\",[\"OwlViTModel\",da]],[\"owlv2\",[\"Owlv2Model\",ha]],[\"beit\",[\"BeitModel\",ga]],[\"deit\",[\"DeiTModel\",Ia]],[\"hiera\",[\"HieraModel\",Ba]],[\"convnext\",[\"ConvNextModel\",hs]],[\"convnextv2\",[\"ConvNextV2Model\",gs]],[\"dinov2\",[\"Dinov2Model\",ys]],[\"resnet\",[\"ResNetModel\",Ra]],[\"swin\",[\"SwinModel\",ja]],[\"swin2sr\",[\"Swin2SRModel\",Ua]],[\"donut-swin\",[\"DonutSwinModel\",cs]],[\"yolos\",[\"YolosModel\",xs]],[\"dpt\",[\"DPTModel\",Xa]],[\"glpn\",[\"GLPNModel\",ls]],[\"hifigan\",[\"SpeechT5HifiGan\",_i]],[\"efficientnet\",[\"EfficientNetModel\",qi]],[\"decision_transformer\",[\"DecisionTransformerModel\",lo]],[\"mobilenet_v1\",[\"MobileNetV1Model\",Qi]],[\"mobilenet_v2\",[\"MobileNetV2Model\",Ji]],[\"mobilenet_v3\",[\"MobileNetV3Model\",no]],[\"mobilenet_v4\",[\"MobileNetV4Model\",so]],[\"maskformer\",[\"MaskFormerModel\",ss]]]),po=new Map([[\"t5\",[\"T5Model\",ft]],[\"longt5\",[\"LongT5Model\",wt]],[\"mt5\",[\"MT5Model\",vt]],[\"bart\",[\"BartModel\",Tt]],[\"mbart\",[\"MBartModel\",St]],[\"marian\",[\"MarianModel\",Ps]],[\"whisper\",[\"WhisperModel\",on]],[\"m2m_100\",[\"M2M100Model\",As]],[\"blenderbot\",[\"BlenderbotModel\",It]],[\"blenderbot-small\",[\"BlenderbotSmallModel\",Bt]]]),ho=new Map([[\"bloom\",[\"BloomModel\",Fr]],[\"jais\",[\"JAISModel\",zn]],[\"gpt2\",[\"GPT2Model\",Fn]],[\"gptj\",[\"GPTJModel\",qn]],[\"gpt_bigcode\",[\"GPTBigCodeModel\",Wn]],[\"gpt_neo\",[\"GPTNeoModel\",Ln]],[\"gpt_neox\",[\"GPTNeoXModel\",Nn]],[\"codegen\",[\"CodeGenModel\",Kn]],[\"llama\",[\"LlamaModel\",Zn]],[\"olmo\",[\"OlmoModel\",ar]],[\"mobilellm\",[\"MobileLLMModel\",tr]],[\"granite\",[\"GraniteModel\",or]],[\"cohere\",[\"CohereModel\",dr]],[\"gemma\",[\"GemmaModel\",hr]],[\"gemma2\",[\"Gemma2Model\",gr]],[\"openelm\",[\"OpenELMModel\",yr]],[\"qwen2\",[\"Qwen2Model\",xr]],[\"phi\",[\"PhiModel\",kr]],[\"phi3\",[\"Phi3Model\",Sr]],[\"mpt\",[\"MptModel\",zr]],[\"opt\",[\"OPTModel\",Lr]],[\"mistral\",[\"MistralModel\",vi]],[\"starcoder2\",[\"Starcoder2Model\",Ti]],[\"falcon\",[\"FalconModel\",Ci]],[\"stablelm\",[\"StableLmModel\",Ni]]]),mo=new Map([[\"speecht5\",[\"SpeechT5ForSpeechToText\",fi]],[\"whisper\",[\"WhisperForConditionalGeneration\",ln]]]),fo=new Map([[\"speecht5\",[\"SpeechT5ForTextToSpeech\",gi]]]),go=new Map([[\"vits\",[\"VitsModel\",zi]],[\"musicgen\",[\"MusicgenForConditionalGeneration\",Xi]]]),_o=new Map([[\"bert\",[\"BertForSequenceClassification\",K]],[\"roformer\",[\"RoFormerForSequenceClassification\",re]],[\"electra\",[\"ElectraForSequenceClassification\",fe]],[\"esm\",[\"EsmForSequenceClassification\",Ue]],[\"convbert\",[\"ConvBertForSequenceClassification\",ue]],[\"camembert\",[\"CamembertForSequenceClassification\",ve]],[\"deberta\",[\"DebertaForSequenceClassification\",Ce]],[\"deberta-v2\",[\"DebertaV2ForSequenceClassification\",Ie]],[\"mpnet\",[\"MPNetForSequenceClassification\",tt]],[\"albert\",[\"AlbertForSequenceClassification\",ct]],[\"distilbert\",[\"DistilBertForSequenceClassification\",De]],[\"roberta\",[\"RobertaForSequenceClassification\",Vt]],[\"xlm\",[\"XLMForSequenceClassification\",Ht]],[\"xlm-roberta\",[\"XLMRobertaForSequenceClassification\",Jt]],[\"bart\",[\"BartForSequenceClassification\",$t]],[\"mbart\",[\"MBartForSequenceClassification\",Et]],[\"mobilebert\",[\"MobileBertForSequenceClassification\",Qe]],[\"squeezebert\",[\"SqueezeBertForSequenceClassification\",ot]]]),wo=new Map([[\"bert\",[\"BertForTokenClassification\",Q]],[\"roformer\",[\"RoFormerForTokenClassification\",ae]],[\"electra\",[\"ElectraForTokenClassification\",ge]],[\"esm\",[\"EsmForTokenClassification\",We]],[\"convbert\",[\"ConvBertForTokenClassification\",de]],[\"camembert\",[\"CamembertForTokenClassification\",xe]],[\"deberta\",[\"DebertaForTokenClassification\",Se]],[\"deberta-v2\",[\"DebertaV2ForTokenClassification\",ze]],[\"mpnet\",[\"MPNetForTokenClassification\",nt]],[\"distilbert\",[\"DistilBertForTokenClassification\",Re]],[\"roberta\",[\"RobertaForTokenClassification\",jt]],[\"xlm\",[\"XLMForTokenClassification\",Xt]],[\"xlm-roberta\",[\"XLMRobertaForTokenClassification\",en]]]),yo=new Map([[\"t5\",[\"T5ForConditionalGeneration\",gt]],[\"longt5\",[\"LongT5ForConditionalGeneration\",yt]],[\"mt5\",[\"MT5ForConditionalGeneration\",xt]],[\"bart\",[\"BartForConditionalGeneration\",kt]],[\"mbart\",[\"MBartForConditionalGeneration\",Pt]],[\"marian\",[\"MarianMTModel\",Es]],[\"m2m_100\",[\"M2M100ForConditionalGeneration\",Is]],[\"blenderbot\",[\"BlenderbotForConditionalGeneration\",zt]],[\"blenderbot-small\",[\"BlenderbotSmallForConditionalGeneration\",Lt]]]),bo=new Map([[\"bloom\",[\"BloomForCausalLM\",Ar]],[\"gpt2\",[\"GPT2LMHeadModel\",An]],[\"jais\",[\"JAISLMHeadModel\",On]],[\"gptj\",[\"GPTJForCausalLM\",Gn]],[\"gpt_bigcode\",[\"GPTBigCodeForCausalLM\",Hn]],[\"gpt_neo\",[\"GPTNeoForCausalLM\",Dn]],[\"gpt_neox\",[\"GPTNeoXForCausalLM\",Vn]],[\"codegen\",[\"CodeGenForCausalLM\",Qn]],[\"llama\",[\"LlamaForCausalLM\",Jn]],[\"olmo\",[\"OlmoForCausalLM\",sr]],[\"mobilellm\",[\"MobileLLMForCausalLM\",nr]],[\"granite\",[\"GraniteForCausalLM\",lr]],[\"cohere\",[\"CohereForCausalLM\",cr]],[\"gemma\",[\"GemmaForCausalLM\",mr]],[\"gemma2\",[\"Gemma2ForCausalLM\",_r]],[\"openelm\",[\"OpenELMForCausalLM\",br]],[\"qwen2\",[\"Qwen2ForCausalLM\",Mr]],[\"phi\",[\"PhiForCausalLM\",$r]],[\"phi3\",[\"Phi3ForCausalLM\",Pr]],[\"mpt\",[\"MptForCausalLM\",Or]],[\"opt\",[\"OPTForCausalLM\",Dr]],[\"mbart\",[\"MBartForCausalLM\",Ft]],[\"mistral\",[\"MistralForCausalLM\",xi]],[\"starcoder2\",[\"Starcoder2ForCausalLM\",ki]],[\"falcon\",[\"FalconForCausalLM\",Si]],[\"trocr\",[\"TrOCRForCausalLM\",yi]],[\"stablelm\",[\"StableLmForCausalLM\",Vi]]]),vo=new Map([[\"bert\",[\"BertForMaskedLM\",X]],[\"roformer\",[\"RoFormerForMaskedLM\",ne]],[\"electra\",[\"ElectraForMaskedLM\",me]],[\"esm\",[\"EsmForMaskedLM\",Ge]],[\"convbert\",[\"ConvBertForMaskedLM\",le]],[\"camembert\",[\"CamembertForMaskedLM\",be]],[\"deberta\",[\"DebertaForMaskedLM\",$e]],[\"deberta-v2\",[\"DebertaV2ForMaskedLM\",Ae]],[\"mpnet\",[\"MPNetForMaskedLM\",et]],[\"albert\",[\"AlbertForMaskedLM\",ht]],[\"distilbert\",[\"DistilBertForMaskedLM\",Ve]],[\"roberta\",[\"RobertaForMaskedLM\",Nt]],[\"xlm\",[\"XLMWithLMHeadModel\",Wt]],[\"xlm-roberta\",[\"XLMRobertaForMaskedLM\",Zt]],[\"mobilebert\",[\"MobileBertForMaskedLM\",Ke]],[\"squeezebert\",[\"SqueezeBertForMaskedLM\",it]]]),xo=new Map([[\"bert\",[\"BertForQuestionAnswering\",Y]],[\"roformer\",[\"RoFormerForQuestionAnswering\",se]],[\"electra\",[\"ElectraForQuestionAnswering\",_e]],[\"convbert\",[\"ConvBertForQuestionAnswering\",ce]],[\"camembert\",[\"CamembertForQuestionAnswering\",Me]],[\"deberta\",[\"DebertaForQuestionAnswering\",Pe]],[\"deberta-v2\",[\"DebertaV2ForQuestionAnswering\",Oe]],[\"mpnet\",[\"MPNetForQuestionAnswering\",rt]],[\"albert\",[\"AlbertForQuestionAnswering\",pt]],[\"distilbert\",[\"DistilBertForQuestionAnswering\",Ne]],[\"roberta\",[\"RobertaForQuestionAnswering\",qt]],[\"xlm\",[\"XLMForQuestionAnswering\",Kt]],[\"xlm-roberta\",[\"XLMRobertaForQuestionAnswering\",tn]],[\"mobilebert\",[\"MobileBertForQuestionAnswering\",Ye]],[\"squeezebert\",[\"SqueezeBertForQuestionAnswering\",lt]]]),Mo=new Map([[\"vision-encoder-decoder\",[\"VisionEncoderDecoderModel\",un]]]),To=new Map([[\"llava\",[\"LlavaForConditionalGeneration\",cn]],[\"moondream1\",[\"Moondream1ForConditionalGeneration\",pn]],[\"florence2\",[\"Florence2ForConditionalGeneration\",mn]]]),ko=new Map([[\"vision-encoder-decoder\",[\"VisionEncoderDecoderModel\",un]]]),$o=new Map([[\"vit\",[\"ViTForImageClassification\",Vr]],[\"pvt\",[\"PvtForImageClassification\",Gr]],[\"vit_msn\",[\"ViTMSNForImageClassification\",Kr]],[\"fastvit\",[\"FastViTForImageClassification\",ea]],[\"mobilevit\",[\"MobileViTForImageClassification\",sa]],[\"mobilevitv2\",[\"MobileViTV2ForImageClassification\",la]],[\"beit\",[\"BeitForImageClassification\",_a]],[\"deit\",[\"DeiTForImageClassification\",za]],[\"hiera\",[\"HieraForImageClassification\",La]],[\"convnext\",[\"ConvNextForImageClassification\",ms]],[\"convnextv2\",[\"ConvNextV2ForImageClassification\",_s]],[\"dinov2\",[\"Dinov2ForImageClassification\",bs]],[\"resnet\",[\"ResNetForImageClassification\",Na]],[\"swin\",[\"SwinForImageClassification\",qa]],[\"segformer\",[\"SegformerForImageClassification\",Li]],[\"efficientnet\",[\"EfficientNetForImageClassification\",Gi]],[\"mobilenet_v1\",[\"MobileNetV1ForImageClassification\",Yi]],[\"mobilenet_v2\",[\"MobileNetV2ForImageClassification\",eo]],[\"mobilenet_v3\",[\"MobileNetV3ForImageClassification\",ro]],[\"mobilenet_v4\",[\"MobileNetV4ForImageClassification\",io]]]),Co=new Map([[\"detr\",[\"DetrForObjectDetection\",ba]],[\"rt_detr\",[\"RTDetrForObjectDetection\",$a]],[\"table-transformer\",[\"TableTransformerForObjectDetection\",Ea]],[\"yolos\",[\"YolosForObjectDetection\",Ms]]]),So=new Map([[\"owlvit\",[\"OwlViTForObjectDetection\",ca]],[\"owlv2\",[\"Owlv2ForObjectDetection\",ma]]]),Po=new Map([[\"detr\",[\"DetrForSegmentation\",va]],[\"clipseg\",[\"CLIPSegForImageSegmentation\",Pn]]]),Eo=new Map([[\"segformer\",[\"SegformerForSemanticSegmentation\",Di]],[\"sapiens\",[\"SapiensForSemanticSegmentation\",Ja]]]),Fo=new Map([[\"detr\",[\"DetrForSegmentation\",va]],[\"maskformer\",[\"MaskFormerForInstanceSegmentation\",is]]]),Ao=new Map([[\"sam\",[\"SamModel\",$s]]]),Io=new Map([[\"wav2vec2\",[\"Wav2Vec2ForCTC\",Bs]],[\"wav2vec2-bert\",[\"Wav2Vec2BertForCTC\",ti]],[\"unispeech\",[\"UniSpeechForCTC\",Ws]],[\"unispeech-sat\",[\"UniSpeechSatForCTC\",Qs]],[\"wavlm\",[\"WavLMForCTC\",ui]],[\"hubert\",[\"HubertForCTC\",si]]]),zo=new Map([[\"wav2vec2\",[\"Wav2Vec2ForSequenceClassification\",Ls]],[\"wav2vec2-bert\",[\"Wav2Vec2BertForSequenceClassification\",ni]],[\"unispeech\",[\"UniSpeechForSequenceClassification\",Hs]],[\"unispeech-sat\",[\"UniSpeechSatForSequenceClassification\",Ys]],[\"wavlm\",[\"WavLMForSequenceClassification\",di]],[\"hubert\",[\"HubertForSequenceClassification\",ii]],[\"audio-spectrogram-transformer\",[\"ASTForAudioClassification\",an]]]),Oo=new Map([[\"wavlm\",[\"WavLMForXVector\",ci]]]),Bo=new Map([[\"unispeech-sat\",[\"UniSpeechSatForAudioFrameClassification\",Zs]],[\"wavlm\",[\"WavLMForAudioFrameClassification\",pi]],[\"wav2vec2\",[\"Wav2Vec2ForAudioFrameClassification\",Ds]],[\"pyannote\",[\"PyAnnoteForAudioFrameClassification\",Vs]]]),Lo=new Map([[\"vitmatte\",[\"VitMatteForImageMatting\",na]]]),Do=new Map([[\"swin2sr\",[\"Swin2SRForImageSuperResolution\",Wa]]]),Ro=new Map([[\"dpt\",[\"DPTForDepthEstimation\",Ka]],[\"depth_anything\",[\"DepthAnythingForDepthEstimation\",Ya]],[\"glpn\",[\"GLPNForDepthEstimation\",us]],[\"sapiens\",[\"SapiensForDepthEstimation\",es]],[\"depth_pro\",[\"DepthProForDepthEstimation\",rs]]]),No=new Map([[\"sapiens\",[\"SapiensForNormalEstimation\",ts]]]),Vo=new Map([[\"clip\",[\"CLIPVisionModelWithProjection\",bn]],[\"siglip\",[\"SiglipVisionModel\",Tn]]]),jo=[[co,y],[po,b],[ho,M],[_o,y],[wo,y],[yo,v],[mo,v],[bo,M],[vo,y],[xo,y],[Mo,x],[To,k],[$o,y],[Po,y],[Fo,y],[Eo,y],[Lo,y],[Do,y],[Ro,y],[No,y],[Co,y],[So,y],[Ao,T],[Io,y],[zo,y],[fo,v],[go,y],[Oo,y],[Bo,y],[Vo,y]];for(const[e,t]of jo)for(const[n,r]of e.values())C.set(n,t),P.set(r,n),S.set(n,r);const qo=[[\"MusicgenForConditionalGeneration\",Xi,$],[\"CLIPTextModelWithProjection\",wn,y],[\"SiglipTextModel\",Mn,y],[\"ClapTextModelWithProjection\",Fi,y],[\"ClapAudioModelWithProjection\",Ai,y]];for(const[e,t,n]of qo)C.set(e,n),P.set(t,e),S.set(e,t);class Go extends uo{static MODEL_CLASS_MAPPINGS=jo.map((e=>e[0]));static BASE_IF_FAIL=!0}class Uo extends uo{static MODEL_CLASS_MAPPINGS=[_o]}class Wo extends uo{static MODEL_CLASS_MAPPINGS=[wo]}class Ho extends uo{static MODEL_CLASS_MAPPINGS=[yo]}class Xo extends uo{static MODEL_CLASS_MAPPINGS=[mo]}class Ko extends uo{static MODEL_CLASS_MAPPINGS=[fo]}class Qo extends uo{static MODEL_CLASS_MAPPINGS=[go]}class Yo extends uo{static MODEL_CLASS_MAPPINGS=[bo]}class Zo extends uo{static MODEL_CLASS_MAPPINGS=[vo]}class Jo extends uo{static MODEL_CLASS_MAPPINGS=[xo]}class el extends uo{static MODEL_CLASS_MAPPINGS=[Mo]}class tl extends uo{static MODEL_CLASS_MAPPINGS=[$o]}class nl extends uo{static MODEL_CLASS_MAPPINGS=[Po]}class rl extends uo{static MODEL_CLASS_MAPPINGS=[Eo]}class al extends uo{static MODEL_CLASS_MAPPINGS=[Fo]}class sl extends uo{static MODEL_CLASS_MAPPINGS=[Co]}class il extends uo{static MODEL_CLASS_MAPPINGS=[So]}class ol extends uo{static MODEL_CLASS_MAPPINGS=[Ao]}class ll extends uo{static MODEL_CLASS_MAPPINGS=[Io]}class ul extends uo{static MODEL_CLASS_MAPPINGS=[zo]}class dl extends uo{static MODEL_CLASS_MAPPINGS=[Oo]}class cl extends uo{static MODEL_CLASS_MAPPINGS=[Bo]}class pl extends uo{static MODEL_CLASS_MAPPINGS=[ko]}class hl extends uo{static MODEL_CLASS_MAPPINGS=[Lo]}class ml extends uo{static MODEL_CLASS_MAPPINGS=[Do]}class fl extends uo{static MODEL_CLASS_MAPPINGS=[Ro]}class gl extends uo{static MODEL_CLASS_MAPPINGS=[No]}class _l extends uo{static MODEL_CLASS_MAPPINGS=[Vo]}class wl extends G{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:a=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=a}}class yl extends G{constructor({logits:e}){super(),this.logits=e}}class bl extends G{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class vl extends G{constructor({logits:e}){super(),this.logits=e}}class xl extends G{constructor({logits:e}){super(),this.logits=e}}class Ml extends G{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class Tl extends G{constructor({logits:e}){super(),this.logits=e}}class kl extends G{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class $l extends G{constructor({alphas:e}){super(),this.alphas=e}}class Cl extends G{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},\"./src/models/whisper/common_whisper.js\":\n/*!**********************************************!*\\\n  !*** ./src/models/whisper/common_whisper.js ***!\n  \\**********************************************/(e,t,n)=>{n.r(t),n.d(t,{WHISPER_LANGUAGE_MAPPING:()=>a,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>s,whisper_language_to_code:()=>i});const r=[[\"en\",\"english\"],[\"zh\",\"chinese\"],[\"de\",\"german\"],[\"es\",\"spanish\"],[\"ru\",\"russian\"],[\"ko\",\"korean\"],[\"fr\",\"french\"],[\"ja\",\"japanese\"],[\"pt\",\"portuguese\"],[\"tr\",\"turkish\"],[\"pl\",\"polish\"],[\"ca\",\"catalan\"],[\"nl\",\"dutch\"],[\"ar\",\"arabic\"],[\"sv\",\"swedish\"],[\"it\",\"italian\"],[\"id\",\"indonesian\"],[\"hi\",\"hindi\"],[\"fi\",\"finnish\"],[\"vi\",\"vietnamese\"],[\"he\",\"hebrew\"],[\"uk\",\"ukrainian\"],[\"el\",\"greek\"],[\"ms\",\"malay\"],[\"cs\",\"czech\"],[\"ro\",\"romanian\"],[\"da\",\"danish\"],[\"hu\",\"hungarian\"],[\"ta\",\"tamil\"],[\"no\",\"norwegian\"],[\"th\",\"thai\"],[\"ur\",\"urdu\"],[\"hr\",\"croatian\"],[\"bg\",\"bulgarian\"],[\"lt\",\"lithuanian\"],[\"la\",\"latin\"],[\"mi\",\"maori\"],[\"ml\",\"malayalam\"],[\"cy\",\"welsh\"],[\"sk\",\"slovak\"],[\"te\",\"telugu\"],[\"fa\",\"persian\"],[\"lv\",\"latvian\"],[\"bn\",\"bengali\"],[\"sr\",\"serbian\"],[\"az\",\"azerbaijani\"],[\"sl\",\"slovenian\"],[\"kn\",\"kannada\"],[\"et\",\"estonian\"],[\"mk\",\"macedonian\"],[\"br\",\"breton\"],[\"eu\",\"basque\"],[\"is\",\"icelandic\"],[\"hy\",\"armenian\"],[\"ne\",\"nepali\"],[\"mn\",\"mongolian\"],[\"bs\",\"bosnian\"],[\"kk\",\"kazakh\"],[\"sq\",\"albanian\"],[\"sw\",\"swahili\"],[\"gl\",\"galician\"],[\"mr\",\"marathi\"],[\"pa\",\"punjabi\"],[\"si\",\"sinhala\"],[\"km\",\"khmer\"],[\"sn\",\"shona\"],[\"yo\",\"yoruba\"],[\"so\",\"somali\"],[\"af\",\"afrikaans\"],[\"oc\",\"occitan\"],[\"ka\",\"georgian\"],[\"be\",\"belarusian\"],[\"tg\",\"tajik\"],[\"sd\",\"sindhi\"],[\"gu\",\"gujarati\"],[\"am\",\"amharic\"],[\"yi\",\"yiddish\"],[\"lo\",\"lao\"],[\"uz\",\"uzbek\"],[\"fo\",\"faroese\"],[\"ht\",\"haitian creole\"],[\"ps\",\"pashto\"],[\"tk\",\"turkmen\"],[\"nn\",\"nynorsk\"],[\"mt\",\"maltese\"],[\"sa\",\"sanskrit\"],[\"lb\",\"luxembourgish\"],[\"my\",\"myanmar\"],[\"bo\",\"tibetan\"],[\"tl\",\"tagalog\"],[\"mg\",\"malagasy\"],[\"as\",\"assamese\"],[\"tt\",\"tatar\"],[\"haw\",\"hawaiian\"],[\"ln\",\"lingala\"],[\"ha\",\"hausa\"],[\"ba\",\"bashkir\"],[\"jw\",\"javanese\"],[\"su\",\"sundanese\"]],a=new Map(r),s=new Map([...r.map((([e,t])=>[t,e])),[\"burmese\",\"my\"],[\"valencian\",\"ca\"],[\"flemish\",\"nl\"],[\"haitian\",\"ht\"],[\"letzeburgesch\",\"lb\"],[\"pushto\",\"ps\"],[\"panjabi\",\"pa\"],[\"moldavian\",\"ro\"],[\"moldovan\",\"ro\"],[\"sinhalese\",\"si\"],[\"castilian\",\"es\"]]);function i(e){e=e.toLowerCase();let t=s.get(e);if(void 0===t){if(!a.has(e)){const t=2===e.length?a.keys():a.values();throw new Error(`Language \"${e}\" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}return t}},\"./src/models/whisper/generation_whisper.js\":\n/*!**************************************************!*\\\n  !*** ./src/models/whisper/generation_whisper.js ***!\n  \\**************************************************/(e,t,n)=>{n.r(t),n.d(t,{WhisperGenerationConfig:()=>a});const r=n(/*! ../../generation/configuration_utils.js */\"./src/generation/configuration_utils.js\");class a extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},\"./src/ops/registry.js\":\n/*!*****************************!*\\\n  !*** ./src/ops/registry.js ***!\n  \\*****************************/(e,t,n)=>{n.r(t),n.d(t,{TensorOpRegistry:()=>i});const r=n(/*! ../backends/onnx.js */\"./src/backends/onnx.js\"),a=n(/*! ../utils/tensor.js */\"./src/utils/tensor.js\");const s=async(e,t,n)=>{const s=await(0,r.createInferenceSession)(new Uint8Array(e),t);return async e=>{const t=Object.fromEntries(Object.entries(e).map((([e,t])=>[e,t.ort_tensor]))),r=await s.run(t);return Array.isArray(n)?n.map((e=>new a.Tensor(r[e]))):new a.Tensor(r[n])}};class i{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=s([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,\"y\")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=s([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,\"y\")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=s([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,\"c\")),this._matmul}static get stft(){return this._stft||(this._stft=s([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,\"o\")),this._stft}static get rfft(){return this._rfft||(this._rfft=s([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,\"y\")),this._rfft}static get top_k(){return this._top_k||(this._top_k=s([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,[\"v\",\"i\"])),this._top_k}}},\"./src/pipelines.js\":\n/*!**************************!*\\\n  !*** ./src/pipelines.js ***!\n  \\**************************/(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>S,AutomaticSpeechRecognitionPipeline:()=>E,DepthEstimationPipeline:()=>N,DocumentQuestionAnsweringPipeline:()=>L,FeatureExtractionPipeline:()=>$,FillMaskPipeline:()=>y,ImageClassificationPipeline:()=>A,ImageFeatureExtractionPipeline:()=>C,ImageSegmentationPipeline:()=>I,ImageToImagePipeline:()=>R,ImageToTextPipeline:()=>F,ObjectDetectionPipeline:()=>O,Pipeline:()=>f,QuestionAnsweringPipeline:()=>w,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>b,TextClassificationPipeline:()=>g,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>D,TokenClassificationPipeline:()=>_,TranslationPipeline:()=>x,ZeroShotAudioClassificationPipeline:()=>P,ZeroShotClassificationPipeline:()=>k,ZeroShotImageClassificationPipeline:()=>z,ZeroShotObjectDetectionPipeline:()=>B,pipeline:()=>q});const r=n(/*! ./tokenizers.js */\"./src/tokenizers.js\"),a=n(/*! ./models.js */\"./src/models.js\"),s=n(/*! ./processors.js */\"./src/processors.js\"),i=n(/*! ./utils/generic.js */\"./src/utils/generic.js\"),o=n(/*! ./utils/core.js */\"./src/utils/core.js\"),l=n(/*! ./utils/maths.js */\"./src/utils/maths.js\"),u=n(/*! ./utils/audio.js */\"./src/utils/audio.js\"),d=n(/*! ./utils/tensor.js */\"./src/utils/tensor.js\"),c=n(/*! ./utils/image.js */\"./src/utils/image.js\");async function p(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>c.RawImage.read(e))))}async function h(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>\"string\"==typeof e||e instanceof URL?(0,u.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function m(e,t){t&&(e=e.map((e=>0|e)));const[n,r,a,s]=e;return{xmin:n,ymin:r,xmax:a,ymax:s}}class f extends i.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class g extends f{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),a=\"multi_label_classification\"===this.model.config.problem_type?e=>e.sigmoid():e=>new d.Tensor(\"float32\",(0,l.softmax)(e.data),e.dims),s=this.model.config.id2label,i=[];for(const e of r.logits){const n=a(e),r=await(0,d.topk)(n,t),o=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:o[t]})));1===t?i.push(...l):i.push(l)}return Array.isArray(e)||1===t?i:i[0]}}class _ extends f{constructor(e){super(e)}async _call(e,{ignore_labels:t=[\"O\"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),a=(await this.model(r)).logits,s=this.model.config.id2label,i=[];for(let e=0;e<a.dims[0];++e){const n=r.input_ids[e],o=a[e],u=[];for(let e=0;e<o.dims[0];++e){const r=o[e],a=(0,l.max)(r.data)[1],i=s?s[a]:`LABEL_${a}`;if(t.includes(i))continue;const d=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(\"\"===d)continue;const c=(0,l.softmax)(r.data);u.push({entity:i,score:c[a],index:e,word:d})}i.push(u)}return n?i:i[0]}}class w extends f{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:a,end_logits:s}=await this.model(r),i=r.input_ids.tolist(),u=r.attention_mask.tolist(),d=this.tokenizer.all_special_ids,c=[];for(let e=0;e<a.dims[0];++e){const t=i[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),p=(u[e].map(((e,n)=>1==e&&(0===n||n>r&&-1===d.findIndex((e=>e==t[n]))))),a[e].tolist()),h=s[e].tolist();for(let n=1;n<p.length;++n)(0==u[e]||n<=r||-1!==d.findIndex((e=>e==t[n])))&&(p[n]=-1/0,h[n]=-1/0);const m=(0,l.softmax)(p).map(((e,t)=>[e,t])),f=(0,l.softmax)(h).map(((e,t)=>[e,t]));m[0][0]=0,f[0][0]=0;const g=(0,o.product)(m,f).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(g.length,n);++e){const[n,r,a]=g[e],s=t.slice(n,r+1),i=this.tokenizer.decode(s,{skip_special_tokens:!0});c.push({answer:i,score:a})}}return 1===n?c[0]:c}}class y extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),a=[],s=n.input_ids.tolist();for(let e=0;e<s.length;++e){const n=s[e],i=n.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===i)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const o=r[e][i],u=await(0,d.topk)(new d.Tensor(\"float32\",(0,l.softmax)(o.data),o.dims),t),c=u[0].tolist(),p=u[1].tolist();a.push(p.map(((e,t)=>{const r=n.slice();return r[i]=e,{score:c[t],token:Number(e),token_str:this.tokenizer.model.vocab[e],sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?a:a[0]}}class b extends f{_key=\"generated_text\";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,a={padding:!0,truncation:!0};let s;s=this instanceof x&&\"_build_translation_inputs\"in r?r._build_translation_inputs(e,a,t):r(e,a);const i=await this.model.generate({...s,...t});return r.batch_decode(i,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class v extends b{_key=\"summary_text\";constructor(e){super(e)}}class x extends b{_key=\"translation_text\";constructor(e){super(e)}}function M(e){return Array.isArray(e)&&e.every((e=>\"role\"in e&&\"content\"in e))}class T extends f{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,a=!1;if(\"string\"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every((e=>\"string\"==typeof e)))r=!0,n=e;else{if(M(e))e=[e];else{if(!Array.isArray(e)||!e.every(M))throw new Error(\"Input must be a string, an array of strings, a Chat, or an array of Chats\");r=!0}a=!0,n=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const s=t.add_special_tokens??!1,i=!a&&(t.return_full_text??!0);this.tokenizer.padding_side=\"left\";const o=this.tokenizer(n,{add_special_tokens:s,padding:!0,truncation:!0}),l=await this.model.generate({...o,...t}),u=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!i&&o.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(o.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const c=Array.from({length:e.length},(e=>[]));for(let t=0;t<u.length;++t){const n=Math.floor(t/l.dims[0]*e.length);d&&(u[t]=u[t].slice(d[n])),c[n].push({generated_text:a?[...e[n],{role:\"assistant\",content:u[t]}]:u[t]})}return r||1!==c.length?c:c[0]}}class k extends f{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn(\"Could not find 'entailment' in label2id mapping. Using 2 as entailment_id.\"),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn(\"Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id.\"),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n=\"This example is {}.\",multi_label:r=!1}={}){const a=Array.isArray(e);a||(e=[e]),Array.isArray(t)||(t=[t]);const s=t.map((e=>n.replace(\"{}\",e))),i=r||1===t.length,o=[];for(const n of e){const e=[];for(const t of s){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),a=await this.model(r);i?e.push([a.logits.data[this.contradiction_id],a.logits.data[this.entailment_id]]):e.push(a.logits.data[this.entailment_id])}const r=(i?e.map((e=>(0,l.softmax)(e)[1])):(0,l.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));o.push({sequence:n,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return a?o:o[0]}}class $ extends f{constructor(e){super(e)}async _call(e,{pooling:t=\"none\",normalize:n=!1,quantize:r=!1,precision:a=\"binary\"}={}){const s=this.tokenizer(e,{padding:!0,truncation:!0}),i=await this.model(s);let o=i.last_hidden_state??i.logits??i.token_embeddings;if(\"none\"===t);else if(\"mean\"===t)o=(0,d.mean_pooling)(o,s.attention_mask);else{if(\"cls\"!==t)throw Error(`Pooling method '${t}' not supported.`);o=o.slice(null,0)}return n&&(o=o.normalize(2,-1)),r&&(o=(0,d.quantize_embeddings)(o,a)),o}}class C extends f{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),a=await this.model({pixel_values:r});let s;if(t){if(!(\"pooler_output\"in a))throw Error(\"No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.\");s=a.pooler_output}else s=a.last_hidden_state??a.logits??a.image_embeds;return s}}class S extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await h(e,n),a=this.model.config.id2label,s=[];for(const e of r){const n=await this.processor(e),r=(await this.model(n)).logits[0],i=await(0,d.topk)(new d.Tensor(\"float32\",(0,l.softmax)(r.data),r.dims),t),o=i[0].tolist(),u=i[1].tolist().map(((e,t)=>({label:a?a[e]:`LABEL_${e}`,score:o[t]})));s.push(u)}return Array.isArray(e)?s:s[0]}}class P extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n=\"This is a sound of {}.\"}={}){const r=!Array.isArray(e);r&&(e=[e]);const a=t.map((e=>n.replace(\"{}\",e))),s=this.tokenizer(a,{padding:!0,truncation:!0}),i=this.processor.feature_extractor.config.sampling_rate,o=await h(e,i),u=[];for(const e of o){const n=await this.processor(e),r=await this.model({...s,...n}),a=(0,l.softmax)(r.logits_per_audio.data);u.push([...a].map(((e,n)=>({score:e,label:t[n]}))))}return r?u[0]:u}}class E extends f{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case\"whisper\":return this._call_whisper(e,t);case\"wav2vec2\":case\"wav2vec2-bert\":case\"unispeech\":case\"unispeech-sat\":case\"hubert\":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to \"English\".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to \"transcribe\".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,a=await h(e,r),s=[];for(const e of a){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push((0,l.max)(e.data)[1]);const a=this.tokenizer.decode(r);s.push({text:a})}return n?s[0]:s}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,a=t.force_full_sequences??!1;let s=t.stride_length_s??null;const i={...t};\"word\"===n&&(i.return_token_timestamps=!0,i.return_timestamps=!1);const o=!Array.isArray(e);o&&(e=[e]);const u=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,c=this.processor.feature_extractor.config.sampling_rate,p=await h(e,c),m=[];for(const e of p){let t=[];if(r>0){if(null===s)s=r/6;else if(r<=s)throw Error(\"`chunk_length_s` must be larger than `stride_length_s`.\");const n=c*r,a=c*s,i=n-2*a;let o=0;for(;;){const r=o+n,s=e.subarray(o,r),l=await this.processor(s),u=0===o,d=r>=e.length;if(t.push({stride:[s.length,u?0:a,d?0:a],input_features:l.input_features,is_last:d}),d)break;o+=i}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){i.num_frames=Math.floor(e.stride[0]/d);const t=await this.model.generate({inputs:e.input_features,...i});\"word\"===n?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>(0,l.round)(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/c))}const[o,p]=this.tokenizer._decode_asr(t,{time_precision:u,return_timestamps:n,force_full_sequences:a});m.push({text:o,...p})}return o?m[0]:m}}class F extends f{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await p(e),{pixel_values:a}=await this.processor(r),s=[];for(const e of a){e.dims=[1,...e.dims];const n=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));s.push(r)}return n?s:s[0]}}class A extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),a=await this.model({pixel_values:r}),s=this.model.config.id2label,i=[];for(const e of a.logits){const n=await(0,d.topk)(new d.Tensor(\"float32\",(0,l.softmax)(e.data),e.dims),t),r=n[0].tolist(),a=n[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:r[t]})));i.push(a)}return Array.isArray(e)?i:i[0]}}class I extends f{constructor(e){super(e),this.subtasks_mapping={panoptic:\"post_process_panoptic_segmentation\",instance:\"post_process_instance_segmentation\",semantic:\"post_process_semantic_segmentation\"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:a=null,target_sizes:s=null,subtask:i=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error(\"Image segmentation pipeline currently only supports a batch size of 1.\");const o=await p(e),l=o.map((e=>[e.height,e.width])),{pixel_values:u,pixel_mask:d}=await this.processor(o),h=await this.model({pixel_values:u,pixel_mask:d});let m=null;if(null!==i)m=this.subtasks_mapping[i];else for(const[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.feature_extractor){m=this.processor.feature_extractor[t].bind(this.processor.feature_extractor),i=e;break}const f=this.model.config.id2label,g=[];if(\"panoptic\"===i||\"instance\"===i){const e=m(h,t,n,r,a,s??l)[0],i=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(i.data.length);for(let n=0;n<i.data.length;++n)i.data[n]===t.id&&(e[n]=255);const n=new c.RawImage(e,i.dims[1],i.dims[0],1);g.push({score:t.score,label:f[t.label_id],mask:n})}}else{if(\"semantic\"!==i)throw Error(`Subtask ${i} not supported.`);{const{segmentation:e,labels:t}=m(h,s??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new c.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:f[n],mask:r})}}}return g}}class z extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n=\"This is a photo of {}\"}={}){const r=Array.isArray(e),a=await p(e),s=t.map((e=>n.replace(\"{}\",e))),i=this.tokenizer(s,{padding:\"siglip\"!==this.model.config.model_type||\"max_length\",truncation:!0}),{pixel_values:o}=await this.processor(a),u=await this.model({...i,pixel_values:o}),d=\"siglip\"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),c=[];for(const e of u.logits_per_image){const n=[...d(e)].map(((e,n)=>({score:e,label:t[n]})));n.sort(((e,t)=>t.score-e.score)),c.push(n)}return r?c:c[0]}}class O extends f{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error(\"Object detection pipeline currently only supports a batch size of 1.\");const a=await p(e),s=n?null:a.map((e=>[e.height,e.width])),{pixel_values:i,pixel_mask:o}=await this.processor(a),l=await this.model({pixel_values:i,pixel_mask:o}),u=this.processor.feature_extractor.post_process_object_detection(l,t,s),d=this.model.config.id2label,c=u.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:m(t,!n)})))));return r?c:c[0]}}class B extends f{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:a=!1}={}){const s=Array.isArray(e),i=await p(e),o=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(i),u=[];for(let e=0;e<i.length;++e){const s=i[e],d=a?null:[[s.height,s.width]],c=l.pixel_values[e].unsqueeze_(0),p=await this.model({...o,pixel_values:c}),h=this.processor.feature_extractor.post_process_object_detection(p,n,d,!0)[0];let f=h.boxes.map(((e,n)=>({score:h.scores[n],label:t[h.classes[n]],box:m(e,!a)}))).sort(((e,t)=>t.score-e.score));null!==r&&(f=f.slice(0,r)),u.push(f)}return s?u:u[0]}}class L extends f{constructor(e){super(e)}async _call(e,t,n={}){const r=(await p(e))[0],{pixel_values:a}=await this.processor(r),s=`<s_docvqa><s_question>${t}</s_question><s_answer>`,i=this.tokenizer(s,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,o=await this.model.generate({inputs:a,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:i,...n}),l=this.tokenizer.batch_decode(o)[0].match(/<s_answer>(.*?)<\\/s_answer>/);let u=null;return l&&l.length>=2&&(u=l[1].trim()),[{answer:u}]}}class D extends f{DEFAULT_VOCODER_ID=\"Xenova/speecht5_hifigan\";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return{audio:n.data,sampling_rate:r}}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log(\"No vocoder specified, using default HifiGan vocoder.\"),this.vocoder=await a.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:\"fp32\"})),(\"string\"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new d.Tensor(\"float32\",t,[1,t.length]);else if(!(t instanceof d.Tensor))throw new Error(\"Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.\");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),s=this.processor.feature_extractor.config.sampling_rate;return{audio:r.data,sampling_rate:s}}}class R extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),r=await this.model(n),a=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to(\"uint8\");a.push(c.RawImage.fromTensor(t))}return a.length>1?a:a[0]}}class N extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),a=[];for(let e=0;e<t.length;++e){const n=(0,d.interpolate)(r[e],t[e].size.reverse(),\"bilinear\",!1),s=n.mul_(255/(0,l.max)(n.data)[0]).to(\"uint8\");a.push({predicted_depth:r[e],depth:c.RawImage.fromTensor(s)})}return a.length>1?a:a[0]}}const V=Object.freeze({\"text-classification\":{tokenizer:r.AutoTokenizer,pipeline:g,model:a.AutoModelForSequenceClassification,default:{model:\"Xenova/distilbert-base-uncased-finetuned-sst-2-english\"},type:\"text\"},\"token-classification\":{tokenizer:r.AutoTokenizer,pipeline:_,model:a.AutoModelForTokenClassification,default:{model:\"Xenova/bert-base-multilingual-cased-ner-hrl\"},type:\"text\"},\"question-answering\":{tokenizer:r.AutoTokenizer,pipeline:w,model:a.AutoModelForQuestionAnswering,default:{model:\"Xenova/distilbert-base-cased-distilled-squad\"},type:\"text\"},\"fill-mask\":{tokenizer:r.AutoTokenizer,pipeline:y,model:a.AutoModelForMaskedLM,default:{model:\"Xenova/bert-base-uncased\"},type:\"text\"},summarization:{tokenizer:r.AutoTokenizer,pipeline:v,model:a.AutoModelForSeq2SeqLM,default:{model:\"Xenova/distilbart-cnn-6-6\"},type:\"text\"},translation:{tokenizer:r.AutoTokenizer,pipeline:x,model:a.AutoModelForSeq2SeqLM,default:{model:\"Xenova/t5-small\"},type:\"text\"},\"text2text-generation\":{tokenizer:r.AutoTokenizer,pipeline:b,model:a.AutoModelForSeq2SeqLM,default:{model:\"Xenova/flan-t5-small\"},type:\"text\"},\"text-generation\":{tokenizer:r.AutoTokenizer,pipeline:T,model:a.AutoModelForCausalLM,default:{model:\"Xenova/gpt2\"},type:\"text\"},\"zero-shot-classification\":{tokenizer:r.AutoTokenizer,pipeline:k,model:a.AutoModelForSequenceClassification,default:{model:\"Xenova/distilbert-base-uncased-mnli\"},type:\"text\"},\"audio-classification\":{pipeline:S,model:a.AutoModelForAudioClassification,processor:s.AutoProcessor,default:{model:\"Xenova/wav2vec2-base-superb-ks\"},type:\"audio\"},\"zero-shot-audio-classification\":{tokenizer:r.AutoTokenizer,pipeline:P,model:a.AutoModel,processor:s.AutoProcessor,default:{model:\"Xenova/clap-htsat-unfused\"},type:\"multimodal\"},\"automatic-speech-recognition\":{tokenizer:r.AutoTokenizer,pipeline:E,model:[a.AutoModelForSpeechSeq2Seq,a.AutoModelForCTC],processor:s.AutoProcessor,default:{model:\"Xenova/whisper-tiny.en\"},type:\"multimodal\"},\"text-to-audio\":{tokenizer:r.AutoTokenizer,pipeline:D,model:[a.AutoModelForTextToWaveform,a.AutoModelForTextToSpectrogram],processor:[s.AutoProcessor,null],default:{model:\"Xenova/speecht5_tts\"},type:\"text\"},\"image-to-text\":{tokenizer:r.AutoTokenizer,pipeline:F,model:a.AutoModelForVision2Seq,processor:s.AutoProcessor,default:{model:\"Xenova/vit-gpt2-image-captioning\"},type:\"multimodal\"},\"image-classification\":{pipeline:A,model:a.AutoModelForImageClassification,processor:s.AutoProcessor,default:{model:\"Xenova/vit-base-patch16-224\"},type:\"multimodal\"},\"image-segmentation\":{pipeline:I,model:[a.AutoModelForImageSegmentation,a.AutoModelForSemanticSegmentation,a.AutoModelForUniversalSegmentation],processor:s.AutoProcessor,default:{model:\"Xenova/detr-resnet-50-panoptic\"},type:\"multimodal\"},\"zero-shot-image-classification\":{tokenizer:r.AutoTokenizer,pipeline:z,model:a.AutoModel,processor:s.AutoProcessor,default:{model:\"Xenova/clip-vit-base-patch32\"},type:\"multimodal\"},\"object-detection\":{pipeline:O,model:a.AutoModelForObjectDetection,processor:s.AutoProcessor,default:{model:\"Xenova/detr-resnet-50\"},type:\"multimodal\"},\"zero-shot-object-detection\":{tokenizer:r.AutoTokenizer,pipeline:B,model:a.AutoModelForZeroShotObjectDetection,processor:s.AutoProcessor,default:{model:\"Xenova/owlvit-base-patch32\"},type:\"multimodal\"},\"document-question-answering\":{tokenizer:r.AutoTokenizer,pipeline:L,model:a.AutoModelForDocumentQuestionAnswering,processor:s.AutoProcessor,default:{model:\"Xenova/donut-base-finetuned-docvqa\"},type:\"multimodal\"},\"image-to-image\":{pipeline:R,model:a.AutoModelForImageToImage,processor:s.AutoProcessor,default:{model:\"Xenova/swin2SR-classical-sr-x2-64\"},type:\"image\"},\"depth-estimation\":{pipeline:N,model:a.AutoModelForDepthEstimation,processor:s.AutoProcessor,default:{model:\"Xenova/dpt-large\"},type:\"image\"},\"feature-extraction\":{tokenizer:r.AutoTokenizer,pipeline:$,model:a.AutoModel,default:{model:\"Xenova/all-MiniLM-L6-v2\"},type:\"text\"},\"image-feature-extraction\":{processor:s.AutoProcessor,pipeline:C,model:[a.AutoModelForImageFeatureExtraction,a.AutoModel],default:{model:\"Xenova/vit-base-patch16-224-in21k\"},type:\"image\"}}),j=Object.freeze({\"sentiment-analysis\":\"text-classification\",ner:\"token-classification\",asr:\"automatic-speech-recognition\",\"text-to-speech\":\"text-to-audio\",embeddings:\"feature-extraction\"});async function q(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:a=null,local_files_only:s=!1,revision:i=\"main\",device:l=null,dtype:u=null,model_file_name:d=null,session_options:c={}}={}){e=j[e]??e;const p=V[e.split(\"_\",1)[0]];if(!p)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(V)}]`);t||(t=p.default.model,console.log(`No model specified. Using default model: \"${t}\".`));const h={progress_callback:n,config:r,cache_dir:a,local_files_only:s,revision:i,device:l,dtype:u,model_file_name:d,session_options:c},m=new Map([[\"tokenizer\",p.tokenizer],[\"model\",p.model],[\"processor\",p.processor]]),f=await async function(e,t,n){const r=Object.create(null),a=[];for(const[s,i]of e.entries()){if(!i)continue;let e;e=Array.isArray(i)?new Promise((async(e,r)=>{let a;for(const s of i){if(null===s)return void e(null);try{return void e(await s.from_pretrained(t,n))}catch(e){if(e.message?.includes(\"Unsupported model type\"))a=e;else{if(!e.message?.includes(\"Could not locate file\"))return void r(e);a=e}}}r(a)})):i.from_pretrained(t,n),r[s]=e,a.push(e)}await Promise.all(a);for(const[e,t]of Object.entries(r))r[e]=await t;return r}(m,t,h);f.task=e,(0,o.dispatchCallback)(n,{status:\"ready\",task:e,model:t});return new(0,p.pipeline)(f)}},\"./src/processors.js\":\n/*!***************************!*\\\n  !*** ./src/processors.js ***!\n  \\***************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>ie,AutoProcessor:()=>ye,BeitFeatureExtractor:()=>H,BitImageProcessor:()=>$,CLIPFeatureExtractor:()=>S,CLIPImageProcessor:()=>P,ChineseCLIPFeatureExtractor:()=>E,ClapFeatureExtractor:()=>oe,ConvNextFeatureExtractor:()=>A,ConvNextImageProcessor:()=>I,DPTFeatureExtractor:()=>T,DPTImageProcessor:()=>k,DeiTFeatureExtractor:()=>W,DetrFeatureExtractor:()=>Y,DonutFeatureExtractor:()=>X,DonutImageProcessor:()=>K,EfficientNetImageProcessor:()=>B,FeatureExtractor:()=>y,Florence2Processor:()=>we,GLPNFeatureExtractor:()=>C,ImageFeatureExtractor:()=>b,MaskFormerFeatureExtractor:()=>Z,MobileNetV1FeatureExtractor:()=>L,MobileNetV2FeatureExtractor:()=>D,MobileNetV3FeatureExtractor:()=>R,MobileNetV4FeatureExtractor:()=>N,MobileViTFeatureExtractor:()=>V,MobileViTImageProcessor:()=>j,NougatImageProcessor:()=>Q,OwlViTFeatureExtractor:()=>q,OwlViTProcessor:()=>_e,Owlv2ImageProcessor:()=>G,Processor:()=>ce,PvtImageProcessor:()=>M,PyAnnoteFeatureExtractor:()=>le,PyAnnoteProcessor:()=>fe,RTDetrImageProcessor:()=>U,SamImageProcessor:()=>ee,SamProcessor:()=>pe,SapiensFeatureExtractor:()=>v,SeamlessM4TFeatureExtractor:()=>se,SegformerFeatureExtractor:()=>x,SiglipImageProcessor:()=>F,SpeechT5FeatureExtractor:()=>de,SpeechT5Processor:()=>ge,Swin2SRImageProcessor:()=>te,ViTFeatureExtractor:()=>z,ViTImageProcessor:()=>O,VitMatteImageProcessor:()=>ne,Wav2Vec2FeatureExtractor:()=>ae,Wav2Vec2ProcessorWithLM:()=>me,WeSpeakerFeatureExtractor:()=>ue,WhisperFeatureExtractor:()=>re,WhisperProcessor:()=>he,YolosFeatureExtractor:()=>J});const r=n(/*! ./utils/generic.js */\"./src/utils/generic.js\"),a=n(/*! ./utils/core.js */\"./src/utils/core.js\"),s=n(/*! ./utils/hub.js */\"./src/utils/hub.js\"),i=n(/*! ./utils/maths.js */\"./src/utils/maths.js\"),o=n(/*! ./utils/tensor.js */\"./src/utils/tensor.js\"),l=(n(/*! ./utils/image.js */\"./src/utils/image.js\"),n(/*! ./utils/audio.js */\"./src/utils/audio.js\"));function u([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function d(e,t=.5,n=null,r=!1){const a=e.logits,s=e.pred_boxes,[o,l,d]=a.dims;if(null!==n&&n.length!==o)throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\");const c=[];for(let e=0;e<o;++e){const o=null!==n?n[e]:null,p={boxes:[],classes:[],scores:[]},h=a[e],m=s[e];for(let e=0;e<l;++e){let n,a=h[e],s=[];if(r){n=a.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&s.push(e)}else{const e=(0,i.max)(a.data)[1];if(e===d-1)continue;if(n=(0,i.softmax)(a.data),n[e]<t)continue;s.push(e)}for(const t of s){let r=m[e].data;r=u(r),null!==o&&(r=r.map(((e,t)=>e*o[(t+1)%2]))),p.boxes.push(r),p.classes.push(t),p.scores.push(n[t])}}c.push(p)}return c}function c(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\");const a=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let s=n[e];null!==r&&(s=(0,o.interpolate)(s,r,\"bilinear\",!1));const[i,l]=r??s.dims.slice(-2),u=new o.Tensor(\"int32\",new Int32Array(i*l),[i,l]),d=s[0].data,c=u.data;for(let e=1;e<s.dims[0];++e){const t=s[e].data;for(let n=0;n<t.length;++n)t[n]>d[n]&&(d[n]=t[n],c[n]=e)}const p=new Array(s.dims[0]);for(let e=0;e<c.length;++e){const t=c[e];p[t]=t}const h=p.filter((e=>void 0!==e));a.push({segmentation:u,labels:h})}return a}function p(e,t,n,r){const a=[],s=[],o=[];for(let l=0;l<e.dims[0];++l){const u=e[l],d=t[l],c=(0,i.max)(u.data)[1];if(c===r)continue;const p=(0,i.softmax)(u.data)[c];p>n&&(a.push(d),s.push(p),o.push(c))}return[a,s,o]}function h(e,t,n,r=.5,a=.8){const s=[];let i=0,o=0;const l=t[n].data;for(let t=0;t<e.length;++t)e[t]===n&&(s.push(t),++i),l[t]>=r&&++o;let u=i>0&&o>0;if(u){u=i/o>a}return[u,s]}function m(e,t,n,r,a,s=null,i=null){const[l,u]=i??e[0].dims,d=new o.Tensor(\"int32\",new Int32Array(l*u),[l,u]),c=[];if(null!==i)for(let t=0;t<e.length;++t)e[t]=(0,o.interpolate)(e[t],i,\"bilinear\",!1);const p=new Int32Array(e[0].data.length),m=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){const r=t[n];const a=e[n].data;for(let e=0;e<a.length;++e)a[e]*=r,a[e]>m[e]&&(p[e]=n,m[e]=a[e])}let f=0;const g=d.data;for(let s=0;s<n.length;++s){const i=n[s],[o,l]=h(p,e,s,r,a);if(o){++f;for(const e of l)g[e]=f;c.push({id:f,label_id:i,score:t[s]})}}return[d,c]}function f(e,t=.5,n=.5,r=.8,a=null,s=null){null===a&&(console.warn(\"`label_ids_to_fuse` unset. No instance will be fused.\"),a=new Set);const i=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[u,d,c]=i.dims;if(c-=1,null!==s&&s.length!==u)throw Error(\"Make sure that you pass in as many target sizes as the batch dimension of the logits\");const h=[];for(let e=0;e<u;++e){const u=null!==s?s[e]:null,d=i[e],f=l[e],[g,_,w]=p(d,f,t,c);if(0===w.length){const[e,t]=u??f.dims.slice(-2),n=new o.Tensor(\"int32\",new Int32Array(e*t).fill(-1),[e,t]);h.push({segmentation:n,segments_info:[]});continue}const[y,b]=m(g,_,w,n,r,a,u);h.push({segmentation:y,segments_info:b})}return h}function g(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \\`read_audio(url, sampling_rate)\\` to obtain the raw audio data of the file/url.`)}function _(e,t,n=0,r=null){const a=e/t;let s=(0,i.bankers_round)(a)*t;return null!==r&&s>r&&(s=Math.floor(a)*t),s<n&&(s=Math.ceil(a)*t),s}function w([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}class y extends r.Callable{constructor(e){super(),this.config=e}}class b extends y{constructor(e){super(e),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(e,t,n=2){const r=e.height,a=e.width,s=t.height,i=t.width;let o=Math.min(r,s),l=Math.min(a,i);return o===r&&l===a?e:(r>a?l=Math.floor(a*o/r):a>r&&(o=Math.floor(r*l/a)),await e.resize(l,o,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,i.min)(n.data)[0],a=(0,i.max)(n.data)[0]-r;if(0===a)return e;const s=t/255;let o=n.width,l=n.height,u=0,d=0;const c=n.data;for(let e=0;e<n.height;++e){const t=e*n.width;for(let i=0;i<n.width;++i)(c[t+i]-r)/a<s&&(o=Math.min(o,i),l=Math.min(l,e),u=Math.max(u,i),d=Math.max(d,e))}return e=await e.crop([o,l,u,d])}pad_image(e,t,n,{mode:r=\"constant\",center:s=!1,constant_values:i=0}={}){const[o,l,u]=t;let d,c;if(\"number\"==typeof n?(d=n,c=n):(d=n.width,c=n.height),d!==l||c!==o){const n=new Float32Array(d*c*u);if(Array.isArray(i))for(let e=0;e<n.length;++e)n[e]=i[e%u];else 0!==i&&n.fill(i);const[p,h]=s?[Math.floor((d-l)/2),Math.floor((c-o)/2)]:[0,0];for(let t=0;t<o;++t){const r=(t+h)*d,a=t*l;for(let t=0;t<l;++t){const s=(r+t+p)*u,i=(a+t)*u;for(let t=0;t<u;++t)n[s+t]=e[i+t]}}if(\"symmetric\"===r){if(s)throw new Error(\"`center` padding is not supported when `mode` is set to `symmetric`.\");const t=o-1,r=l-1;for(let s=0;s<c;++s){const i=s*d,c=(0,a.calculateReflectOffset)(s,t)*l;for(let t=0;t<d;++t){if(s<o&&t<l)continue;const d=(i+t)*u,p=(c+(0,a.calculateReflectOffset)(t,r))*u;for(let t=0;t<u;++t)n[d+t]=e[p+t]}}}e=n,t=[c,d,u]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let a,s;if(this.do_thumbnail){const{height:e,width:n}=t;a=Math.min(e,n)}else Number.isInteger(t)?(a=t,s=this.config.max_size??a):void 0!==t&&(a=t.shortest_edge,s=t.longest_edge);if(void 0!==a||void 0!==s){const e=void 0===a?1:Math.max(a/n,a/r),t=n*e,i=r*e,o=void 0===s?1:Math.min(s/t,s/i);let l=Math.floor(Number((t*o).toFixed(2))),u=Math.floor(Number((i*o).toFixed(2)));return void 0!==this.size_divisibility&&([l,u]=w([l,u],this.size_divisibility)),[l,u]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,a=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=a/r,s=e/n;Math.abs(1-s)<Math.abs(1-t)?t=s:s=t,a=_(t*r,this.config.en