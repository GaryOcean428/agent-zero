"""Security framework for Gary-Zero.

This module provides comprehensive security features including input validation,
rate limiting, authentication, audit logging, and approval workflows.
"""

from .approval_config import (
    ApprovalConfigManager,
    get_config_manager,
    setup_approval_workflow_from_config,
)
from .approval_decorators import (
    ApprovalRequired,
    approval_context,
    get_global_approval_workflow,
    make_tool_approval_aware,
    request_batch_approval,
    require_approval,
    set_global_approval_workflow,
)
from .approval_workflow import (
    ActionDefinition,
    ApprovalPolicy,
    ApprovalRequest,
    ApprovalStatus,
    ApprovalWorkflow,
    RiskLevel,
    UserRole,
)
from .audit_logger import AuditEvent, AuditEventType, AuditLevel, AuditLogger
from .input_validator import InputValidator, ValidationError
from .rate_limiter import (
    RateLimitConfig,
    RateLimiter,
    RateLimitExceeded,
    RateLimitStrategy,
)
from .sanitizer import ContentSanitizer
from .secret_helpers import (
    SecretStoreIntegration,
    get_anthropic_api_key,
    get_api_key,
    get_auth_credentials,
    get_database_url,
    get_e2b_api_key,
    get_gemini_api_key,
    get_google_api_key,
    get_groq_api_key,
    get_huggingface_token,
    get_jwt_secret,
    get_kali_credentials,
    get_openai_api_key,
    get_perplexity_api_key,
    get_session_secret,
    get_supabase_config,
    get_webhook_url,
    migrate_environment_secrets,
    require_api_key,
)
from .secret_store import (
    AccessLevel,
    InternalSecretStore,
    SecretAccessDeniedError,
    SecretAlreadyExistsError,
    SecretMetadata,
    SecretNotFoundError,
    SecretStoreConfig,
    SecretStoreError,
    SecretType,
    StoredSecret,
    get_secret,
    get_secret_store,
    initialize_from_environment,
    store_secret,
)

__all__ = [
    "InputValidator",
    "ValidationError",
    "RateLimiter",
    "RateLimitExceeded",
    "RateLimitConfig",
    "RateLimitStrategy",
    "AuditLogger",
    "AuditEvent",
    "AuditEventType",
    "AuditLevel",
    "ContentSanitizer",
    "ApprovalWorkflow",
    "ApprovalRequest",
    "ActionDefinition",
    "RiskLevel",
    "ApprovalStatus",
    "UserRole",
    "ApprovalPolicy",
    "require_approval",
    "ApprovalRequired",
    "approval_context",
    "set_global_approval_workflow",
    "get_global_approval_workflow",
    "make_tool_approval_aware",
    "request_batch_approval",
    "ApprovalConfigManager",
    "get_config_manager",
    "setup_approval_workflow_from_config",
    # Secret Store exports
    "AccessLevel",
    "InternalSecretStore",
    "SecretMetadata",
    "SecretStoreConfig",
    "SecretStoreError",
    "SecretNotFoundError",
    "SecretAccessDeniedError",
    "SecretAlreadyExistsError",
    "SecretType",
    "StoredSecret",
    "get_secret",
    "get_secret_store",
    "initialize_from_environment",
    "store_secret",
    # Secret Helper exports
    "SecretStoreIntegration",
    "get_api_key",
    "get_anthropic_api_key",
    "get_auth_credentials",
    "get_database_url",
    "get_e2b_api_key",
    "get_gemini_api_key",
    "get_google_api_key",
    "get_groq_api_key",
    "get_huggingface_token",
    "get_jwt_secret",
    "get_kali_credentials",
    "get_openai_api_key",
    "get_perplexity_api_key",
    "get_session_secret",
    "get_supabase_config",
    "get_webhook_url",
    "migrate_environment_secrets",
    "require_api_key",
]
