default_language_version:
  python: python3.13

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first
      - id: requirements-txt-fixer

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.4
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.0
    hooks:
      - id: mypy
        additional_dependencies: [
          types-requests,
          types-PyYAML,
          types-python-dateutil,
          types-setuptools
        ]
        args: [--ignore-missing-imports, --no-strict-optional, --show-error-codes]
        exclude: ^(tests/|docs/|examples/|scripts/)

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-x', 'tests/,docs/,examples/']
        exclude: ^tests/

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            .*\.lock$|
            .*\.log$|
            .*\.json$|
            .*requirements.*\.txt$|
            .*/tests/.*|
            .*/logs/.*|
            .*/tmp/.*
          )$

  # Frontend linting
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.12.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@9.12.0
          - '@eslint/js@9.12.0'

  # Test execution
  - repo: local
    hooks:
      - id: vitest-check
        name: Vitest test runner
        entry: npm run test:run
        language: system
        pass_filenames: false
        always_run: true

      - id: typescript-check
        name: TypeScript type check
        entry: npm run tsc:check
        language: system
        pass_filenames: false
        always_run: true

      - id: agent-os-validate
        name: Agent OS validation
        entry: bash scripts/agent_os_check.sh
        language: system
        pass_filenames: false
        always_run: true

      - id: security-check
        name: Security dependency check
        entry: bash -c 'pip install safety && safety check --json || true'
        language: system
        pass_filenames: false
        always_run: true
